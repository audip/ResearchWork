-- phpMyAdmin SQL Dump
-- version 4.2.7.1
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Feb 03, 2015 at 10:28 AM
-- Server version: 5.6.20
-- PHP Version: 5.5.15

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `msr`
--

-- --------------------------------------------------------

--
-- Table structure for table `Comments`
--

CREATE TABLE IF NOT EXISTS `Comments` (
  `Id` int(8) DEFAULT NULL,
  `PostId` int(8) DEFAULT NULL,
  `Score` int(2) DEFAULT NULL,
  `Text` varchar(600) DEFAULT NULL,
  `CreationDate` varchar(19) DEFAULT NULL,
  `UserDisplayName` varchar(10) DEFAULT NULL,
  `UserId` int(7) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `Comments`
--

INSERT INTO `Comments` (`Id`, `PostId`, `Score`, `Text`, `CreationDate`, `UserDisplayName`, `UserId`) VALUES
(19520544, 14107418, 0, 'Interesting, although created_at does show ms resolution, when I have a datetime field in my model, save it, and reload it, it looses ms resolution.', '2013-01-01 02:48:24', '', 785494),
(19520579, 14107418, 0, 'That is: The problem isn''t in created_at, but is in other fields.', '2013-01-01 02:54:56', '', 785494),
(19520628, 14107418, 0, 'I only used `created_at` as that''s what I had handy. Where are you losing precision? Before it goes into the database? In the database? After you pull it out?', '2013-01-01 03:07:18', '', 479863),
(19520632, 14107418, 0, 'And what happens if you convert the string to a `DateTime` or `ActiveSupport::TimeWithZone` or whatever yourself rather than letting AR do it?', '2013-01-01 03:08:29', '', 479863),
(19521068, 14107804, 2, 'Why? Why would `10.0.0.0` be a natural choice?', '2013-01-01 04:26:54', '', 927034),
(19521080, 14107804, 1, 'FYI: that [tag:history] tag says: _"DO NOT USE - Removed as part of "The great Stack Overflow tag/question cleanup of 2012" - See link in Tag Wiki for more information."_', '2013-01-01 04:28:26', '', 1212960),
(19521103, 14107826, 4, 'When you lift entire posts, especially ones that say things like ''I know that ...'', it is your duty to make it clear that you are in fact quoting somebody else.', '2013-01-01 04:32:41', '', 207421),
(19521170, 14107826, 1, 'Sorry EJP i have edited it and given the courtesy.\nHowever i have given the link to the post.', '2013-01-01 04:47:17', '', 1882084),
(19521216, 14107804, 1, 'K-ballo: Thought 10 was a low number that was maybe more likely to be chosen (plus the fact that we use decimal numbers in everyday life). But I guess the real reason is what Sahu provided below.', '2013-01-01 04:54:37', '', 1939277),
(19521252, 14107928, 2, 'More at http://dev.mysql.com/doc/mysql/en/mysqldump.html', '2013-01-01 05:01:14', '', 348312),
(19521416, 14107928, 0, 'I am getting syntax error,my username is root and password is nothing this is my command, mysqldump -u root -p -d xyz_db  | mysql -u root -p -Dnew_db. something wrong with my command?', '2013-01-01 05:27:03', '', 1705804),
(19521851, 14107979, 0, 'What do you mean by "rectangular or circular"? Do you want a specific area blurred in the shape of a circle?', '2013-01-01 06:25:02', '', 1085937),
(19522005, 14107979, 0, 'yup... i want to blur specific area rect/cir', '2013-01-01 06:37:35', '', 1917782),
(19522023, 14107979, 0, 'will the area and appearance of the shape be fixed or dynamic throughout the lifetime of the application?', '2013-01-01 06:38:50', '', 1085937),
(19522181, 14107979, 1, 'try this http://stackoverflow.com/a/13316837/1099453', '2013-01-01 06:52:17', '', 1099453),
(19522384, 14107979, 2, 'I was looking for the same question 2 weeks ago, but could not found the suitable solution for this, I worked alot on it and got it by myself.', '2013-01-01 07:12:40', '', 1343688),
(19522407, 14107979, 0, '@Jeeter - area and appearance of the shape is dynamic', '2013-01-01 07:14:07', '', 1917782),
(19522450, 14107979, 0, '@iPatel i have a code which blurs the portion on touching that portion', '2013-01-01 07:17:59', '', 1099453),
(19522505, 14107979, 0, '@Dhara- please put your code in answer :)', '2013-01-01 07:23:45', '', 1917782),
(19523121, 14107979, 0, '@iPatel i have posted my code.Let me know if you have any problems', '2013-01-01 08:36:31', '', 1099453),
(19523400, 14109187, 0, 'you should post a comment on that article or ping him to answer here.', '2013-01-01 09:09:22', '', 379693),
(19523679, 14109166, 0, 'Do I have to expect any problems from this solution?\n\nWhat about the software which expects 866 console? Could you give examples of such software?', '2013-01-01 09:40:55', '', 1251169),
(19523802, 14109099, 1, 'Also, review eclipse.ini. You can add the -vm parameter just in case', '2013-01-01 09:52:48', '', 39261),
(19524082, 14109137, 0, 'yes I checked in this way, I see same error', '2013-01-01 10:20:07', '', 1070732),
(19524088, 14109099, 0, '@aldrinleal  How to add -vm parameter, please guide me.', '2013-01-01 10:20:52', '', 1070732),
(19524103, 14109099, 1, 'Sure:\n\nhttp://wiki.eclipse.org/Eclipse.ini', '2013-01-01 10:22:04', '', 39261),
(19524246, 14109099, 0, '@aldrinleal Yes!!! it worked for me, thanks!', '2013-01-01 10:38:18', '', 1070732),
(19524311, 14109724, 0, 'Indentation is not optional in Makefiles. Is what you have exactly as you posted it or did whitespace get munged?', '2013-01-01 10:44:41', '', 635608),
(19524377, 14109724, 0, 'I got it as I wrote.', '2013-01-01 10:49:31', '', 1827257),
(19524798, 14109166, 1, 'I would guess, if there is any software which expects specific 866 symbols, they would be passed incorrectly, because UTF-8 and 866 share only ascii symbols. If there is such risk - why not to use chcp 65001?', '2013-01-01 11:26:28', '', 1868397),
(19524872, 14109796, 0, 'Thank you, now it works :)', '2013-01-01 11:32:12', '', 1827257),
(19525139, 14110096, 0, 'Thanks asgoth! Is this the right way for having a post request with CSRF-Token being set? Or should I create a hidden form and submit the form with studentIds on ng-click() ? But in that case, how can i get the response data? Thanks again!', '2013-01-01 11:56:39', '', 1300302),
(19525178, 14109166, 0, 'Because sometimes i need to use another (cross-platform) software which expects unicode like in *nix.', '2013-01-01 11:59:57', '', 1251169),
(19525228, 14110096, 0, 'I''ve added a quote from angular itself.', '2013-01-01 12:05:00', '', 1916258),
(19525467, 14110148, 0, 'no i have few data elements see my question', '2013-01-01 12:22:59', '', 63898),
(19525582, 14108694, 0, 'thanks for help me .... but i got error....i cant get imageWithGaussianBlur9 method', '2013-01-01 12:32:10', '', 1917782),
(19525665, 14108694, 0, 'okay...problem is clear ...heartly thanks for hel me ...but if i want to show rectangular part that selected by user for blur this area ?? how it is possible ? nd thanks again', '2013-01-01 12:38:00', '', 1917782),
(19525672, 14108694, 0, 'thats a UIImage catagory class method. I that in mentioned in discription', '2013-01-01 12:38:26', '', 1343688),
(19525706, 14108694, 0, 'circleSizeH, circleSizeW are controlling the size of cropped image. you can change 30x30 to 50x30 or anything else you want', '2013-01-01 12:41:11', '', 1343688),
(19525728, 14108694, 0, 'change to radius value 4 to 0 for Rectangle', '2013-01-01 12:42:47', '', 1343688),
(19525956, 14110148, 2, 'in this case, you may use the `--jsonArray` option. try `mongoimport --db DATABASE_NAME --collection COLLECTION_NAME --file YOUR_JSON_FILE --jsonArray`.', '2013-01-01 13:01:45', '', 693110),
(19526029, 14109036, 0, 'thanks for help me ....but in your code which framwork i need to add ??? #import <QuartzCore/QuartzCore.h> ??? or other ??', '2013-01-01 13:07:35', '', 1917782),
(19526066, 14110096, 0, 'Thanks asgoth! Will try that!', '2013-01-01 13:10:35', '', 1300302),
(19526805, 14110148, 0, 'hi i got somethihg but still error:\nmongoimport  --collection ping_collaction --file  group_result31.12.2012.json --jsonArray\nTue Jan 01 16:04:53 exception:JSONArray file too large\nTue Jan 01 16:04:53 warning: log line attempted (16384k) over max size(10k), printing beginning and end ...\n... some json ...\nTue Jan 01 16:04:53 imported 0 objects\nTue Jan 01 16:04:53 ERROR: encountered 1 error', '2013-01-01 14:06:10', '', 63898),
(19526893, 14109024, 1, '866 is a code page for Cyrillic script.  Changing it is quite liable to break any old console mode program that expect that page to be the default.  It is not like you won''t notice, you can''t read the program''s output anymore.', '2013-01-01 14:11:45', '', 17034),
(19527053, 14110148, 0, 'the warning is no problem, just telling your it shortened the line to keep log file smaller. To the first error, as @WPCoder suggests in another answer, is there any record that are larger than 16MB?', '2013-01-01 14:21:42', '', 693110),
(19527232, 14109166, 0, 'Create batches with chcp for programs which require other encoding.', '2013-01-01 14:33:44', '', 1868397),
(19527264, 14110148, 0, 'ok sorry for the begginer questions , but what does mongoDB see as record? the total file is 80 mega', '2013-01-01 14:35:39', '', 63898),
(19527358, 14110148, 0, 'yes its bigger then 16 , is there something to do ?\nmybe other tool ? or other DB that support json', '2013-01-01 14:43:14', '', 63898),
(19527563, 14110096, 0, 'Glad it helped you! Don''t forget to upvote/accept :)', '2013-01-01 15:02:35', '', 1916258),
(19527622, 14109796, 1, 'An upvote (click the up arrow) would be appreciated :-)', '2013-01-01 15:07:43', '', 648658),
(19527853, 14108694, 0, '// croppedImg = [croppedImg imageWithContrast:50];\nplease give info, about this method', '2013-01-01 15:23:12', '', 1917782),
(19527950, 14111651, 0, 'what if i want them to reflect each other, if a bar gets added that should modify db as well ?', '2013-01-01 15:30:34', '', 106261),
(19527969, 14111686, 0, '+1 The objects which are retained are those accessible from thread roots so they cannot be GCed by definition.', '2013-01-01 15:31:53', '', 57695),
(19528106, 14111651, 0, '@NimChimpsky: In a bidirectional relationship, when you change Foo.bars, then you should be changing Bar.foos correspondingly, so you shouldn''t care about what gets saved in the DB when you modify what. The "ownership" concept is only about database organization, and your code should be completely ignorant of it.', '2013-01-01 15:40:06', '', 839646),
(19528115, 14111651, 0, 'You have a bidirectional association: when you add a bar to a foo, also add the foo to the bar.', '2013-01-01 15:40:37', '', 571407),
(19528120, 14111686, 1, 'Hm, I suspected something like this, but the problem I have is that there is no explicit reference (i.e. a variable) pointing to the created object at any point. Does that mean that, as far as the GC is concerned, as long as the object is used in a statement (such as calling a method on the object with the `.` operator), that counts as implicitly holding a reference to the object?', '2013-01-01 15:40:59', '', 595306),
(19528129, 14111670, 0, '-1: mappedBy doesn''t indicate which table has a foreign key, and it has nothing to do with cascades.', '2013-01-01 15:41:44', '', 571407),
(19528158, 14111677, 0, 'Are you using the Exchange service?  What''s your question?', '2013-01-01 15:43:17', '', 789657),
(19528376, 14111831, 0, 'Depending on what you need, maybe you can grab an existing library to do the work for you?', '2013-01-01 16:01:45', '', 14637),
(19528398, 14111831, 0, '@Thomas you know a C/C++ lib that is tiny and compact ? there are many horrible libraries ...', '2013-01-01 16:03:21', '', 1824407),
(19528423, 14111831, 0, 'No first-hand experience, sorry. But I reckon it''ll take you at least a few months of fulltime work to do better.', '2013-01-01 16:04:45', '', 14637),
(19528514, 14111686, 3, 'You still have the this reference. That counts as a normal reference.', '2013-01-01 16:12:33', '', 1029890),
(19528585, 14111831, 0, 'What platform are you developing for?  If MacOSX or iOS this is trivial,  otherwise - as already suggested  - this a a lot of work.', '2013-01-01 16:16:22', '', 450758),
(19528627, 14108694, 0, 'https://github.com/coryleach/UIImageAdjust check this link', '2013-01-01 16:19:48', '', 1343688),
(19528700, 14111831, 0, '@Marko my point is not to target a platform but to target the pdf itself, i was planning to code this with standard and portable C++ or C ANSI', '2013-01-01 16:24:45', '', 1824407),
(19528773, 14112064, 0, 'for what i know the PDF file format can contain a lot of other things that are not really that PS alike such as bitmap images and videos. PS is a language for printers basically that was redictered to monitors, but i think that PDF is more like a container.', '2013-01-01 16:28:53', '', 1824407),
(19528792, 14112064, 0, 'also that gnupdf is GPLv3 so it''s useless.', '2013-01-01 16:29:57', '', 1824407),
(19528860, 14112064, 0, 'If you don''t want an open source library, then perhaps this would work: http://www.adobe.com/devnet/pdf/library.html\nI''ve just updated the answer itself with information regarding "it is not postscript". If you think that''s wrong, then please point me to a more accurate provider of information.', '2013-01-01 16:35:15', '', 1919155),
(19528912, 14112064, 1, 'the problem it''s not that is opensource ( actually it''s a +1 ) the problem is the GPL and its viral license.', '2013-01-01 16:38:53', '', 1824407),
(19529092, 14112064, 0, 'Ok, there are others around... http://pdf-house.blogspot.co.uk/ seems to have a decent list.', '2013-01-01 16:50:28', '', 1919155),
(19529556, 14111021, 0, 'So the extension methods, how extensive are they? Lets say I need to get the state of another entity in my extension? That is my biggest concern right now. You mind showing some examples of extension methods?', '2013-01-01 17:20:51', '', 148601),
(19529628, 14112515, 0, 'Looks like a no-op i.e if a is the same as b then do nothing; you could possibly add a javadoc there but I can''t think of any other use', '2013-01-01 17:25:40', '', 788109),
(19529629, 14112515, 8, 'no, there is no situation for this to be useful. why? if I got a dime for every thing I don''t understand in Java :)', '2013-01-01 17:25:43', '', 1180720),
(19529652, 14112515, 4, 'The general rule is semicolon(;) completes the statement. So nothing happens after that `if`', '2013-01-01 17:27:19', '', 1389394),
(19529662, 14112534, 0, 'possible, but bad style', '2013-01-01 17:27:44', '', 1180720),
(19529680, 14112534, 4, '@gefei - it''s *horrible* style as far as I''m concerned.', '2013-01-01 17:28:52', '', 453277),
(19529705, 14112534, 12, 'You could do the same with just `a() && b();`.', '2013-01-01 17:30:31', '', 53114),
(19529734, 14112534, 0, '@Gumbo - I suppose the `if` might indicate intent at little more.', '2013-01-01 17:31:50', '', 453277),
(19529768, 14112534, 2, 'No, it just makes a future reader confused as to whether this is a typo. Why not just be super clear and only a tiny bit more verbose? `if(!a()) b();`', '2013-01-01 17:34:10', '', 1076640),
(19529780, 14112534, 0, '@yshavit - see my earlier comment, i.e. "this is horrible style". I wouldn''t use this construct in any form.', '2013-01-01 17:35:10', '', 453277),
(19529792, 14112534, 1, 'Ah yeah, sorry, missed that that was you :)', '2013-01-01 17:35:41', '', 1076640),
(19529889, 14112545, 5, '`println("a now equals b");`', '2013-01-01 17:41:17', '', 486504),
(19530046, 14111021, 0, 'http://ayende.com/blog/153473/taking-a-look-at-s-arp-lite-part-iindash-the-domain  and http://ayende.com/blog/153569/taking-a-look-at-s-arp-litendash-final-thoughts.  (These are reviews of a architecture(Framework?) called s#arp lite.  Mostly good but he disagrees with the repositories and CUD abstractions).', '2013-01-01 17:51:09', '', 1579698),
(19530093, 14112532, 4, 'Even the simplest solution, using a code formatter, would deal with this problem. The statement that was intended to be inside the if would have appeared at the same indentation as the if.', '2013-01-01 17:54:47', '', 1798593),
(19530161, 14112532, 0, 'Sure, but I recommend to use both formatter and static code analysis.', '2013-01-01 17:59:50', '', 1911306),
(19530302, 14112752, 0, 'That was quick. As I thought, it would not be possible. Currently I come up with a solution by having just that BasicViewController class and have additional property to indicate which "class"/"mode" it will be acting as. Thanks anyway.', '2013-01-01 18:11:23', '', 737888),
(19530310, 14111679, 0, 'For the record, the equivalent construction in the Microsoft CLR *can* be collected while the method is still executing. See [When does an object become eligible for garbage collection?](http://blogs.msdn.com/b/oldnewthing/archive/2010/08/10/10048149.aspx)', '2013-01-01 18:12:06', '', 128397),
(19530344, 14112929, 2, 'But in use you have to have those 3 parameters to get the unique one - dbs also often use btrees not hashes so accessing the key costs no less and having a separate unique id is an overhead. There is an unresolved debate in in design between those who prefer generated ids and those who want physical keys which leads to composite keys.', '2013-01-01 18:13:58', '', 151019),
(19530377, 14112839, 2, 'You should define a surrogate primary key, then redefine your existing composite as a unique (natural, or business) key. This leads to a cleaner, more maintainable database design.', '2013-01-01 18:16:19', '', 680925),
(19530411, 14112929, 0, 'An index on a single numeric column is faster, and takes less space than an index on 3 columns. And that''s the index that will be used the most in the application. Also see the additional point I have added to my answer. I have seen people using those kinds of composite PKs, and leading to tables with a 9-column primary key being just a reference to another table, and 1 or 2 functional columns. It was horrible.', '2013-01-01 18:19:15', '', 571407),
(19530416, 14112929, 4, 'I was going to +1 this, but then you added the last bullet point and now I want to +10 it. Anyone who has faced the horrible problem of ''cascading composite keys'' will really start to appreciate simple surrogate keys as an essential part of database design.', '2013-01-01 18:19:35', '', 680925),
(19530467, 14111679, 1, 'Possible duplicate: [Does the object which is the entry point of a Java program get garbage collected?](http://stackoverflow.com/questions/8699755/does-the-object-which-is-the-entry-point-of-a-java-program-get-garbage-collected?)', '2013-01-01 18:23:36', '', 128397),
(19530652, 14112929, 2, 'What about simple many-to-many link tables? They don''t have most of these problems and the obvious way to make them on the DB level is to have a composite primary key of all the fields.', '2013-01-01 18:37:56', '', 227267),
(19530687, 14112929, 0, 'Hibernate uses a composite key in this case. Bu they aren''t referenced by any other table, and they''re limited to two columns. If it was mapped as an entity (and would thus have two ManyToOne associations), I would add a surrogate key to the table.', '2013-01-01 18:40:15', '', 571407),
(19530777, 14112929, 0, 'I think that the 4th bullet is the most important one :), and -alone- it''s enough to mark *natural keys* deprecated.', '2013-01-01 18:45:59', '', 258289),
(19530952, 14112515, 1, 'Aha! This is the kind of fault that the Python syntax  - with visual indentation showing block extents, that makes this kind of error less likely to happen in Python as, in general, if a block of code is not indented to be with in an if statement, then it isn''t in the if statement.', '2013-01-01 18:57:25', '', 10562),
(19531005, 14113278, 1, 'webstorage doesnt support json but strings , so you can base64 encode your imagez and serve them back as dataurls.', '2013-01-01 19:01:18', '', 750852),
(19531012, 14113102, 0, 'thanks, I am still confused, I understand the <select> code will go in _form.html.erb but where will that select("Contact",) code go ?', '2013-01-01 19:01:59', '', 692622),
(19531041, 14113150, 0, 'so the model will be contact.rb, but where should I put that drop down logic ? sorry for naive question, I am new to RoR development', '2013-01-01 19:03:49', '', 692622),
(19531300, 14113278, 0, 'Ok, but probably not optimal (or within quota) for 20MB of imagery, that actually are slippy map tiles, that need to be fetched & displayed rapidly by a LEAFLET map application as you zoom and pan.', '2013-01-01 19:22:00', '', 959460),
(19531338, 14113278, 0, 'The research you''ve done is quite helpful.', '2013-01-01 19:24:26', '', 1737568),
(19531390, 14113278, 0, 'my point is you dont need to deal with binary blobs if you are using png images.', '2013-01-01 19:29:07', '', 750852),
(19531420, 14113278, 0, 'You are right, would you mind if I update the document to reflect your input?', '2013-01-01 19:32:24', '', 959460),
(19531461, 14113461, 1, 'when I did git reset --hard origin/master, it seemed to only partially work. This is the output. error: unable to unlink old ''.gitignore'' (Permission denied)\nerror: unable to create file CONTRIBUTING.md (Permission denied)\nChecking out files: 100% (2493/2493), done.\nfatal: Could not reset index file to revision ''origin/master''.', '2013-01-01 19:34:32', '', 1647484),
(19531473, 14113461, 0, 'then the brew update failed', '2013-01-01 19:35:15', '', 1647484),
(19531479, 14113421, 1, 'I started programming in FORTRAN in 1968 using a card-punch. So stone-age solutions are not new to me.', '2013-01-01 19:35:39', '', 959460),
(19531486, 14113461, 2, 'It means your permissions are screwed. One way would be to run `sudo git reset --hard`, other and a better way would be to fix permissions and do `chown -R <your_username> $(brew --prefix)/.git`', '2013-01-01 19:36:00', '', 1070354),
(19531507, 14113461, 0, 'This is how permissions on my brew prefix look like here: `drwxrwxr-x  16 root  admin  646 Dec 27 20:30 /usr/local/`', '2013-01-01 19:37:04', '', 1070354),
(19531524, 14113461, 0, 'Basically all directories belong to ''admin'' group (which your user by default belongs to) and group has read-write permissions on everything brew-related', '2013-01-01 19:37:56', '', 1070354),
(19531562, 14113461, 0, 'I did chown -R <your_username> $(brew --prefix)/.git but got the same fail message on brew update. Do you know what I check what the permissions are to see if they look like yours?', '2013-01-01 19:40:31', '', 1647484),
(19531822, 14112582, 8, 'still `if(a!=b)` seems to be more readable', '2013-01-01 19:56:41', '', 1911306),
(19531826, 14113150, 0, 'Your question is OK . If you take a look at the structure of your `app/views/contacts` , you''ll find a file `_form.html.erb` . You can try to place it there . This "partial view" is in charge of both creating and updating actions of the scaffold you''ve generated.', '2013-01-01 19:56:53', '', 646198),
(19531830, 14111831, 0, 'In response to your original question: use the ISO 32000-1:2008 standard as reference and keep an eye on the development of ISO 32000-2. If you want to do Adobe specific development, additionally have a look at the Adobe supplements to the norm.', '2013-01-01 19:57:18', '', 1729265),
(19531833, 14111679, 0, '@DanielPryden - Perhaps both questions are asking the same thing but this question is asked with much more clarity and has yielded more useful answers than the referenced question.', '2013-01-01 19:57:33', '', 528214),
(19531841, 14112752, 0, '@verdy: How about accepting an answer for once, since this one was both quick and good!', '2013-01-01 19:57:50', '', 1075405),
(19531918, 14112582, 2, '@DeMoon sure. I said it was not good :)', '2013-01-01 20:03:33', '', 1180720),
(19531953, 14111679, 0, '@dj18: Agreed -- and that''s why I didn''t vote to close.  But I felt that the cross reference was a useful addition, so I added a comment.', '2013-01-01 20:06:27', '', 128397),
(19532637, 14113691, 3, 'It''s certainly *possible* but it will probably take considerable work.  Take a look at http://stackoverflow.com/questions/2181902/how-to-use-an-image-as-a-point-in-ggplot and also look at `multsymbolbox` in the `plotrix` package', '2013-01-01 20:52:02', '', 190277),
(19532672, 14109166, 7, 'I''m confused by your posts, Doctor Coder. You said you wanted Unicode in console windows system wide. algirdas has shown you how to do that, but now you''re saying that you don''t want all console windows to use Unicode because you''re concerned with compatibility. You don''t know which apps won''t be compatible, but you''re still concerned.  Since you don''t want all console Windows to use Unicode as you originally asked, can you help us understand what it is you do want so that we can help you?', '2013-01-01 20:53:52', '', 1858241),
(19532895, 14111677, 0, 'I supposed my question is, do I need to do something about this?  I''m not using the Exchange service.', '2013-01-01 21:08:18', '', 197606),
(19533204, 14111677, 0, 'Nothing to worry about.  It''s a bug in the platform.  I believe it''s an emulator thing but Googling should reveal more if you''re curious.', '2013-01-01 21:31:26', '', 789657),
(19533250, 14114419, 1, 'thanks, let me give it a shot!', '2013-01-01 21:34:46', '', 2321939),
(19533264, 14114419, 0, 'He was specifically asking for spaces to be replaced with hyphens...', '2013-01-01 21:36:14', '', 1052743),
(19533270, 14114430, 0, 'ill try this too!', '2013-01-01 21:36:28', '', 2321939),
(19533276, 14114419, 0, '@Artaex Media Sorry, missed that part!', '2013-01-01 21:36:52', '', 1726801),
(19533297, 14114419, 1, 'ill mark this as answer, thanks a lot!', '2013-01-01 21:38:15', '', 2321939),
(19533313, 14114419, 0, '+1 for putting it in a function!', '2013-01-01 21:39:00', '', 2321939),
(19533330, 14114419, 0, '7 mins till i can mark it :)', '2013-01-01 21:39:54', '', 2321939),
(19533337, 14114419, 0, '@fermionoid No problem! Good luck! :)', '2013-01-01 21:40:11', '', 1726801),
(19533397, 14114450, 0, 'I am leaning towards your suggestion, but I am waiting to hear from others. I don''t have handy android, but it would be good to create a jsBin or jsFiddle and see what works on the Android.', '2013-01-01 21:44:12', '', 959460),
(19533427, 14114419, 0, 'Hey, just a quick question, how can I prevent 2 hyphens from being next to each other? and have them replaced with just 1? Thanks in advance!', '2013-01-01 21:46:43', '', 2321939),
(19533445, 14114443, 0, 'thanks, i''ll save this too, i''ve upvoted it but sorry, the other guy got there first :(', '2013-01-01 21:47:56', '', 2321939),
(19533462, 14114419, 0, 'Edited answer. :)', '2013-01-01 21:48:45', '', 1726801),
(19533505, 14114419, 0, 'oh, sorry, I should have been more specific, how would i prevent 2 or more hyphens from being together so this could be 3,4,5 etc :) thanks a lot!', '2013-01-01 21:51:40', '', 2321939),
(19533513, 14114419, 0, 'I just fixed that, check my answer again!', '2013-01-01 21:52:23', '', 1726801),
(19533554, 14111828, 1, 'Thanks Tomas. Your answer cleared up a few doubts. As much as I like this feature, it remains mysterious to me. The lack of documentation (or even semantics) is the main problem.', '2013-01-01 21:54:58', '', 634025),
(19533584, 14114419, 0, 'hey umm the last part that replaces the hyphens doesn''t work, when I put this function on the site, it says that it has a null value... oh well, the first one is good enough, I hope 2 or 3 -- together don''t make much of a difference.', '2013-01-01 21:57:05', '', 2321939),
(19533610, 14114419, 0, 'Sorry! My bad, fixed in my answer, again. Haha!', '2013-01-01 21:58:19', '', 1726801),
(19533620, 14114419, 1, 'PERFECT! thanks a million!', '2013-01-01 21:59:19', '', 2321939),
(19533697, 14114480, 2, 'This is definitely the best formulated question I''ve ever seen, on any site', '2013-01-01 22:04:44', '', 1654265),
(19533788, 14114419, 0, '@all Please note this won''t work with UTF-8', '2013-01-01 22:11:07', '', 1208233),
(19533825, 14114480, 0, '@AndreaLigios I''ve had to answer a far few, I should know the rules and how to "ask a decent question" :p', '2013-01-01 22:13:02', '', 588306),
(19533849, 14114480, 0, '@Deanna when you create the keystore, should you have -trustedcacerts in the options so that it will validate the cert using the trusted certs? (neve worked with BKS guessing based on core java similarities)', '2013-01-01 22:14:12', '', 465582),
(19533867, 14114419, 0, '@metal_fan what would that mean... i mean how bad can it be?', '2013-01-01 22:15:21', '', 2321939),
(19533987, 14114480, 0, '@Deanna apologies, typo. Should be -trustcacerts. Hopefully this works, if not I''ll leave it to people who have actually used BKS', '2013-01-01 22:22:47', '', 465582),
(19534050, 14114786, 1, 'oooo ,It''s just a dumb questions , haha :) Thank you so much, I will accept your answer as soon as possible :)', '2013-01-01 22:27:50', '', 1022209),
(19534196, 14114443, 0, 'No problem :-), and he also *did* wrap the code in a function, which I did not.', '2013-01-01 22:37:28', '', 1428679),
(19534302, 14114480, 0, 'I''ve tried adding and trusting the two CA certs above it to the keystore too but with the same result :|.', '2013-01-01 22:45:54', '', 588306),
(19534473, 14114741, 2, 'That''s a really good point.  Someone should point that out to Kenneth Reitz--or maybe submit a pull request to the project?', '2013-01-01 22:56:55', '', 1351335),
(19534589, 14112064, 3, 'There are actually HUGE differences between PostScript and PDF. Calling PostScript PDF with compression on top is not giving much credit to either language. The biggest difference perhaps is that PostScript is a true programming language, while PDF is not. That is an enormous difference and explains why PDF is the format used (there are clearly other reasons too) today while PostScript is going away.', '2013-01-01 23:04:11', '', 1682924),
(19534616, 14112064, 0, 'Perhaps sloppy use of language - it is BASED on PostScript, and you need a pretty good part of a PostScript interpreter to implement PDF rendering - at least that is my understanding, if you can explain it better, feel free to write a better answer.', '2013-01-01 23:06:17', '', 1919155),
(19534668, 14112532, 6, 'You CAN''T avoid this by using the braces, because an accidental semicolon after the close paren, and before the open brace, is a syntactically valid program ... and probably not what you wanted.  I agree however that a code for matter might help avoid this problem.', '2013-01-01 23:09:38', '', 1758051),
(19534751, 14112064, 2, 'No, you actually don''t. The problem with PostScript is that it is in fact a programming language and you need code that will execute the program (that every PostScript file is) and allow it to generate its output. PDF is much, much simpler and contains only very simple instructions like "move text origin", "draw rectangle", "set fill color", "set font"... It''s a really a different animal altogether. (and I just finished writing a background answer on the specification that should help him :))', '2013-01-01 23:15:16', '', 1682924),
(19534801, 14112064, 0, 'OK, fair enough. Wikipedia has it wrong. But we both agree on the fact that it''s a pretty poor idea to try to implement your own PDF code, which is the main point of what I write.', '2013-01-01 23:19:03', '', 1919155),
(19535098, 14115314, 0, 'I believe it''s `-pthread` and `-std=c++11`', '2013-01-01 23:44:01', '', 1381108),
(19535210, 14115375, 4, 'Jquery supports more complex selectors, as well as it supports BC to the old browsers.', '2013-01-01 23:55:41', '', 251311),
(19535211, 14115375, 8, 'jQuery uses Sizzle as selector engine which provides all sorts of extensions to the "normal" CSS selectors. `document.querySelector()` is not supported in IE6 and IE7 (I think). Related (maybe): [John Resig - Thoughts on querySelectorAll](http://ejohn.org/blog/thoughts-on-queryselectorall/).', '2013-01-01 23:55:46', '', 218196),
(19535223, 14115375, 0, 'Oh, so could I still do nested selectors like `document.querySelector("#myId .myNested .mySpan p")`? Or is that what you mean by "complex selectors"?', '2013-01-01 23:56:57', '', 1672778),
(19535236, 14115375, 0, '@ModernDesigner: how about `:eq(n)` and, say, `:parent`?', '2013-01-01 23:58:28', '', 251311),
(19535237, 14115375, 0, '@Modern: Any CSS selector is supported by `querySelector` afaik and this is one. It''s not a "nested" selector though, it''s the descendant selector applied multiple times.', '2013-01-01 23:58:28', '', 218196),
(19535254, 14115375, 0, '@zerkms, than what do you mean by "complex selectors"?', '2013-01-01 23:59:39', '', 1672778),
(19535267, 14115375, 0, '@ModernDesigner: I meant selectors that aren''t part of specification, but which make life easier. `:selected` is another good example', '2013-01-02 00:00:56', '', 251311),
(19535274, 14115375, 0, 'Oh, okay! Thanks! :-)', '2013-01-02 00:01:41', '', 1672778),
(19535278, 14115375, 4, 'From what I can see, `querySelector()` only returns the first match, whereas jQuery returns all elements it can match.', '2013-01-02 00:01:53', '', 234932),
(19535287, 14115375, 0, 'Oouch! Well that would be a deal breaker. Hehe.', '2013-01-02 00:02:25', '', 1672778),
(19535359, 14111686, 0, 'A quote from the JLS would get you a +1 (if I can find one I''ll add it later).', '2013-01-02 00:08:39', '', 476716),
(19535369, 14114741, 1, '@jdotjdot: Something like `requests.get(...).save(''file.txt'')`?', '2013-01-02 00:09:39', '', 464744),
(19535420, 14115375, 0, '@ModernDesigner: Well, some of the time yeah. :)', '2013-01-02 00:13:54', '', 234932),
(19535438, 14111021, 0, 'Its NHibernate based. Don''t you got any examples using EF? And again when I need to call another entity how is that made best in the static extension method?', '2013-01-02 00:15:27', '', 148601),
(19535683, 14113691, 5, 'This sort of diagram flunks the Tufte test.  Too much ink for too little info.  Worse, it''s difficult to tell whether one car, e.g., is worth more than one train.', '2013-01-02 00:33:33', '', 884372),
(19535919, 14114741, 3, 'Just a note--in the latest versions of requests, the prefetch arg has been changed to stream. So stream=True would be used here.', '2013-01-02 00:54:37', '', 1695245),
(19535966, 14115406, 0, '+1, but usage example is unnecessary.  As you show it can be used, but it''s far from the best way to organize that code.  It''s ugly, but there''s no reason to special case it in order to reject -- at least from the compiler''s POV. From a stle POV...', '2013-01-02 00:58:52', '', 234954),
(19535988, 14111686, 0, 'Please do.  I''m not interested in looking.', '2013-01-02 01:01:44', '', 37213),
(19536005, 14115375, 9, '@bvukelic: That''s why there''s `querySelectorAll`.', '2013-01-02 01:03:19', '', 200291),
(19536015, 14115375, 0, 'So that would match all elements... ? :)', '2013-01-02 01:04:27', '', 1672778),
(19536022, 14115375, 0, 'Yes, `querySelectorAll` will return a list of all elements that match the selector. The main downside of `querySelectorAll` (and `querySelector`) in my view is that it''s not supported by older browsers.', '2013-01-02 01:05:01', '', 200291),
(19536078, 14115375, 2, 'What there is "non-constructive" of requesting finite number of differences of `.querySelector` vs. `$`?', '2013-01-02 01:10:11', '', 936986),
(19536147, 14115620, 2, 'This article it may help you : http://msdn.microsoft.com/en-us/magazine/gg598924.aspx', '2013-01-02 01:16:16', '', 159270),
(19536151, 14114480, 0, 'So the error is occurring on Windows 8? Or on the android device?', '2013-01-02 01:16:46', '', 238704),
(19536158, 14112549, 0, '+1, most clear and concise explanation of why it is this way without presuming knowledge.', '2013-01-02 01:17:37', '', 180736),
(19536194, 14113691, 1, 'true may be good in science journal, but still may be useful in house / parliament floor, business meeting or general public meetings.', '2013-01-02 01:20:18', '', 1368828),
(19536268, 14115902, 7, '`{} != ({})` is a syntax error.', '2013-01-02 01:26:16', '', 1917390),
(19536322, 14115620, 1, 'Thanks. Definitely a good read, although it doesn''t answer my question.', '2013-01-02 01:30:43', '', 46926),
(19536323, 14115902, 0, '`1` and `{}` are quite different beasts.', '2013-01-02 01:30:46', '', 560648),
(19536345, 14115902, 0, 'By the way the same applies to arrays for similar reasons (because arrays are also objects): `[] != []` is true.', '2013-01-02 01:33:06', '', 567595),
(19536393, 14115902, 0, 'Check out [Bizzare Javascript Behaviours](http://stackoverflow.com/questions/9032856/what-is-the-explanation-for-these-bizarre-javascript-behaviours-mentioned-in-the), with its [amazingly detailed answer](http://stackoverflow.com/questions/9032856/what-is-the-explanation-for-these-bizarre-javascript-behaviours-mentioned-in-the#answer-9033306).', '2013-01-02 01:37:33', '', 825568),
(19536458, 14116003, 1, 'There was actually [an article](http://isocpp.org/blog/2012/12/using-constexpr) on this posted not too long ago.', '2013-01-02 01:42:58', '', 962089),
(19536469, 14116003, 0, 'thanks for one, but I''m looking for a more comprehensive answer :)', '2013-01-02 01:43:35', '', 395573),
(19536484, 14116003, 7, '`constexpr` creates a compile-time constant; `const` simply means that value cannot be changed.', '2013-01-02 01:44:46', '', 701092),
(19536521, 14114741, 1, 'Fantastic. Thank you for explaining the correlation to urllib as well.', '2013-01-02 01:49:29', '', 197663),
(19536807, 14113278, 0, 'Also check out my library https://bitbucket.org/ytkyaw/ydn-db/wiki/Home', '2013-01-02 02:16:37', '', 824275),
(19537001, 14115349, 0, 'This doesn''t work for me. See my edit for the error message that I am now getting.', '2013-01-02 02:34:19', '', 2874),
(19537007, 14112929, 0, '@MattiVirkkunen - most ORM frameworks automatically map link tables, aka there are no physical entities created to represent them.', '2013-01-02 02:34:37', '', 680925),
(19537114, 14112064, 0, '@MatsPetersson: Please do not answer a technical question on StackOverflow by (badly) quoting or referring to Wikipedia. Nothing good in favor of your reputation can come from this... I''d even like to ask you to delete your above answer -- it is so utterly wrong and can lead people down the wrong path!', '2013-01-02 02:44:47', '', 359307),
(19537178, 14111831, 2, '@all_those_who_vote_to_close_question_as_not_constructive (Daniel Fischer, Flexo, C. Ross, Bo Persson, Matthew Lundberg): this question was a very valid one, and closing it was in fact very unconstructive.  And the justification you picked for it is ridiculous. None of you has so far collected any significant reputation points with [pdf] -- so why do you not leave this question to people who know the topic better than you?!?', '2013-01-02 02:52:12', '', 359307),
(19537232, 14115349, 3, 'You are not using the system clang, you''re using the homebrew clang. For whatever reason, it''s looking for libc++ at /usr/include/c++/v1, which is the location they recommend to install it on linux. On OS X, it''s stored in /usr/lib/c++/v1, which is where the system clang would look.', '2013-01-02 02:58:58', '', 47453),
(19537239, 14115349, 0, 'Yes, I mentioned that in my comment. Can I not use libc++ and homebrew clang?', '2013-01-02 02:59:51', '', 2874),
(19537270, 14115349, 0, 'It appears that the homebrew build scripts don''t allow you to fix the location of the libc++ libraries...', '2013-01-02 03:02:58', '', 47453),
(19537277, 14115349, 0, 'Thanks for pointing that out, using the system clang results in everything working fine.', '2013-01-02 03:04:03', '', 2874),
(19537281, 14116420, 0, 'AFAIK, `-lmylib`.', '2013-01-02 03:04:13', '', 962089),
(19537347, 14116420, 0, '@chris I have made the question more clear -lmylib does not change the situation', '2013-01-02 03:11:48', '', 989331),
(19537379, 14116420, 2, 'The static s may be initialized anywhere from before main until the first call to a function within that translation unit... that means that never instantiating s is valid according to the standard, given that no function from that translation unit is ever called.', '2013-01-02 03:15:08', '', 927034),
(19537387, 14116420, 0, '+1, I ran into exactly the same situation a couple of weeks ago. I had some small libraries and a bigger one using all smaller ones (well, not necessarily by calling methods of them; it "bundled" them together). The final application should then use the bigger library as well as the smaller ones "bundled" with it, but they weren''t there, because the bigger one didn''t use them. I did a workaround by introducing a dummy method in the small libraries and used them in the bigger one... Dirty hack! :\\ I''m looking forward to see a good answer to this question :)', '2013-01-02 03:15:41', '', 592323),
(19537437, 14116420, 0, '@K-ballo but the constructor S::S() *is* called from the translation unit which defines S . Or am I missing something in your comment?', '2013-01-02 03:21:13', '', 989331),
(19537446, 14116420, 2, 'You are missing the fact that a perfectly conformant implementation can instantiate its globals right before the first function from that translation unit is called, which in your case is never...', '2013-01-02 03:22:32', '', 927034),
(19537507, 14114741, 1, '@Blender I''m thinking more like `requests.get(...).save_as(''file.jpg'')`--want to make it as obvious as possible what''s going on, and "save as" is more associated with a possible change in filename.  Additionally, maybe a `stream=False` argument or something similar.', '2013-01-02 03:29:44', '', 1351335),
(19538008, 14109036, 0, 'yes #import <QuartzCore/QuartzCore.h> and also include CoreImage & QuartzCore Frameworks', '2013-01-02 04:19:55', '', 1099453),
(19538042, 14109036, 0, 'okay...tanks :)', '2013-01-02 04:22:58', '', 1917782),
(19538154, 14112582, 2, 'Code like this can actually prevent errors in logic by accounting for all cases.  "If true do nothing, else..." can be more readable since you don''t get confused by negation mistakes and a "missing case".  Most compilers these days are aware of this construct and invert for you anyway for a speed improvement.  e.g. The Mercury language enforces this!', '2013-01-02 04:33:54', '', 1327079),
(19538486, 14113596, 0, 'Thanks Michael, I edited the question and have put another code which worked for me, so just wondering what is the difference in using Select and collection_select as mentioned in below answers ?', '2013-01-02 05:01:14', '', 692622),
(19538824, 14117121, 0, 'IMO the "not necessarily evaluated at compile time" is less helpful than thinking of them as "evaluated at compile time".  The constraints on a constant expression mean that it would be relatively easy for a compiler to evaluate it.  A compiler must complain if those constraints are not satisfied.  Since there are no side effects, you can never tell a difference whether a compiler "evaluated" it or not.', '2013-01-02 05:27:01', '', 459640),
(19538934, 14117121, 2, '@aschepler Sure. My main point there is that if you call a `constexpr` function on a non-constant expression, e.g. an ordinary variable, this is perfectly legal and the function will be used like any other function. It will not be evaluated at compile time (because it can''t). Perhaps you think that''s obvious -- but if I stated that a function declared as `constexpr` will always be evaluated at compile-time, it could be interpreted in the wrong way.', '2013-01-02 05:34:47', '', 777186),
(19539004, 14117121, 1, 'Yes, I was talking about `constexpr` objects, not functions.  I like to think of `constexpr` on objects as forcing compile time evaluation of values, and `constexpr` on functions as allowing the function to be evaluated at compile time or run time as appropriate.', '2013-01-02 05:38:50', '', 459640),
(19539060, 14117121, 0, 'That''s true. Good comment.', '2013-01-02 05:42:41', '', 777186),
(19539636, 14117348, 1, 'Thank you, wow that was under 20 minutes to get an answer :) !', '2013-01-02 06:22:42', '', 212012),
(19539958, 14117348, 2, 'You''re welcome :) This Q just happened to be there when I was doing my periodic rounds - you wont always be that lucky :)', '2013-01-02 06:42:32', '', 85785),
(19540189, 14109166, 0, 'It''s just that I had a chain of thought. After that i realized that there is no ideal. Now I would like to evaluate the likelihood of problems by following the advice of algirdas. I''ve found one: ipython (interactive console for developing in Python) refuses to run in Unicode console. Where can i expect more problems?', '2013-01-02 06:56:58', '', 1251169),
(19541799, 14112532, 1, 'have to vote for this joint red bug .... +1 (and nice answer )', '2013-01-02 08:38:02', '', 1723893),
(19541856, 14114480, 0, '@GregS The erorr is occuring on the Android device. Windows 8 is used for development and to create the key store.', '2013-01-02 08:41:36', '', 588306),
(19541889, 14116462, 0, 'I''m already using 1.45 (I used 1.47 initially, see the question) will 1.46 make a difference? Bear in mind that I''m currently targetting Android 2.3 that seems to use 1.45.', '2013-01-02 08:43:35', '', 588306),
(19542380, 14119294, 1, 'thank you for your quick answer!', '2013-01-02 09:10:42', '', 1218067),
(19542449, 14119294, 0, '@MehmetBudak, you are welcome', '2013-01-02 09:13:23', '', 961113),
(19542670, 14119297, 0, 'thank you for your answer!', '2013-01-02 09:23:55', '', 1218067),
(19543278, 14116420, 0, 'You can create a script on bash for selecting libraries what you want to use.', '2013-01-02 09:49:28', '', 1929959),
(19543894, 14112532, 1, '+1 a nice answer and a big Giant _Trademarked_ Bug. :D', '2013-01-02 10:15:12', '', 1423083),
(19543958, 14120223, 0, 'Is this different from [Why would one replace default new and delete operators?](http://stackoverflow.com/questions/7149461/why-would-one-replace-default-new-and-delete-operators). The Q asked in title is answered by the linked answer. But your Q detail asks another specific Q. Both are quite distinct Q''s.', '2013-01-02 10:17:42', '', 452307),
(19543990, 14120223, 0, '@AlokSave The default ones are different from member ones, so yes. This is about the specific case when a special `operator delete`, not the default one, is chosen by a virtual destructor.', '2013-01-02 10:18:59', '', 153285),
(19544000, 14115911, 1, 'Aren''t you supposed to use `===` in Javascript to check on references?', '2013-01-02 10:19:32', '', 344945),
(19544024, 14120223, 0, '@AlokSave Oh, I see. Since that answer (and others there) is a bit long, maybe you could copy over the parts that are relevant to this Q?', '2013-01-02 10:20:30', '', 153285),
(19544027, 14120223, 0, 'The same reasons do hold good for member overloads as well. No? Guess you saw it after your first comment and while I was writing this comment.This comment needs to go..It will in sometime.', '2013-01-02 10:20:33', '', 452307),
(19544030, 14115911, 2, '@Kevin: `===` is about types. Objects are always compared by references', '2013-01-02 10:20:41', '', 251311),
(19544080, 14120223, 1, '@AlokSave Well, no. Overriding the global one means getting a new/better overall allocation algorithm. Overloading class-specific ones means making different classes do different things, perhaps calling through to the global one. I''m asking about the case where a derived class does something different from its base, which is yet more specific, yet has dedicated semantic machinery in the language spec.', '2013-01-02 10:22:47', '', 153285),
(19544151, 14120223, 0, 'I understand but Overloading class specific ones is also possible for collecting usage statistics, usability errors and so on. Which may not be motivation for doing something special(*as you rightly pointed out*) but yet useful sometimes.', '2013-01-02 10:25:10', '', 452307),
(19544385, 14120223, 0, '@AlokSave Sounds plausible, but to be an answer, we''d still need to contrive a diagnostic that relies on dispatching to a specific `operator delete` in this way.', '2013-01-02 10:33:48', '', 153285),
(19544496, 14115300, 0, '"This code is useful" <- How could it be useful to ignore the result of a condition?', '2013-01-02 10:37:56', '', 1389219),
(19544819, 14120721, 1, 'thanks, i used this way\n`18] pry(main)> Date.new(2012,11,-1)\n=> Fri, 30 Nov 2012`', '2013-01-02 10:49:55', '', 1600336),
(19545136, 14120721, 0, 'Already done....', '2013-01-02 11:01:20', '', 1600336),
(19545208, 14120721, 0, 'one more question, is there any way to get amount of days in month?', '2013-01-02 11:03:54', '', 1600336),
(19545305, 14120711, 0, 'Maybe it''s a `NOP`? Does it end at the same address?', '2013-01-02 11:07:27', '', 249230),
(19545413, 14120721, 0, 'Yes you can use `Date.new(year, month, -1).day` well I know you can understand the parameters already =)', '2013-01-02 11:11:47', '', 877819),
(19545491, 14116462, 0, 'Hmmm, I did not try with 1.45 version but I can say that your project successfully loads keystore created by 1.46 version.', '2013-01-02 11:14:41', '', 183915),
(19545738, 14120711, 0, 'The number 1234567 is the real result, or a mock-up number for illustrative purposes?', '2013-01-02 11:26:53', '', 1284631),
(19546120, 14115980, 1, 'Your java code goes to 2-18 whereas the Clojure code goes to 2-20.', '2013-01-02 11:43:45', '', 553209),
(19546968, 14120227, 0, 'What do you do for service layer?', '2013-01-02 12:16:48', '', 148601),
(19548753, 14118242, 0, 'thanks it will go right to floor @fpdr thanks for asking', '2013-01-02 13:21:57', '', 1368828),
(19549175, 14118242, 0, '@shNIL I am surprised  that they ask for such diagram!', '2013-01-02 13:36:07', '', 1838509),
(19549785, 14112515, 0, '@gefei : _there is no situation for this to be useful_, true. But there can be situation(s) where this can(or be used to) impact the program. please see my answer.', '2013-01-02 13:58:40', '', 1423083),
(19549821, 14120711, 0, 'My first guess would be that you aren''t looking at the System.map file which correspond to the running kernel.', '2013-01-02 13:59:59', '', 136208),
(19550029, 14120227, 0, 'Controllers query repo for read-only data, why add some extra layer? The other possibility is using "ContentService" which more and more tends to be a service-level-repository: GetXByY, etc.etc. For modification operations - application services are just abstractions over use cases - they use BL and repo freely..', '2013-01-02 14:08:09', '', 731115),
(19550092, 14120711, 0, 'Not sure why you get the same output for the three different lines of code.', '2013-01-02 14:11:14', '', 412080),
(19550402, 14114450, 1, 'These two blob are different. Sqlite blob is arraybuffer in javascript, while js blob has no equivalent in sqlite. Blob cannot convert to arraybuffer, although it can be structurally cloned.', '2013-01-02 14:24:11', '', 824275),
(19550619, 14120711, 0, '@MaximYegorushkin: at least for the last two LOCs, this is explainable: the same would have happen if tasklest_action would have been defined as an array: char tasklet_action[10]; normally, only tasklet_action should mean the address, but compilers (gcc) usually give &tasklet_action the same value (the address); a bit unsure why, still (as &tasklet_action should bear no more meaning than &3.0)... as for the dereferenced tasklet_action, indeed it is a bit strange.', '2013-01-02 14:33:27', '', 1284631);
INSERT INTO `Comments` (`Id`, `PostId`, `Score`, `Text`, `CreationDate`, `UserDisplayName`, `UserId`) VALUES
(19550855, 14120227, 0, 'I''m used to do service layer for business logic. I''m not really sure I follow what you with ContentService, please elaborate. Would it be bad practice to do helper classes as "service layer"?', '2013-01-02 14:42:31', '', 148601),
(19551451, 14120711, 1, 'What architecture are you running the kernel on?', '2013-01-02 15:04:35', '', 1057909),
(19552421, 14112534, 2, '@Gumbo - Are you sure that works? My Java is rusty but I couldn''t get a() && b() to work: http://ideone.com/beVwPe', '2013-01-02 15:41:16', '', 453277),
(19553222, 14120711, 0, '@axeoth: An expression of function type (such as a function name) decays to a pointer to the function in most contexts, but not when it''s an operand of unary `&`. So `func`, `&func`, and `*func`, as well as `**func` and `***func`, all have the same type and value, namely the address of `func`. There''s nothing compiler-specific about it; the C language defines it that way. But the OP''s question is why the address he''s seeing doesn''t match the one in `System.map`.', '2013-01-02 16:10:25', '', 827263),
(19553511, 14112534, 2, '@TimMedora My fault, I mixed something up (i.e. *Assignment* and *AssignmentExpression* production rules) and haven’t actually tested it (probably because other languages allow such statements). A *Statement* allows only the former *Assignment* while the mentioned expression `a() && b()` would be an *AssignmentExpression*.', '2013-01-02 16:21:25', '', 53114),
(19554353, 14125030, 1, '(+1) Out of interest, what exactly is the "mode" encoded by the bottom bit?', '2013-01-02 16:49:12', '', 367273),
(19554523, 14116462, 0, 'Here it is : http://dl.dropbox.com/u/26734922/keystore', '2013-01-02 16:55:26', '', 183915),
(19556755, 14120711, 0, '@KeithThompson: thank you for pointing that out.', '2013-01-02 18:21:37', '', 1284631),
(19559991, 14120227, 0, 'By ''service layer'' I meant ''application services''. They can use repository and any other public part of domain layer. "Service layer" isn''t bad practice, but I''d avoid making XService class just to provide List<X> result. Comment field seems to be too short to describe services in details, sorry.', '2013-01-02 20:34:34', '', 731115),
(19562947, 14113461, 0, 'You did replace <your_username> with your username, right? :) Other than that, you need to fix the permissions to your user for every file that you get Permission denied for.', '2013-01-02 22:29:16', '', 1070354),
(19564052, 14115944, 0, 'Wow, very useful info. Thank you so much for this! :-)', '2013-01-02 23:27:26', '', 1672778),
(19565057, 14116462, 0, 'Thanks, using 1.46 fixed the version problem. I''ve written up a full solution/explanation below.', '2013-01-03 00:32:35', '', 588306),
(19565234, 14116215, 1, 'I need to say I find this a bit sad. It seems to suggest that one must sacrifice functional features for performance. If one has to write C-style code to get performance, then the compiler needs work doesn''t it ?', '2013-01-03 00:45:57', '', 811381),
(19565835, 14112752, 1, 'thanks @Filip  - happy new year!', '2013-01-03 01:30:07', '', 1168440),
(19566021, 14116215, 6, 'Maybe it is a bit sad, but it is also a fact of life: higher level languages features often come with cost/overhead that you must pay for. I''m sure more clever work could be done on the compiler but you can''t change the fact that a lazy data structure will always have more overhead than an equivalent non-lazy one, for example.', '2013-01-03 01:47:02', '', 214010),
(19569295, 14127382, 0, 'Okay, after adding that last edit and playing around a bit more, I managed to get all my versions straight and things are now working.  Seem my problems were a combination of going back to a project that was built using an older version of rails and my own lack of knowledge of the build process.  Learning lots...thanks!', '2013-01-03 06:06:35', '', 1143970),
(19572046, 14130068, 1, 'Actually I was waiting for your answer. Do you have your IL DSL document or publish anywhere? It would be a very good example to gain understanding and inspiration. The trick with `Quote` member will be helpful too. Thanks.', '2013-01-03 08:39:31', '', 634025),
(19576971, 14120227, 0, 'What if, lets say a cart calculation and you need to get application settings parameters and specific customer parameters to make a calculation, and this is reused on several places in the application. How do you handle that situation? helper class or application service?', '2013-01-03 11:41:41', '', 148601),
(19578357, 14108430, 0, '_"What I do not understand is why this is treated differently in the Windows 8 app than the Windows Phone app, so that line-for-line identical code works on one platform but fails on another."_ - that is basically said because your code states _what_ it wants to do, but in a sense not _how_. It''s up to the runtime ([WinRT](http://msdn.microsoft.com/en-us/library/windows/apps/br211377.aspx) or [CoreCRL](http://blogs.msdn.com/b/dotnet/archive/2012/10/30/announcing-the-release-of-the-net-framework-for-windows-phone-8.aspx)) it''s running in how framework calls will be executed.', '2013-01-03 12:34:58', '', 266143),
(19578398, 14108430, 0, 'But if you can create a reproducible test case (ideally with some serverside code to generate the cookies triggering the issue), feel free to do so and perhaps someone can suggest a workaround and/or file a bug with MS.', '2013-01-03 12:36:25', '', 266143),
(19585667, 14125030, 1, 'It''s ARM mode vs. Thumb mode.', '2013-01-03 16:40:30', '', 1057909),
(19585845, 14125030, 3, 'Originally there was only ARM mode, then a whole different instruction set was invented called "Thumb" and was meant to make programs smaller (at the expense of some speed). Obviously, it''s very important that you know what sort of instructions are used in a function before you get there (or else the program will crash hard) so the bottom bit of the function pointer is set to a 1. This means functions coded in ARM can call functions coded in Thumb, and it all just works.', '2013-01-03 16:46:34', '', 1057909),
(19588170, 14108430, 0, 'I have added some more info/code. I am not sure how, if this is truly a bug in the framework, more people have not encountered it. It seems like it would affect a lot of apps.', '2013-01-03 18:05:13', '', 66613),
(19589766, 14113278, 0, 'I updated the post with new information I found out about lawnchair, IDB polyfill, and pouch, as well as the fact that the Chrome folks are definitely going to add blob support to Chrome. I am now doing some performance testing of FileSystemAPI versus IDB.', '2013-01-03 19:02:22', '', 959460),
(19590925, 14120227, 0, 'That surely depends. That should be either ''order'' entity or ''calculation'' service. If you mean such services - they are called ''domain services'' and implement some processes which do not fit a particular entity. That''s ok to introduce them when needed, and as far as they live at domain level, they also can freely use repository.', '2013-01-03 19:47:04', '', 731115),
(19595495, 14130068, 1, '@pad - No, it''s not currently published anywhere - it''s really just a very simple proof of concept with a lot of limitations.  I''ll try to clean it up a bit and get it out in some form in the near future.', '2013-01-03 22:45:06', '', 82959),
(19600280, 14115980, 0, 'Sorry, I''ve fixed it. I had mistakenly pasted the wrong version of the code but the timings were accurate for both going up to 20.', '2013-01-04 05:08:54', '', 1054469),
(19600296, 14111831, 0, '@KurtPfeifle "Where do I get the specs" is not a specific programming problem. So it''s off topic on SO. Not all valid questions are on topic here. (That the question was closed as Not Constructive doesn''t mean all of us picked that reason. However, shopping list questions - and this can also be viewed as one without too much of a stretch - are generally considered NC, so it''s not ridiculous, though IMO not the best reason.)', '2013-01-04 05:10:08', '', 1011995),
(19603746, 14110890, 0, 'You might want to read this http://www.sapiensworks.com/blog/post/2012/04/15/The-Repository-Pattern-Vs-ORM.aspx', '2013-01-04 08:23:35', '', 1017868),
(19607816, 14111831, 0, '@DanielFischer: SO is also for *newbie* developers. And even the most senior C# or Haskell expert may happen to get tasked for his first time to create software that has to handle PDF documents. So where else but to SO should he turn to in order to ask such a question? Please?', '2013-01-04 11:03:39', '', 359307),
(19608042, 14111831, 0, '@DanielFischer: Also, this question does not match either of the following exclusion criteria from the FAQ: (a) *chatty, open-ended question*; (b) *unpractical, unanswerable question*; (c) *question is not about a problem the programmer faces*. -- OTOH, it meats the following inclusion criteria: (a) *practical, answerable problem unique to the programming profession*; (b) *(software) tool commonly used by (PDF) programmers*. DanielFischer: please re-consider your vote.', '2013-01-04 11:11:53', '', 359307),
(19608099, 14111831, 0, '@DanielFischer: re. your point about *''shopping list''*... It''s not that there are dozens of different versions of the PDF file format specification by different competing vendors, ya know? The question was about two different versions of the ''same thing'' (which in the case of PDF may indeed be very confusing to newbie PDF programmers).', '2013-01-04 11:14:20', '', 359307),
(19608138, 14111831, 0, '@KurtPfeifle I don''t follow. Newbieness has nothing to do with it. "Where do I get the specs" is off topic on SO, regardless of whether it''s the PDF specification, the C standard, or the Haskell report (or whatever). So if I can, I post a helpful comment, and vote to close.', '2013-01-04 11:15:45', '', 1011995),
(19608280, 14111831, 0, '@KurtPfeifle There''s only one specification (I think), but there may be dozens of places where one may get it. (But I agree, it''s not a question I would consider a shopping list question.) However, getting the specification is not a _programming_ problem (those start soon after).', '2013-01-04 11:21:31', '', 1011995),
(19608285, 14111831, 0, '@DanielFischer: Well, (even if I would accept your argument) in this case you didn''t post a helpful comment but voted to close it anyway. :-(   -', '2013-01-04 11:21:34', '', 359307),
(19608320, 14111831, 0, '@KurtPfeifle a) I don''t know where to get the PDF spec, b) David van Driessche had already answered that.', '2013-01-04 11:22:42', '', 1011995),
(19608395, 14111831, 0, '@DanielFischer: In a previous comment you rate the question as a *"shopping list question without too much of a stretch"*. In your last comment you say *" it''s not a question I would consider a shopping list question"*. Ok, I know now clearly what your arguments are...', '2013-01-04 11:25:01', '', 359307),
(19608404, 14111831, 0, '@KurtPfeifle But convince me. What is so good about this question that it needs to be open on SO?', '2013-01-04 11:25:14', '', 1011995),
(19608428, 14111831, 0, '@KurtPfeifle _without too much of a stretch_ means I see how one can consider it such, not that I do consider it such.', '2013-01-04 11:26:06', '', 1011995),
(19608454, 14111831, 0, '@DanielFischer: Yes, David van Driessche (who is a real PDF guru, BTW) has answered the question. But he could only do so while the question was not yet closed...', '2013-01-04 11:26:38', '', 359307),
(19608520, 14111831, 0, 'let us [continue this discussion in chat](http://chat.stackoverflow.com/rooms/22176/discussion-between-daniel-fischer-and-kurt-pfeifle)', '2013-01-04 11:28:56', '', 1011995),
(19631030, 14154890, 0, 'Trying to upgrade rails 2 app in preparation to upgrade to rails 3 - and ran into this problem and after some hair pulling I tried this and it worked! Yea!', '2013-01-05 04:04:01', '', 207605),
(19632368, 14162208, 0, 'Linking an additional CSS is just an example. As I''ve said, there are many changes and they are diverse. I cannot predict them to take into account in templates. But I''d like any post/page to be able to change it''s layout a bit.', '2013-01-05 06:06:33', '', 1175083),
(19633489, 14162208, 2, 'Well, your need then is out of scope for Jekyll, if you cannot predict which places to change or can''t add the needed logic to the layouts for new posts, then Jekyll won''t fit you — it''s just a convenient static blog engine that can be expanded _a bit_. And what you need is a complex configurable solution. However, I doubt that there are any that would be at the same time as much as good as Jekyll is for blogging. So, if you need both, I''ll recommend forget about tuning layout by tuning the post alone and make appropriate changes to layouts each time you need something different.', '2013-01-05 07:58:56', '', 885556),
(19637705, 14111831, 0, 'I thought this was a really good question. Yes, SO is about development questions, but the person asking this question was actually smart enough to inquire about the framework around his development rather than blundering into things and asking 10 stupid questions on SO because they didn''t think before starting. Lets not forget that development starts by doing your research; I would actually award extra points to someone who thinks before doing. Questions about the fundaments of your development for me definitely qualify as development questions... Oh, and it''s a *smart* question!', '2013-01-05 13:42:33', '', 1682924),
(19644656, 14112582, 1, '@tudor I would say even for that use case, it''d be better to do `if (a==b) { // do nothing } else { doSomething(); }`, since it''s more obvious that the no-op is on purpose and not a typo.', '2013-01-05 20:36:02', '', 1076640),
(19648349, 14112582, 0, '@yshavit That''s true.  Comments help to make things clearer alot of the time, but that''s different to this construct.  Besides, there''s no functional difference between if (a==b); //do nothing and if (a==b) { /*do nothing*/ }  Both will be optimised out by removing the comment and empty case and inverting the conditional.', '2013-01-06 00:58:32', '', 1327079),
(19650596, 14112582, 0, '@tudor For a compiler, yes, no question about that. But let me put it this way: If I saw someone do it my way, I would figure "this person must have thought it''s easier to express the condition this way." If I saw them using the semicolon+else-braces syntax, I would check the VCS logs to make sure it wasn''t a typo/bug to which someone else later added an else clause.', '2013-01-06 05:02:58', '', 1076640),
(19687168, 14109187, 0, 'I think he did :)', '2013-01-07 16:25:11', '', 855527),
(19693723, 14199910, 1, 'no it didn''t help , and btw , if you need just the width and height of a bitmap , you can store them instead and set them in the CTOR.', '2013-01-07 20:18:27', '', 878126),
(19697684, 14108774, 1, 'Is there a way to control which of the found cases in "Find in Files" get replaced? The Replace button does Replace_All.', '2013-01-07 22:40:08', '', 1007211),
(19707329, 14108774, 0, 'I think that the only way is to use multiple files search to get the files you need to modify and then use normal search and replace (cmd+alt+F), file by file.', '2013-01-08 08:44:32', '', 761777),
(19728388, 14185426, 0, 'I had done that already, otherwise it gave me error and I couldnt even compile it. But my problem is just that my program takes the whole screen and doesnt let the other multi screen capable programs to share the screen.', '2013-01-08 19:56:41', '', 1301750),
(19728637, 14185426, 0, 'The last comment on the page suggests: \n"Also it seems that if the DEFAULT/MINIMUM settings are left out, the default is to make the app fill half the screen when dragged in, and have a minimum size that corresponds to the height of the actionbar."', '2013-01-08 20:05:49', '', 154306),
(19728773, 14185426, 0, 'Just went and tried that, didn''t work either.', '2013-01-08 20:10:44', '', 1301750),
(19729134, 14185426, 0, 'Which device is it? Is it running Android 4.1?', '2013-01-08 20:23:02', '', 154306),
(19729330, 14185426, 0, '4.1.2 Samsung galaxy S3', '2013-01-08 20:29:40', '', 1301750),
(19729376, 14185426, 0, 'Odd; it should work. Are you sure you have included `<uses-library required="false" name="com.sec.android.app.multiwindow" />` and all your `<meta-data>` tags are immediately inside `<application>`? I updated my answer to illustrate this.', '2013-01-08 20:31:41', '', 154306),
(19729569, 14185426, 1, 'I was missing this line `<meta-data android:name="com.sec.android.support.multiwindow" android:value="true" />`. Thanks for help :)', '2013-01-08 20:38:26', '', 1301750),
(19729705, 14185426, 0, 'Glad it worked! For the record, I also stumbled upon [this blog post](http://translate.google.com/translate?hl=en&sl=ja&u=http://shunirr.hatenablog.jp/entry/2012/12/17/225325) suggesting that Multi Window doesn''t work in conjunction with `screenOrientation`.', '2013-01-08 20:43:09', '', 154306),
(19735887, 14109906, 1, 'It is probably because the U2 components for intercall are 32bit compiles so you cannot use it for 64-bit. If you have an active support contract, your support vendor might be able to help you out.', '2013-01-09 01:54:42', '', 153407),
(19753009, 14108430, 0, 'You are going to have to use two different methods to do what you want.  You will be unlikely to find a method that works for both a Windows Phone 8 application and a Windows Store application since they are two entirely systems.', '2013-01-09 14:22:17', '', 261581),
(19753263, 14108430, 0, '@Ramhound I have a method to do what I want, I prefix the domain name with "www" and I can do that on both platforms and it works the same. The issue is that shouldn''t be necessary and there is no documentation (that I can find) suggesting that the behaviour of HttpWebRequest cookie-handling should be different from WP8 to Windows 8. The way WP8 handles cookies in this instance seems wrong, but I think it is more likely that it doesn''t work because of something I have done wrong.', '2013-01-09 14:29:03', '', 66613),
(19759443, 14109906, 0, 'From the error messages that you have supplied it also looks like it thinks you are trying to connect to UniVerse, however you have stated that you want to connect to UniData so you need to make sure your connection settings are correct for UniData. I do suspect that Dan''s comment is the main reason however.', '2013-01-09 16:26:12', '', 489741),
(19774988, 14245913, 0, 'How would this work with a pom.xml that already defines a default profile?  I can''t add these properties to the corresponding default profile in pom.xml because the project is open source and I don''t want the gpg signing passphrase made public along with the rest of pom.xml.', '2013-01-10 03:07:01', '', 556613),
(19775433, 14245913, 1, 'This is in settings.xml NOT in the pom. And will work just fine for all projects including your open source one. In fact the profile should NOT be in the pom ever.', '2013-01-10 03:37:21', '', 136445),
(19778896, 14245913, 0, 'Keep in mind that profiles from settings will always be inherited into the effective pom whatever is in your pom files..', '2013-01-10 07:15:37', '', 136445),
(19786622, 14108430, 0, 'Sounds to me like the windows phone 8 has different security restrictions than Windows 8', '2013-01-10 11:59:12', '', 1765519),
(19797626, 14245913, 0, 'Yeah - maintaining a settings.xml outside of VCS for the CI server is not ideal but if it works its worth the ugliness.  Your second comment more or less addresses my concern, which is whether having these settings in addition to an existing default profile already defined within pom.xml would make these settings additive or if they would replace that profile completely.  I''ll give it a try.', '2013-01-10 17:15:32', '', 556613),
(19800645, 14245913, 0, 'Hmm spent some time getting this to work but it appears that the mvn release plugin is not using those params when it invokes gpg signing.', '2013-01-10 18:48:19', '', 556613),
(19800869, 14245913, 0, 'Yes it does. You might have to change the activation. Let me ammend it above.', '2013-01-10 18:56:56', '', 136445),
(19834706, 14245913, 0, 'FYI the answer has more details now and I know it works with Maven 3.0.4 since I use it daily..', '2013-01-11 18:19:25', '', 136445),
(19883767, 14245913, 0, 'I''ve been trying to get this to work but no matter what I do I still get the prompt.  running mvn help:active-profiles shows that the gpg profile is active for all modules as well...', '2013-01-14 02:27:03', '', 556613),
(19899629, 14119887, 0, 'thank you for the information!', '2013-01-14 15:27:10', '', 1218067),
(19902186, 14245913, 0, 'What are they versions of Maven and the gpg plugin you are using?', '2013-01-14 16:45:36', '', 136445),
(19905648, 14245913, 1, 'Maven 3.0.3 and gpg plugin 1.4', '2013-01-14 18:45:27', '', 556613),
(19918533, 14245913, 0, 'Hm .. it works for me with 3.0.4, pgp 1.4 on a mac with Java 6 and 7.', '2013-01-15 05:49:45', '', 136445),
(19927313, 14109187, 0, 'have you solved the problem?', '2013-01-15 12:08:52', '', 1016462),
(19936451, 14109187, 0, 'for now , no . but you can have a workaround of scaling the bitmap . not the best thing , but if you are short on time , you can use it .', '2013-01-15 16:47:03', '', 878126),
(19940849, 14280543, 0, 'Thanks - just had to get an old app running on 2.3.5 and the default rake gem was 10.0.3.  Your answer solved it for me.', '2013-01-15 19:13:04', '', 177489),
(20023201, 14115620, 0, 'This also explains a bit, and gives a lot more example code than the msdn one, but still doesn''t answer your question :/ \nhttp://www.asp.net/web-forms/tutorials/aspnet-45/using-asynchronous-methods-in-aspnet-45', '2013-01-18 05:36:32', '', 1880763),
(20023380, 14245913, 0, 'I think I''ve made some progress.  Basically it looks like the release plugin is ignoring settings.xml in favor of a dynamically generated version it passes in to the forked invocation.  This bug describes the behavior: http://jira.codehaus.org/browse/MRELEASE-724  -- Being that this issue only affects up to  Maven 3.0.3 (the version I''ve got) I think there''s a good chance this is why I''m having no luck.', '2013-01-18 05:48:58', '', 556613),
(20023430, 14245913, 0, 'Looks like the above referenced issue is a dupe of http://jira.codehaus.org/browse/MNG-5224', '2013-01-18 05:52:31', '', 556613),
(20042338, 14245913, 0, 'Have you tried with 3.0.4?', '2013-01-18 17:16:04', '', 136445),
(20043256, 14245913, 0, 'Yep - upgrading to 3.0.4 fixed the issue!', '2013-01-18 17:44:59', '', 556613),
(20044139, 14245913, 0, 'Awesome! Well done ;-) Imho it is always a good idea to run with the latest release ..', '2013-01-18 18:15:11', '', 136445),
(20082634, 14117121, 0, 'A correction: ''const'' is only a restriction that YOU cant change the value of a variable; it does not make any promise that the value wont change (ie, by someone else). It''s a write property, not a read property.', '2013-01-20 17:05:18', '', 180513),
(20090390, 14117121, 0, '@JaredGrubb What you say is certainly true for const references and pointers to const. I didn''t discuss those above, because there are no constexpr alternatives to those (there is no reference-to-constexpr). Perhaps I should make this clearer. But when it comes to actual (non-reference) const objects, their values must be defined at initialization time and cannot ever change.', '2013-01-21 00:54:28', '', 777186),
(20160375, 14113461, 11, 'This solution fixed things for me, but I had to chown everything to my username:admin, ie, `sudo chown -R ted:admin $(brew --prefix)` and then run the two git commands above, `git fetch origin` and `git reset --hard origin/master`', '2013-01-23 02:32:21', '', 134583),
(20160418, 14113461, 0, '@TedPennings: Cool! I''ll add your commands to the answer as a possible additional step.', '2013-01-23 02:36:35', '', 1070354),
(20317238, 14115620, 0, 'how did you update your Load event handler to be async? can you provide the code for that event handler?', '2013-01-28 12:22:40', '', 1711598),
(20340934, 14115620, 0, 'private async void Page_Load(...)', '2013-01-29 03:36:29', '', 46926),
(20554012, 14154890, 3, 'for me in the Rakefile I have `require ''rake''` not ''rake/rdoctask''... how do I fix this?  When I replace ''rake'' with ''rdoc/task'' I have the error now that `no such file to load -- rdoc/task`', '2013-02-04 23:55:47', '', 173909),
(20655564, 14109187, 0, 'Since at some point the bitmap needs to be drawn at a different size than whatever you''re starting with, which is resizing, I don''t think I''d consider resizing it by hand to be a work-around / hack.  It''s just low-level.  Either you do it, or a library does it.', '2013-02-07 18:15:25', '', 16295),
(20659558, 14109187, 0, 'This is incorrect since it uses more memory than you need. When you create a new ,scaled bitmap , you get to have 2 bitmaps at the same time . Instead , if you already have the bitmap , you would simply draw what you need by sampling only what you need . Since the drawable already does some special drawing , why not having this one too ? It might even be possible to use the GPU for this task . Another thing is that if you have the image files , you won''t be able to use WRAP_CONTENT since you want to set the size by yourself.', '2013-02-07 20:31:18', '', 878126),
(20711728, 14117898, 1, 'ng-model is also useful even if you don''t need $viewValue or $modelValue.  It is useful even if you only want the data-binding features of ng-model, like @kolrie''s example.', '2013-02-09 20:02:48', '', 215945),
(20712903, 14639815, 0, 'Thanks, @Lokerim. In particular, the useful bit was `Page.RegisterAsyncTask`, which apparently allows my ASP.NET custom controls to do any sort of async operation, even though ASP.NET doesn''t let me use "async void Page_Load" in my custom control. Thanks!', '2013-02-09 21:23:41', '', 46926),
(20722028, 14185426, 0, 'Im having similar problem. the code work on galaxy s3 with 4.1.2 but not working in galaxy note 2 with 4.1.1. Any ideas?', '2013-02-10 11:08:00', '', 863701),
(20816873, 14280543, 0, 'Thanks. It saved my ass too.', '2013-02-13 11:44:46', '', 979772),
(20910579, 14116498, 14, '+1, but I''m not sure I agree with the statement "ng-model is to link existing HTML elements with a value in the scope."  The two `contenteditable` directive examples in the Angular docs -- [forms page](http://docs.angularjs.org/guide/forms), [NgModelController page](http://docs.angularjs.org/api/ng.directive:ngModel.NgModelController) -- both use ng-model.  And the ngModelController page says that this controller is "meant to be extended by other directives."', '2013-02-16 03:59:42', '', 215945),
(20977941, 14487079, 0, 'This worked, but instead uninstalling 10.0.3 I run `bundle exec rake db:migrate` and it execute the task with the 0.8.7 version of the gem', '2013-02-18 22:11:02', '', 555938),
(21148623, 14109187, 0, 'See my implementation here: [RoundedImageView](https://github.com/makeramen/RoundedImageView) where I address many of these issues', '2013-02-22 20:36:04', '', 477676),
(21311475, 14115349, 6, '@ZameerManji You can still use homebrew clang if you invoke it like this `$ clang++ -std=c++11 -stdlib=libc++ -o test1 test1.cc -I /usr/lib/c++/v1/ -L /usr/lib/c++/v1/`', '2013-02-28 15:31:28', '', 492747),
(21371158, 14109187, 0, '@makeramen this website contain a huge memory leak problem, plus it doesn''t support setting an image resource id.', '2013-03-02 09:57:03', '', 878126),
(21516736, 14107531, 0, 'Hi, do you happen to have a good resource on how to learn how to implement infinite scroll in angular? Also, did the scroll position stuff work out well?', '2013-03-06 19:28:52', '', 45767),
(21521327, 14107531, 0, 'I just found this too\nhttps://groups.google.com/forum/?fromgroups=#!topic/angular/E4xIDsjIm_k', '2013-03-06 21:45:39', '', 45767),
(21985447, 14116215, 5, 'Another thing to point out is the fact that with Clojure you have a choice: if the performance is not a problem, then you can write your code using lazy sequences and all the high-level features you like, making your code more readable and possibly much more compact. If, however, you need the performance, then you can always go the other way and still get good results...', '2013-03-20 11:37:34', '', 2030468),
(22104482, 14974234, 6, 'This was already disabled for me and I still had the problem.  It was fixed for me by following this post...   http://stackoverflow.com/q/13765122/1246574', '2013-03-23 17:24:01', '', 1246574),
(22149436, 14280543, 0, 'I removed the old versions of rails and rake that were installed via APT. These were causing a collision against the versions installed using gem... \nNow all seems to be working a lot more smoothly!', '2013-03-25 13:44:29', '', 177762),
(22313863, 14111021, 3, 'This is all well and good until a property of your domain object needs to be hydrated by data that is not stored in your database; or you need to drop down in to a technology that is more performant than your bloated ORM.  OOPS!  An ORM is simply NOT a replacement for a repository, it is an implementation detail of one.', '2013-03-29 20:43:51', '', 557435),
(22408927, 14125030, 0, 'The BX instruction (and BLX) uses the bottom bit of the address to encode the target mode.  Since thumb is always 2 or 4 byte aligned (thumb/thumb2) and arm is always 4 byte aligned the lsbit is a dont care, so they choose to use that bit to mode switch (for the architectures that have both, not cortex-m).  The BX instruction strips the bit and the pc has the lsbit clean, it is just the execution that uses it.  Likewise a bl from thumb mode will add that bit to the lr so that the bx lr at the end of the called function works', '2013-04-02 13:52:22', '', 16007),
(22415224, 14125030, 0, 'Not just BX; in this case it''s function pointers that have the bottom bit set.', '2013-04-02 16:38:29', '', 1057909),
(22806707, 15980424, 0, 'I wasn''t using jarred code at all. Perhaps also you are using a newer version of clojure where perf has gotten better? Always good to hear things are heading in a better direction.', '2013-04-14 02:32:45', '', 1054469),
(22827203, 14108774, 0, 'I don''t pretend to know more than the creator of ST himself but you could just close the files (middle mouse click or ctrl+w) where you don''t need the changes done and then click replace. Afterwards you can use Ctrl+Shift+t to reopen the closed files.\n\nYou could also "add a exclude filter" clicking the button in the middle (the ellipsis) and write down the files where you don''t want replacements.', '2013-04-15 02:07:11', '', 800817),
(23357038, 14111677, 5, 'These exceptions occur on any android emulator image that I have tried  no matter how it is started (command line, Idea, Eclipse). The images I tried exhibit this problem even without any additional applications installed (that is clean images straight from SDK). And I think that you should not close question just because this problem does not affect you.', '2013-05-01 03:58:14', '', 117220),
(23423256, 16344827, 0, 'Maybe. Optimizing out the virtual function calls would be another obvious optimization, under such conditions.', '2013-05-03 01:47:03', '', 153285),
(23438865, 16344827, 0, '@Potatoswatter: Yes, of course. I was, however, explicitly targeting the need for allocation optimization.', '2013-05-03 13:16:09', '', 140719),
(23470498, 14120223, 0, '`placement delete` doesn''t even make sense. What would it do? Wouldn''t it just call the destructor, which you can already do manually?!', '2013-05-04 18:17:50', '', 541686),
(23476578, 14120223, 0, '@Mehrdad "Placement" just refers to the syntax with parens, not specifically to specifying the memory address. So placement delete is just "undo" for a particular placement new overload. It''s only used if an exception is thrown from the constructor in a placement new expression.', '2013-05-05 02:47:26', '', 153285),
(23476773, 14120223, 0, '@Potatoswatter: I don''t get it -- what would this hypothetical "placement delete" operator do, aside from calling the destructor?', '2013-05-05 03:12:12', '', 541686),
(23476945, 14120223, 0, '@Mehrdad You seem confused. The *function* `operator delete( void *p, std::size_t s, something_else )` is an actual language feature, not hypothetical, which frees memory allocated by `operator new( std::size_t s, something_else )`. The proposed hypothetical *expression* `delete (something_else) ptr` in the linked Q would provide access to that function under a lookup rule similar to a regular `delete ptr` expression. My answer explains why that''s complicated. Completely outside the scope of this Q, so pls discuss over there.', '2013-05-05 03:30:07', '', 153285),
(23532923, 16377459, 0, 'How did you handle `delete`? The OP asks if you need a specialized `delete` method to go with the specialized `new` method.', '2013-05-07 07:21:29', '', 712765),
(23543851, 16348071, 1, '+1 for legwork and multiple reasons.  I''ve considered this for object pooling, but we ended up hanging that off the global op new overload.', '2013-05-07 13:01:26', '', 80074),
(23544009, 16377459, 0, 'It''s been a while since we used this on class hierarchies rather than big singleton-esque managers with no virtuals, but in those Object cases it was a simple member overload and the delete was called by parent in scenegraph.  The root of the Object type hierarchy had a virtual destructor in that case.  Despite distaste for our monolithic object base and scenegraph, it worked well for those cases.', '2013-05-07 13:06:22', '', 80074),
(23627957, 14974123, 0, 'This worked for me, thanks', '2013-05-09 18:28:46', '', 1531769),
(24101358, 14116498, 1, '@Mark - You''re right, I''ve edited the answer a bit.', '2013-05-24 13:16:11', '', 295797),
(24102857, 16731477, 0, 'I assume those are JPG tiles in slippy EGPS3857 format right? since I am using leaflet and doing raster ovelays I had to go with PNG. also check out my demo of using PouchDB (which uses IDB underneath). http://stackoverflow.com/questions/16721312/using-pouchdb-as-an-offline-raster-map-cache', '2013-05-24 13:55:10', '', 959460),
(24103031, 16731477, 0, 'Oh yes, you are caching on the fly, but do you know where I can go to get a pre-built OSM map (world wide) down to zoom 10 or 11 or 12? We would keep this on our offline server.', '2013-05-24 13:59:42', '', 959460),
(24109173, 14113427, 0, 'http://stackoverflow.com/questions/10762859/brew-update-the-following-untracked-working-tree-files-would-be-overwritten-by', '2013-05-24 16:53:03', '', 1040889),
(24121225, 16731477, 0, 'No, used `PNG` with default projection (EGPS:3857) but no matter `JPEG` or `PNG` because it used by `img` tag or `canvas`. With my example you can just preload tiles if you know tiles keys (`storage.add(''x_y_z'', ''data:image/png;base64,...'')` for each stored tiles), but you always can get them if know just bounds (polygon) and zooms.', '2013-05-25 05:42:46', '', 880326),
(24170984, 16731477, 0, 'I want to make sure we don''t have a language problem. Do you any place that we can get a world-wide OSM set of slippy tiles (PNG or JPG) to zoom level 10?', '2013-05-27 14:53:33', '', 959460),
(24186157, 16731477, 0, 'You can get tiles form `tile.osm.org` (mapnik renderer). For example `http://tile.openstreetmap.org/10/590/329.png` (`zoom`/`x`/`y`.png). This tiles have `Access-Control-Allow-Origin: *` header so you can get them by ajax or get data uri (base64) by canvas. You already can download tiles with your `manifest.json` `{id: 0-0-0}`, but you must sure that have right `zoom`, `x`, `y` sequence.', '2013-05-28 05:48:15', '', 880326),
(24207566, 14109079, 0, 'Were you able to solve the problem?', '2013-05-28 16:42:37', '', 668650),
(24225664, 14109079, 0, 'yes! @KevinRave', '2013-05-29 07:09:14', '', 1070732),
(24244343, 14109079, 0, 'Thanks, I was able figure on my end. Thanks for the response! :-)', '2013-05-29 15:32:23', '', 668650),
(24309668, 14154890, 0, 'I still got the error cannot load such file -- tasks/rails. Can you please help me giridharbandi ?', '2013-05-31 11:20:03', '', 442117),
(24350878, 14245913, 0, 'The profiles tag is improperly closed in your XML snippet.', '2013-06-02 02:12:25', '', 10433),
(24393899, 14245913, 1, 'I fixed the code snippet now @AndrewSwan', '2013-06-03 18:18:05', '', 136445),
(24417134, 16899789, 0, 'I updated the plunker with all three scope possibilities and for child elements of the template or the root element of the template.', '2013-06-04 11:06:23', '', 124416),
(24815637, 14154890, 2, 'Instead of `rdoc/task` also try `rake/task`. It worked for my project (ruby 1.8.7)', '2013-06-17 10:33:54', '', 1694362),
(24920040, 16198496, 0, 'Exactly the one that I was looking for. Thank you.', '2013-06-20 02:17:44', '', 729454),
(24982400, 14108774, 5, 'If you put `<project>` in the "Where" field, it''ll search recursively through all of the folders and files in the currently open project. You can also type in a relative path (e.g., `search/for/things/here/` and it will only search through that folder, recursively, relative to your project''s root. Very handy.', '2013-06-21 17:12:58', '', 133479),
(25198181, 14974123, 2, 'me too! the --jsonArray parameter made all the difference. Shame it can''t detect just a json array.', '2013-06-28 11:14:15', '', 1707154),
(25350382, 17449069, 0, 'Persistence entities (your POCOs) are NOT business/domain entities. And  repository''s purpose is to decouple business (ar any) layer from the persistence.', '2013-07-03 13:34:18', '', 1017868),
(25351794, 17449231, 0, 'And in doing so couple your application(s) to EF. MS will like it, but should the management decide to, for example, buy a commercial ORM the developers will be in a tight spot. And yes, no unit testing. Minor problem.', '2013-07-03 14:06:12', '', 1144090),
(25351872, 17449069, 0, 'I fail to see the coupling. Somewhat agree on the POCO part, but don''t care. Nothing to stop you from having ''genuine'' POCOs and still use this approach.', '2013-07-03 14:08:01', '', 1144090),
(25390381, 17449231, 0, '+1 that really kills unit tests', '2013-07-04 14:11:56', '', 66372),
(25478381, 17449231, 2, 'Not exposing IQueryable leads to limited search, and people end up creating more Get methods for different type of queries, and eventually it makes repository more complex.', '2013-07-08 08:28:07', '', 85597),
(25490796, 17449231, 0, '@Akash: I do not agree. Too many queries typically means that your repository is responsible of different entites (but you treat them as a god entity). Break up the entities after different use cases and do the same with the repository.', '2013-07-08 14:37:26', '', 70386),
(25492081, 17449231, 0, '@jgauffin, For single entity type with 20+ fields, how will you design query method to support any permutation combination? You dont want to limit search only by name, what about searching with navigation properties, list all orders with item with specific price code, 3 level of navigation property search. The whole reason IQueryable was invented was to be able to compose any combination of search against database. Everything looks great in theory, but user''s need wins above theory.', '2013-07-08 15:10:23', '', 85597),
(25498565, 17449231, 0, '@AkashKava; I moved my comments into the answer.', '2013-07-08 18:26:06', '', 70386),
(25500739, 17449231, 0, '@jgauffin, You want to break 20+ fields down into other entities? To satisfy whom? President? forget that, ListCustomerByName, ListCustomerByPhone, ListCustomerByNameAndPhone, ListCustomerByNameOrPhone, with just two fields, how may combination your ideal repository must have with 5 fields? Don''t tell me you want to invent unit testable new query composer(specification pattern) that what exactly Linq expressions are. Take a look at my answer, it has simple JSON query translator as well.', '2013-07-08 19:38:10', '', 85597),
(25502730, 17449231, 1, 'you have not addressed the core issue at all: Exposing IQueryable through a repository is not a complete abstraction.', '2013-07-08 20:44:29', '', 70386),
(25543945, 14108774, 2, 'For this where field to come up by default with search and replace (ctrl+H) I added this to my user keybindings:\n\n`{ "keys": ["ctrl+h"], "command": "show_panel", "args": {"panel": "find_in_files"} }`', '2013-07-09 22:00:51', '', 310394),
(25728240, 14117121, 0, 'You say that "all objects that are: `const`, literal types and [initialized by a constant expression]" can be used in constant expressions. That''s not correct; only objects of integral or enumeration type have this behavior, not arbitrary literal types.', '2013-07-15 21:10:41', '', 1041090),
(25732548, 14117121, 0, '@RichardSmith Interesting. I wasn''t aware of this. Does the Standard actually say this anywhere? (Also, GCC does not seem to enforce this; I tried with `float` and with a literal class. Clang enforces it for `float` but not for the class.)', '2013-07-16 00:58:25', '', 777186),
(25826274, 14109906, 0, '@kaigoh: Next time you come online, please review your question here and add additional information what happened since then. Also please review the comments and answers and provide some feedback for them. Thank you.', '2013-07-18 09:13:55', '', 367456),
(25870545, 14109187, 0, 'fwiw I solved a similar problem by masking over the original bitmap ([Android XML rounded clipped corners](http://stackoverflow.com/a/8313096/383414)).', '2013-07-19 11:09:00', '', 383414),
(25875290, 14109187, 0, '@RichardLeMesurier this isn''t always the best solution, as the surrounding background might be different . it''s a trick in case they are the same... good trick, but still...', '2013-07-19 13:22:52', '', 878126),
(25875335, 17743713, 0, 'what are the advantages and disadvantes of each of those methods? the third one is obviously both slow and use more memory , but what about the others? which one do you recommend?', '2013-07-19 13:24:01', '', 878126),
(25877834, 17743713, 0, 'If you want the bitmap to stretch to the size of the view, some implementation similar to the last is pretty much the only way to go while using a `BitmapShader`. The first will restrict the size of the view itself, while the second will only paint the shader in the top left corner of the view.', '2013-07-19 14:25:28', '', 154306),
(25889250, 17743713, 0, 'well, what if i want it to behave like a normal imageView, only just that it will make the image itself to have rounded corners?', '2013-07-19 20:00:59', '', 878126),
(25907366, 14117121, 1, '@jogojapan See 5.19/2: "an lvalue-to-rvalue conversion unless it is applied to [...]". Clang should enforce this correctly; please file bugs if you find otherwise.', '2013-07-20 17:40:38', '', 1041090),
(25910271, 14109187, 0, 'Agreed. It was a quick and dirty hack for a client that said "make it look like the iPhone app..." My favorite request, right. Just included it as a comment cos this site is getting too fragmented these days IMHO.', '2013-07-20 20:29:10', '', 383414),
(25910639, 14109187, 0, 'yes, i''m also quite tired of this "make it look like the iPhone app" request. i keep telling people that it''s not an iphone, and there are already guidelines for android, but nobody listens...', '2013-07-20 20:53:14', '', 878126),
(25915477, 14117121, 0, '@RichardSmith Thank you. You are right. I''ve corrected this, and I will look into bug reports.', '2013-07-21 05:18:19', '', 777186),
(26042285, 14114419, 0, 'The first line should have a space as the first parameter. Right now it is just an empty string. Corrected here: $string = str_replace('' '', ''-'', $string);', '2013-07-24 17:34:05', '', 497681),
(26074759, 14107979, 0, '@iPatel: I want to apply the blur effect at a certain part of the image without cropping it. I tried that with this code* . But it crops the image at a certain part and then to the cropped part alone, it applies the blur effect. I don''t want to crop the image. I just want to apply the blur effect to a certain part of the image without cropping it.\n\nCode* - http://pastie.org/8174308', '2013-07-25 13:53:17', '', 1746194),
(26094921, 14117121, 0, '@RichardSmith In case you are interested, I''ve filed this bug report for GCC: http://gcc.gnu.org/bugzilla/show_bug.cgi?id=57979 (For Clang it seems you were right; I couldn''t reproduce any bug when I tried yesterday).', '2013-07-26 01:11:03', '', 777186),
(26201116, 14110096, 2, 'I''m unclear as to why this solution is consistent with Angular''s documentation. The docs state that you need to set a cookie but you appear to be setting the header manually.', '2013-07-29 18:59:59', '', 1005844),
(26219406, 17449231, 1, 'Having a query object which contains all the needed infrastructure to be executed in and of itself is the way to go imo. You give it the fields which are the search terms and it returns a list of results. Internal to the QO you can do whatever you want. And it is an interface, so easily tested. See my post above. It is the best.', '2013-07-30 09:05:28', '', 1144090),
(26356366, 14114729, 1, 'I do not think this is quite a duplicate. This is a more generic question and people are more likely to search for this question than others due to the wording, as evidenced by the answer''s upvotes.', '2013-08-02 15:41:55', '', 197663),
(26357203, 14114729, 0, 'Even closed, the flag as a duplicate will direct readers to an answer.', '2013-08-02 16:04:42', '', 1448212),
(26357204, 14114729, 0, 'Perhaps, but the approach is the same.', '2013-08-02 16:04:43', '', 175201),
(26498656, 14113278, 0, 'It seems that Lawnchair indeed supports Blob, at least in Firefox. It doesn''t work in Chrome due to that it''s not implemented yet (issue for this https://code.google.com/p/chromium/issues/detail?id=108012)', '2013-08-07 11:14:29', '', 329782),
(26544495, 14113278, 0, 'Are you sure these are not just Base64, I still have an open issue in the github about blob support: https://github.com/brianleroux/lawnchair/issues/141', '2013-08-08 13:50:52', '', 959460),
(26544521, 14113278, 0, 'Right now I am using PouchDB, which has a shim for Chrome.', '2013-08-08 13:51:22', '', 959460),
(26673750, 14130068, 0, '@pad - it''s now published at https://github.com/kbattocchi/ILBuilder.  Sorry for the delay.', '2013-08-13 03:41:10', '', 82959),
(26763347, 17522369, 0, 'The ideas are in Entity REST SDK are very useful!', '2013-08-15 11:27:40', '', 511012),
(27054365, 14115349, 0, '+1 saved me! I''m using Clang 3.3 on OSX. Strange why it would not enable by default?', '2013-08-24 08:41:30', '', 128028),
(27057440, 15395445, 0, 'Had similar issue to the original question but with different conflicting files. Just resetting was sufficient to let me update and resolve the issue.', '2013-08-24 12:26:49', '', 466871),
(27339492, 17449231, 0, 'I find myself agreeing with Akash here.  How exactly do you break a GOD entity down?  We have some reasonably wide columns in tables in our database, all which map to single entities in Entity Framework, and I cannot see how it is possible to break them down when each column is fully dependent on the key.  My understanding of what you''re saying is that you''re advocating breaking down the underlying system to support your view of the repository pattern.  Without exposing IQueryable, our repository class would require an incredible amount of work and maintenance to implement all required members', '2013-09-02 19:31:08', '', 807361),
(27339692, 17449231, 1, 'Personally, I think it also makes sense to implement the IQueryable<T> interface on a Repository class, rather than expose the underlying set in one of its members.', '2013-09-02 19:38:57', '', 807361),
(27339721, 17449231, 0, 'I''m saying that you are not using the repository pattern, since ***the repository pattern is an abstraction***. As for your entities it''s impossible to say as the solution depends on every specific case. I do however still believe that large entities is a design smell. One large entity do not rule them all.', '2013-09-02 19:40:06', '', 70386),
(27340057, 17449231, 0, 'What about more than one large entity (and some medium-sized ones, and smaller ones) in a large system for a large solution? Surely the size of an entity depends (at least somewhat) on the amount of data directly relating to that entity that your solution has/requires? It sounds like what you''re suggesting is that functionality such as providing complex searches cannot be implemented using the repository pattern; It would have to be implemented using some other pattern.', '2013-09-02 19:55:08', '', 807361),
(27340134, 17449231, 0, 'Everytime I''ve analyzed large entities for everything else but pure CRUD systems I''ve found that the entity is responsible of storing information for different areas. For instance a User entity might store info for accounting, support, shipping etc. Those areas should have their own objects which uses the User.Id as key. But as always there are no one-solution-that-fits-them-all. All I''m saying is that large entities typically indicate that something is wrong and that anything using `IQueryable` is not a repository pattern implementation.', '2013-09-02 19:59:02', '', 70386),
(27340150, 17449231, 1, 'As for alternatives I''ve already mentioned specification pattern and @h.alex suggested query object. That you have CQS which is a similar pattern.', '2013-09-02 19:59:49', '', 70386),
(27396558, 14110890, 0, '@Dejan.S: Update your question if you think that none of the answers apply, otherwise be so kind and accept one of the answers.', '2013-09-04 11:36:25', '', 70386),
(27410511, 14110890, 0, '@jgauffin to be honest I really haven''t had the time I want to read through the answers and investigate. I will do it eventually, but I''m not gone accept an answer based on the sake of doing it.', '2013-09-04 17:51:50', '', 148601),
(27412271, 14110890, 0, 'I didn''t say that either. But imho effort are given to answer your question and you can at least read the answers and give feedback.', '2013-09-04 18:50:22', '', 70386);
INSERT INTO `Comments` (`Id`, `PostId`, `Score`, `Text`, `CreationDate`, `UserDisplayName`, `UserId`) VALUES
(27414246, 14110890, 0, 'I didn''t mean to be rude, hope you didn''t take it as I was. I get it but as I said if I would have the time to go through this now It would have an answer already. It''s not my first day at stack overflow, I''ll handle it ;)', '2013-09-04 19:56:24', '', 148601),
(27417877, 14117898, 0, 'And the `^` should be there only if the ng-model is applied in a parent element', '2013-09-04 22:14:21', '', 165656),
(27506194, 17522369, 0, '@IanNewson, thanks, we have added support for all CRUD operations and now library is in release mode.', '2013-09-07 16:39:36', '', 85597),
(27506260, 17449231, 1, '`anything using IQueryable is not a repository pattern implementation` comes from Bible?', '2013-09-07 16:43:35', '', 85597),
(27506940, 17449231, 0, '@AkashKava: Comes from the definition of the pattern.', '2013-09-07 17:22:31', '', 70386),
(27558043, 14109137, 0, 'The solution mentioned in the link was it for me. To summarize, a different version of the JRE got installed in another dir on the PATH. Moving the desired JDK version to the front of the PATH resolved my issue.  Consider exploring this solution if other forces might be able to modify your machine (i.e. other users, automatic updates pushed through by your company, etc.).', '2013-09-09 18:35:40', '', 684617),
(27578928, 14110890, 0, '@Dejan.S: I didn''t think that you was rude. There are just lots of users here and not everyone care to accept answers ;)', '2013-09-10 10:50:32', '', 70386),
(27631363, 14109796, 4, 'thanks for the semicolon way', '2013-09-11 16:55:46', '', 1742814),
(27649044, 14109724, 1, 'This question should be reopened. The answer here also shows how to write a Makefile without tabs, completely circumventing the problem.', '2013-09-12 06:32:16', '', 648658),
(27860777, 16899789, 0, 'This is great, but how do you essentially make this optional? I''m creating a textbox directive for a UI library, and I want the model to be optional, meaning the textbox still will work if the ngModel isn''t set.', '2013-09-18 16:58:10', '', 633387),
(27907333, 16899789, 0, '@NickRadford Simply check if ngModel is defined on the $scope and if not, don''t use it?', '2013-09-19 21:10:18', '', 124416),
(28000298, 14110096, 0, '@asgoth I am not sure how this counters CSRF. I thought that CSRF worked because a call to the same domain from another browser page would resend the cookie associated with that domain. If we placed the token in the cookie wouldn''t that render that check useless?', '2013-09-23 12:36:03', '', 62544),
(28305035, 14117121, 0, '"The arguments and the return type must be literal types" - So these can''t themselves be `constexpr`?', '2013-10-02 13:51:41', '', 1366368),
(28422337, 14117121, 0, '@Adrian I am sorry I couldn''t reply earlier. Also I am not sure I understand the question. A function argument cannot be declared as `constexpr`, because that would imply its value to be defined at declaration time, in which case there is no point in having a function argument at all. Could you give an example of the kind of declaration you mean?', '2013-10-06 08:57:53', '', 777186),
(28428100, 14117121, 0, 'Never mind.  I didn''t understand what was meant by a LiteralType.  I got my answer from [here](http://en.cppreference.com/w/cpp/concept/LiteralType).', '2013-10-06 15:25:08', '', 1366368),
(28904644, 17449231, 0, '@jgauffin I don''t think it is possible to write persistent-ignorant business logic. The only thing you can do is move it to repository, so your repository then gets "domain" search methods. This is useful if you are starting to work with new ORM and you are not sure if it will be good for what you need, so you want to be able to change it easier. I have never seen a project where ORM was changed later in implementation, that is complete rewrite anyway.', '2013-10-21 06:57:30', '', 408643),
(28904660, 17449231, 0, 'And large entities may be indicator of multiple responsibilities, and code smell, but someone may designed it that way. I have seen cases where normalized database was taking 10 secs to show up a page with information about an entity in database (with EF). Denormalizing 10 tables into one (wherever one-one relation was represented by table) was simplest and most elegant solution. What else (besides stored proc) could be done?', '2013-10-21 06:58:02', '', 408643),
(28905226, 17449231, 0, '@GoranObradovic: I only write persistant ignorant domain entities. It''s fully possible. I can also use denormalized tables. For instance I can store entities as a JSON string in the DB and then use vanilla ADO.NET + JSON.NET to load them. Adjust the tools to your requirements and not vice versa.', '2013-10-21 07:20:15', '', 70386),
(28906050, 17449231, 0, 'Persistant ignorant domain entities are POCOs? But they should also be persistant-ignorant if you have few static domain expressions on them that you can use in where clauses :) \nAnd for JSON, yes, that could be done. Or even maybe serializing to XML, so you can add XML indexes and query using xPath! Thanks! :)', '2013-10-21 07:51:24', '', 408643),
(28906982, 17449231, 0, 'imho persistant ignorant domain entities are POCOs which are 100% modeled after the business and do not contain any compromises (such as being changed to work with a OR/M etc). They typically contain behaviour (methods) and hopefully private setters so that the they are properly encapsuled.', '2013-10-21 08:25:12', '', 70386),
(28960743, 14114419, 0, '@TerryHarvey this wouldn;t work if '' is the last character, e-g  America'' is the keyword you get and you need to clean it..', '2013-10-22 15:08:25', '', 870925),
(29589476, 14110096, 0, '@RevNoah The code samples at the top are generic examples of how to set headers on the $http service. If the cookie token is set angular will set the header automatically.', '2013-11-10 13:51:06', '', 1476226),
(29589543, 14110096, 0, '@uriDium It counters CSRF because the cookie token isn''t the same as a request header.  The header is called X-XSRF-TOKEN. Even though the cookie is sent with all requests it just has a token called XSRF-TOKEN, which the server doesn''t care about.  The only way to copy the cookie token to the request header is if you can read the cookie, which pages on another domain can''t do.  That''s why this method works.', '2013-11-10 13:54:27', '', 1476226),
(29788232, 16899789, 2, '+1 for the numerous examples in your pknkr', '2013-11-15 16:46:36', '', 521257),
(29935292, 15395445, 10, 'not working for me', '2013-11-20 09:50:48', '', 257948),
(29950326, 14115349, 0, '@Viet: As of OS X 10.9, libc++ is now the default.', '2013-11-20 16:17:50', '', 47453),
(30049847, 17522369, 0, '@AkashKava - This hits the nail right on the head!', '2013-11-23 06:38:25', '', 386739),
(30330088, 17449231, 0, '@jgauffin , you have not mentionned Aggregate roots, isn''t the repository pattern supposed to work with an aggregate root ? where does the aggregate root and aggregate of tables fit into your view of Repository pattern ?', '2013-12-02 08:13:40', '', 909361),
(30332864, 17449231, 1, '@yat: One repos per aggregate root. But imho it''s not ***aggregate root and aggregate of tables*** but just ***aggregate root and aggregates***. The actual storage might use just one table or lots of them, i.e. it may not be a one-one mapping between each aggregate and a table. I use repositories to reduce complexity and remove any dependencies of the underlying storage.', '2013-12-02 09:48:27', '', 70386),
(30357844, 14154890, 1, '@GerardWesterhof I still get uninitialized constant Rake::RDocTask', '2013-12-02 22:08:39', '', 1555312),
(30481225, 14110096, 0, 'Instead of using a cookie to notify Angular, would it be just as secure to define a CONSTANT and inject that into Angular?', '2013-12-05 20:36:04', '', 435743),
(30481271, 14110096, 0, 'For instance, in my starting page (I use PHP as server side language), I set an Angular constant like this: <script>\n    angular.module("app").constant("CSRF_TOKEN", ''<?=$csrf_token;?>''); \n</script>', '2013-12-05 20:37:10', '', 435743),
(30481325, 14110096, 0, '.. then in Angular I inject CSRF_TOKEN in app.run() and set the header: $http.defaults.headers.common[''CSRF_TOKEN''] = CSRF_TOKEN  ... also, I set it for all requests, POST/GET.. just make sure your GET query doesn''t surpass 1024 chars', '2013-12-05 20:38:23', '', 435743),
(30699595, 14109674, 0, 'Confirmed, saving it as a string instead of a datetime preserves the fractional seconds.', '2013-12-11 22:56:34', '', 271504),
(30809765, 17247129, 0, 'This is the answer to the original question. user1143970 is running rails 3.0 which doesn''t have the Rakefile entries that GiridharBandi is describing (I don''t know about 3.2). Also, danijel''s solution won''t work, at least it didn''t for me, since thor seems to have a dependency on rake 10+. I started going down the route that Ben Atkin''s but that gets messy quick. My guess is that @JstRoRR is also running something other than rails 3.0.', '2013-12-15 09:02:48', '', 2376109),
(30949400, 14114741, 0, 'why the `if not block` check? could this simply be written as \n\n`map(handle.write, request.iter_content(1024))`?', '2013-12-18 22:17:32', '', 904887),
(30951354, 14114741, 0, '@rikAtee: Because that''d create an intermediate list.', '2013-12-18 23:33:35', '', 464744),
(30952025, 14114741, 0, 'sure, `map` results in a list of the returned value of `handle.write`, but the function will be called for each item. As long as I don''t assign the returned list to a name then we can ignore it. I''m still interested: why are we checking if block is falsey?', '2013-12-19 00:06:49', '', 904887),
(30952388, 14114741, 0, '@rikAtee: Creating a list with possibly thousands of `None`s in it is wasteful. If you want it to be "short", use `deque`. As for the check, `request.iter_content` calls `.read(block_size)` on a file-like object, which returns an empty string when the EOF is reached.', '2013-12-19 00:25:59', '', 464744),
(30981261, 14114741, 0, '@Blender thanks for the tip and info. how would collections.deque help in this respect? As far as I can tell it does not execute a function for a iterable?', '2013-12-19 17:14:09', '', 904887),
(30987169, 14114741, 0, '@rikAtee: You''d do `deque(iterable, maxlen=0)` to "consume" an iterable, but I''m not sure where I was going with that when I said that it''d be useful.', '2013-12-19 20:11:19', '', 464744),
(31189670, 14113076, 0, '+1, also there is something to be said for identifiers that are under control of the application developers instead of being tied to the business or controlled by an external entity (such as ssns or abas).', '2013-12-27 16:05:23', '', 217324),
(31396257, 14116498, 1, 'fellow New York-er to rescue. Worked perfectly!', '2014-01-03 21:50:15', '', 1212341),
(31566058, 14108694, 0, 'Your `addImageToImage:` didn''t properly begin the image context by using the scale options: `UIGraphicsBeginImageContextWithOptions(size, NO, image.scale);`', '2014-01-08 18:53:04', '', 572954),
(31670460, 19137473, 0, 'there are still performance issues. Seems that constexpr function if evaluated at runtime may be slower than non-constexpr version of function. Also if we have a constant value should we prefer "const" or "constexpr"? (more a style question generated assembly looks the same)', '2014-01-11 10:58:07', '', 1829943),
(31896285, 14974123, 0, 'thanks , that helps', '2014-01-17 11:51:10', '', 1134982),
(31909329, 14108774, 0, 'Is there a way to use this whilst ignoring the word your searching for if its in a comment ?', '2014-01-17 17:24:29', '', 1183150),
(31936061, 21206851, 0, 'Hi, I tried to verify the existence of a version 3.3 of pygame on bitbucket but couldn''t find any. I assume it''s just a typo and you mean the Python version number instead. Can you please correct this information and provide a direct link to the correct download page? Thanks!', '2014-01-18 17:06:56', '', 1473663),
(31941702, 21206851, 0, '@NobuGames http://stackoverflow.com/a/21034094/538284', '2014-01-18 21:38:01', '', 538284),
(32046682, 21105833, 2, 'This solution worked for me when the accepted answer did not.', '2014-01-21 21:17:10', '', 1017787),
(32106547, 15395445, 3, 'didn''t work for me(osx 10.8.5) :(', '2014-01-23 08:56:09', '', 363867),
(32172096, 14116498, 0, 'I wish I could plus +1-kabillion you for this answer.', '2014-01-24 18:39:32', '', 607569),
(32640371, 14115944, 0, 'This question and answer reminds me of http://youmightnotneedjquery.com/. It wasn''t there one year ago, but might be of interest to "future people".', '2014-02-06 13:30:41', '', 553598),
(32673452, 14115349, 0, 'I wonder why `-std=c++11` doesn''t imply the use of the appropriate `-stdlib` setting. At least as an overridable default. Strange…', '2014-02-07 08:55:10', '', 1468366),
(32743191, 14113559, 0, 'BTW, till [1.3.0](http://jekyllrb.com/docs/history/#130__20131104) version of Jekyll it is now possible to use variables in includes — `{% include {{variable}} %}` :)', '2014-02-09 18:13:05', '', 885556),
(32929272, 14111572, 0, 'It might be worth pointing out that you can do this with nib. But if you''re like me who want some nice features that only storyboard has (static/prototype cell, for example), then I guess we''re out of luck.', '2014-02-13 23:02:42', '', 185346),
(32950735, 14115913, 0, 'Can you tell me what it does here `/*Instance methods*/\n	hasOwn = ({}).hasOwnProperty,` in the [jQuery source](http://code.jquery.com/jquery-1.11.0.js)? (Y)', '2014-02-14 12:54:18', '', 2672018),
(32971692, 14115913, 1, '@dollarVar That could be its own question. It''s the same thing, the authors want a reference to `Object.prototype.hasOwnProperty`, but are accessing it via an object literal. Due to ambiguity as mentioned in my answer, it must be wrapped in parenthesis, otherwise it''s parsed as a block and there is no property lookups on blocks :)', '2014-02-14 23:16:53', '', 31671),
(33308013, 20709912, 1, 'There is a popular script written to fix Homebrew permissions that apparently works quite well. I haven''t needed to use it myself; I manually did the changes :) But this may help others: https://gist.github.com/rpavlik/768518', '2014-02-24 06:05:55', '', 1575456),
(33522933, 15395445, 12, 'you might want to do also ``git add .`` followed by ``git stash`` :P', '2014-02-28 16:30:35', '', 877581),
(33638487, 14108694, 0, 'How do we change the blur''s strength?', '2014-03-04 06:56:49', '', 1043184),
(33731729, 21105833, 1, 'This worked for me and should really be the accepted answer', '2014-03-06 06:36:37', '', 1255508),
(33825374, 16503127, 1, 'Example of a service: \nmod.factory("CacheService", function($cacheFactory) { return { data:{ scrollY: 0 } }; });\nthen in controller: $scope.service = CacheService.data', '2014-03-08 11:17:41', '', 499839),
(33833849, 14114430, 0, 'Entered comment in wrong place.', '2014-03-08 18:26:19', '', 1169172),
(33833889, 14114443, 1, 'You are missing a closing bracket in first block of code -->       `$str = preg_replace(''/[^A-Za-z0-9\\. -]/'', '''', $str);`', '2014-03-08 18:28:06', '', 1169172),
(33836696, 14114443, 0, 'Thank you. Fixed.', '2014-03-08 20:46:41', '', 1428679),
(34009600, 14154890, 0, 'i have 3 versions of rake: `gem list | grep rake` = `rake (10.1.1, 10.1.0, 0.8.7)`.. i got a rails 2.3.5 project and another that''s 3.0 that i''m working on at the same time.. how do i use a specific version of rake for each project (ie on command line?)', '2014-03-13 08:41:06', '', 766570),
(34050797, 14185426, 0, 'If its not working for you ... reduce dimi ... it worked for me with 300dip ... and s3 ..', '2014-03-14 05:19:45', '', 1037078),
(34180546, 14112752, 0, 'too bad :( Guess I have to copy and paste the same view controller and change its class as a workaround.', '2014-03-18 04:39:39', '', 467588),
(34434611, 16344827, 0, 'That''s undefined even though it isn''t according to the C++ standard! LOL', '2014-03-24 15:53:53', '', 2112028),
(34874387, 14112752, 0, 'And this is why I don''t like Storyboards ... somehow they are not really working once you do a bit more than standard views ...', '2014-04-04 10:00:30', '', 627985),
(35297957, 14114741, 0, 'This code is not checking for status code, but simply writes the server''s response message to the file as a string, in case there was some problem. I''d recommend inserting a `if not request.ok: return False` after the `get` line', '2014-04-15 20:05:00', '', 518169),
(35298594, 14114741, 0, '@zsero: Thanks, that''s a good idea.', '2014-04-15 20:22:48', '', 464744),
(35302757, 14114741, 0, '@Blender: also, you should also put it in a try-except block, as connection errors are throwing exceptions in requests.', '2014-04-15 22:55:47', '', 518169),
(35355978, 16899789, 0, 'Will there be any problems or additional overhead with reusing `ng-model` in an isolated scope?', '2014-04-17 06:40:16', '', 1638005),
(35356175, 16899789, 1, '@jeffling not sure but I don''t think so. Copying ngModel is pretty light weight and isolated scope limits exposure.', '2014-04-17 06:47:19', '', 124416),
(35580196, 14154890, 0, 'Uninstall not working for rake ERROR:  While executing gem ... (Gem::InstallError)', '2014-04-23 18:24:04', '', 2833005),
(35620757, 14107531, 0, 'Check out [ngInfiniteScroll](http://binarymuse.github.io/ngInfiniteScroll/)', '2014-04-24 16:10:14', '', 530967),
(35639993, 15395445, 0, 'Works for me. Literally type this cd $(brew --prefix)', '2014-04-25 04:41:18', '', 663941),
(35754142, 20159814, 2, '+1 for crawling through the mud for me :)', '2014-04-28 17:06:52', '', 2125444),
(35797351, 15395445, 1, 'If, after changing to the brew directory with `cd $(brew --prefix)` and resetting the git stage with `git reset --hard HEAD` your `git status` does not return working directory clean you may also need to clean up the state by running `git clean -df`.', '2014-04-29 16:34:39', '', 1339631),
(35986343, 14112929, 0, 'If you are facing any of the reasons above, then you need to reconsider your design. Else, you''ve made a GOOD decision using a composite key. About the limitation with Hibernate, take a look at mwsiri''s answer.', '2014-05-05 12:05:51', '', 309630),
(35986590, 20803639, 1, 'I love the use of composite keys where it''s appropriate, loudly and proudly! It makes much cleaner design. When it''s the appropriate place, you don''t face any of the disadvantages being told about.', '2014-05-05 12:12:53', '', 309630),
(36110808, 15395445, 33, 'Instead of `git reset --hard HEAD` (which wouldn''t work for me), I did `git fetch --all` and `git reset --hard origin/master`', '2014-05-08 10:02:18', '', 408572),
(36364150, 14109166, 8, '**Very dangerous.** After applying this change, an 866 charset-based Windows XP has failed to load at restart, including in safe mode (cause: corrupted file `\\windows\\system32\\config\\system`). Booting from recovery media was required to restore the system. @DoctorCoder', '2014-05-15 07:10:07', '', 3075942),
(36618883, 16731477, 0, 'Nice effort you both have done for offline maps. Now we are thinking and trying your and similar techniques for offline routing. See here: http://stackoverflow.com/q/23296295/194609', '2014-05-22 11:47:58', '', 194609),
(36911040, 14185426, 0, 'As i am also researching on this topic, i found an official Samsung guide about their Multi Window feature, that i guess it would help: http://developer.samsung.com/s-pen-sdk/technical-docs/Designing-For-The-Galaxy-Note-Creating-Multi-Window-Apps', '2014-05-30 16:44:34', '', 1884546),
(36929444, 15395445, 0, 'I had a lot of deleted files, I did git add -u and then the rest of the code above.', '2014-05-31 11:10:29', '', 1141160),
(37016166, 20159814, 10, '`Most examples of repositories are bullshit` **thankyou**', '2014-06-03 12:57:48', '', 1786428),
(37360919, 14117121, 0, '@jogojapan N3337 draft 5.19/3 _An address constant expression is a prvalue core constant expression of pointer type that evaluates to the address of an object with static storage duration, to the address of a function, or to a null pointer value, or a prvalue core\nconstant expression of type std::nullptr_t._', '2014-06-13 07:02:39', '', 183120),
(37361286, 14117121, 0, 'In your answer: "_Removing the const would render the expression illegal (because (a) a pointer to a non-const object cannot be a constant expression_" seems erroneous; the above quote from the standard only talks about static storage duration and nothing about the object''s `const`-ness; however (b) is true. Also I read in _C++ Primer_ that a `constexpr` pointer to a non-const object is allowed; lastly [GCC agrees](http://coliru.stacked-crooked.com/a/e0068c9db4372f63) too. However, you got my +1 :)', '2014-06-13 07:15:44', '', 183120),
(37529918, 14110096, 0, 'I suggest using `$http.defaults.headers.common[''X-XSRF-TOKEN''] = yourtoken` to have the token in all requests and not just in POST.', '2014-06-18 14:25:01', '', 532495),
(37736327, 14113461, 0, '@TedPennings: Your steps worked for me.', '2014-06-24 21:36:31', '', 3586),
(37752341, 14114411, 1, 'Which question is this a duplicate of?', '2014-06-25 09:47:17', '', 1460422),
(37768876, 14117348, 1, 'Note that this magical service is not referenced anywhere (or at least not any more) on the Authentication wiki page.', '2014-06-25 16:42:53', '', 508681),
(37811361, 17522369, 0, 'Unit testing against a DB means you have extra outside requirement for your tests. If that DB is down, or the data gets cleared, or anything happens to that DB your tests will fail. This isn''t desired. Repositories that expose IQueryable take about 2 mins to setup. No time wasted here. Why did DI take you a long time? All of this takes mins. I''ll say this all worked great for unit testing my complex queries in my service layer. It was so nice not needing a database to connect to. Getting a mocking framework from nuget took about a min. This stuff doesn''t take any time.', '2014-06-26 18:10:55', '', 441521),
(37811476, 14120227, 0, 'Controllers shouldn''t have business logic and specific queries is part of business logic. This is why I think exposing IQueryable is a good thing. Complex queries are business logic and we learn that belongs in a service layer. Not in the repository layer or controller. IMHO the repository layer should abstract your database access, but not give you every query you need for your business layer. Queries are business logic because you can, and should IMO, do logic in your queries whenever possible for performance.', '2014-06-26 18:14:36', '', 441521),
(37840367, 17522369, 0, '@user441521 Repositories with IQueryable 2 mins to setup? which world you are living in, every asp.net request on our live site is served within milliseconds. Mocking and faking etc adds more complexity to code, its total waste of time. Unit tests are useless when unit is not defined as business logic unit.', '2014-06-27 13:33:24', '', 85597),
(37891264, 14111651, 0, '@RyanStewart "when you change Foo.bars, then you should be changing Bar.foos correspondingly, so you shouldn''t care about what gets saved in the DB when you modify what." ... to me, this sounds contradictory.', '2014-06-29 20:45:10', '', 923560),
(38068870, 14110890, 0, 'No need to vote for close Im actually going through this now.', '2014-07-04 13:56:55', '', 148601),
(38120282, 14112752, 0, 'So sad when hearing you said that. I''m looking for solution', '2014-07-07 03:56:24', '', 1579262),
(38247300, 20159814, 2, 'You do not create repositories to be able to unit test them. You create repositories to be able to unit test the ***business logic***. As for making sure that queries work: it''s much easier to write integration tests for repositories as they only contain logic and not any business.', '2014-07-10 07:04:25', '', 70386),
(38247316, 20159814, 1, '`Coding for the exception`: Using repositories is not to be able to switch database engine. It''s about separating business from persistence.', '2014-07-10 07:05:09', '', 70386),
(38330491, 24711864, 0, 'Please explain in detail what this means. How do you set a key? The OP may not be aware of regedit. Explain that. Also explain the fde9(65001) code. Thanks.', '2014-07-12 15:07:43', '', 1021725),
(38713671, 17449069, 1, 'Entities don''t have to be dumb POCOs at all. In fact, modeling business logic into Entities is what the DDD crowd does all the time. This style of development blends very well with NH or EF.', '2014-07-23 17:03:09', '', 531232),
(39189728, 16198496, 0, 'Did you ever end up encapsulating this in a directive?', '2014-08-06 21:21:42', '', 2895909),
(39240845, 14245913, 0, 'Don''t put your GPG passphrase in a file.  See other answer about gpg-agent', '2014-08-08 07:33:56', '', 1704917),
(39271391, 14245913, 0, 'That might be better but your home directory should already only be accessible by yourself and be on an encrypted drive. By the time that is invaded .. it doesnt matter that much anymore if it is in a file accessible via the agent. But yes.. using the agent is even more secure.', '2014-08-09 01:08:58', '', 136445),
(39510838, 14116498, 2, 'I am not sure why this answer is rated so highly because it does not accomplish what the original question asked - which is to use ngModel.  Yes, one can avoid using ngModel by putting state in the parent controller but this comes at the expense of having two controllers tightly bound and not being able to use / reuse them independently.  It''s like using a global variable instead of setting up a listener between two components - it may technically be simpler but it''s not a good solution in most cases.', '2014-08-16 18:21:09', '', 74975),
(39510848, 14116498, 0, 'I''d add that if he wanted to rely on the parent controller he should inject it with ''require: ^parent'' anyway - so that he can make the dependency explicit and optional if desired.', '2014-08-16 18:21:45', '', 74975),
(39595298, 14109674, 0, 'Note that `DateTime.now.to_s` doesn''t return the fractional seconds. I used `DateTime.now.iso8601(6)` instead.', '2014-08-19 16:17:50', '', 1003545),
(39657270, 18806269, 0, 'Can you point out the idea behind it (or somewhere I can find it)? I really don''t have time to read that whole project', '2014-08-21 08:34:53', '', 2823146),
(39661849, 18806269, 0, 'Yes, the idea is very much based on what Romain Guy has presented on his website: http://www.curious-creature.org/2012/12/11/android-recipe-1-image-with-rounded-corners/ .', '2014-08-21 10:41:08', '', 878126),
(39750750, 14485464, 0, '+1. I hate accepted answers with no votes', '2014-08-24 12:36:43', '', 3315914),
(39903961, 14113150, 1, 'recommend moving the order(:name) to a scope (which is a method) in the model.  It''s not a big deal here but over time you will find that having, what is essentially business logic like this (ordering) on a view template becomes a mess.  Move it to the controller, or ideally the model and make a scope available there that you can use.  One example - if you end up with three screens or templates that use the dropdown, having the order in the views means 3 X duplication.  Having it in the model means it is defined in one place and that''s the only place to change it which is good.', '2014-08-28 17:19:22', '', 631619),
(40123485, 16198496, 0, 'I have something similar but find there is a flicker when the page scrolls to the top, then we scroll it back to the bottom. Have you found a way to avoid this?', '2014-09-04 20:15:58', '', 1398581),
(40531057, 14116215, 0, 'Noob question: Aren''t lazy functions supposed to reduce time by only evaluating when needed?', '2014-09-17 17:13:01', '', 1500692),
(40551082, 14115300, 0, 'yes it is, in if-elseif hierarchy if we required to ignore the result of certain condition this could be use. for example', '2014-09-18 08:19:05', '', 1431814),
(41039754, 20159814, 1, '+1 after years of implementing diffferent versions of the repository and unitofwork patterns i cannot agree more. practical use beats philosophy any day.', '2014-10-03 08:28:21', '', 1257570),
(41177864, 16198496, 1, '@JPOD please see my answer for a directive for this code. http://stackoverflow.com/questions/14107531/retain-scroll-position-on-route-change-in-angularjs/26244891#26244891', '2014-10-08 06:07:37', '', 790635),
(41284387, 26308288, 0, 'Also just to clarify, I''m using just Ruby... not rails so i can''t use any helper functions from there.', '2014-10-10 21:31:04', '', 4130927),
(41520155, 14110148, 0, '--jsonArray that was the solution for me.', '2014-10-18 09:03:58', '', 1475269),
(41585044, 14114419, 0, 'Is there a good reason the clean function does a str_replace before the preg_replace as the reg_replace takes care of the whitespace as well?', '2014-10-20 19:56:18', '', 538431),
(41694777, 14185426, 1, 'Worked fine for me on 1st try. For simplicity, I omit dimens.xml and changed android:resource="@dimen/app_defaultsize_w" to android:value="632dp", etc. And note, you can test yourself on http://developer.samsung.com/remotetestlab even if you don''t have Samsung device.', '2014-10-23 18:00:50', '', 907695),
(42118591, 25073496, 0, 'This solution worked best for me. I use ui router for routing and so I replaced all occurrences of $route with $state. Otherwise, no other changes were needed. I also like how $window and $anchorScroll are used instead of the jquery dependent $(window) that is used in some of the other proposed answers.', '2014-11-05 23:20:24', '', 1625066),
(42613260, 14974123, 0, 'Such a simple annoying problem.  I was about to write a script to insert one document at a time.  You saved me from that.  Thanks for the quick fix.', '2014-11-20 19:12:13', '', 2015469),
(43050681, 20803639, 0, 'An important statement within ur answer is, `More generally, when a set of business data is guaranteed to be unique by a given standard then this set of data is a [good] natural key candidate.`  Often, it is not the technical folks who ultimately enforce the standard.  Usually, its some non-technical manager who mandates an extra key be added to the pk while riding some Steve Jobs like power trip/delusion, in response to an anomaly in the business.  Ur own example may suggest this.  Why wouldn''t an airline, departureDate and flightNumber be unique? Why is the suffix even needed?', '2014-12-04 11:20:18', '', 714969),
(43279687, 14116498, 0, '@PatNiemeyer maybe I am overlooking something but when I compare the 2 plunkers I see no difference in controller usage so I do not see how the second version (without ng-model) creates highly coupled controllers?', '2014-12-11 08:23:31', '', 923378),
(43440851, 26482939, 0, 'I tried this but to no avail :(', '2014-12-16 13:13:00', '', 1025702),
(43573007, 14112515, 0, 'Python indentation is just bad.', '2014-12-19 20:57:08', '', 1713149),
(44277194, 20803639, 0, 'Regarding "Why is the suffix even needed?"; It is needed for the specific case when a regular daily flight is delayed to the next day (i.e originally scheduled for 23:00 then rescheduled for 00:30). If we use only the departureDate and the flighNumber then we will have a duplicate flight (the flight scheduled for day n+1 and the one originally scheduled for day n but rescheduled to day n+1 due to the delay). In order to keep the same flightNumber so we avoid client confusion, we add just a suffix (i.e ''D'' for example).', '2015-01-14 10:23:06', '', 3094941),
(44277675, 20803639, 0, 'Its true that sometimes - unfortunately - non-technical people ends up setting standards for technical people. However, I believe that standards should be put jointly by technical and functional people. The suffix example is a good demonstration that some non-technical considerations (people being lost by the change of their flight''s number) has to be taken into account when defining a standard. Moreover, when a standard is already widely adopted it does no longer matter whether it is a "good" or "bad" standard.', '2015-01-14 10:36:36', '', 3094941),
(44324567, 14974123, 0, 'gotta love simple solutions. thanks :)', '2015-01-15 14:42:39', '', 1129408),
(44517322, 14121669, 0, '`require ''active_support/core_ext` perfect, methods `days`, `months` also works like rails, thanks much.', '2015-01-21 13:55:36', '', 1939905),
(44819090, 20159814, 1, 'Wish I had more upvotes to give.', '2015-01-30 01:58:28', '', 4296);

-- --------------------------------------------------------

--
-- Table structure for table `Posts`
--

CREATE TABLE IF NOT EXISTS `Posts` (
  `Id` int(8) DEFAULT NULL,
  `PostTypeId` int(1) DEFAULT NULL,
  `AcceptedAnswerId` varchar(8) DEFAULT NULL,
  `ParentId` varchar(10) DEFAULT NULL,
  `CreationDate` varchar(19) DEFAULT NULL,
  `Score` int(3) DEFAULT NULL,
  `ViewCount` int(6) DEFAULT NULL,
  `Body` varchar(8584) DEFAULT NULL,
  `OwnerUserId` varchar(7) DEFAULT NULL,
  `OwnerDisplayName` varchar(11) DEFAULT NULL,
  `LastEditorUserId` varchar(7) DEFAULT NULL,
  `LastEditorDisplayName` varchar(10) DEFAULT NULL,
  `LastEditDate` varchar(19) DEFAULT NULL,
  `LastActivityDate` varchar(19) DEFAULT NULL,
  `Title` varchar(110) DEFAULT NULL,
  `Tags` varchar(74) DEFAULT NULL,
  `AnswerCount` int(2) DEFAULT NULL,
  `CommentCount` int(2) DEFAULT NULL,
  `FavoriteCount` varchar(2) DEFAULT NULL,
  `ClosedDate` varchar(19) DEFAULT NULL,
  `CommunityOwnedDate` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `Posts`
--

INSERT INTO `Posts` (`Id`, `PostTypeId`, `AcceptedAnswerId`, `ParentId`, `CreationDate`, `Score`, `ViewCount`, `Body`, `OwnerUserId`, `OwnerDisplayName`, `LastEditorUserId`, `LastEditorDisplayName`, `LastEditDate`, `LastActivityDate`, `Title`, `Tags`, `AnswerCount`, `CommentCount`, `FavoriteCount`, `ClosedDate`, `CommunityOwnedDate`) VALUES
(14107531, 1, '14110132', '', '2013-01-01 02:52:02', 18, 14316, '<p>Sample app: <a href="http://angular.github.com/angular-phonecat/step-11/app/#/phones">http://angular.github.com/angular-phonecat/step-11/app/#/phones</a></p>\n\n<p>If you choose the last phone "Motorola charm" it will show you the details of the phone. \nWhen you navigate back with on your browser it reloads the data and scrolling is at the top. </p>\n\n<p>What is the best way to automatically scroll to where is was left when navigatin back?\nAnd also, why does angular reloads the data? </p>\n\n<p>I have the same "angular-phonecat" sample on my computer and I have added an infinite scroll which loads more data as you scroll. So I really dont want the user to reload 50+ items again or scrolling down for 30 seconds.</p>\n', '', 'user1012032', '825568', '', '2013-01-01 03:38:24', '2014-10-13 14:51:57', 'Retain scroll position on route change in AngularJS?', '<javascript><angularjs>', 8, 3, '13', '', ''),
(14107354, 1, '14109674', '', '2013-01-01 01:53:10', 12, 6815, '<p>I have a string like <code>2012-01-01T01:02:03.456</code> that I am storing in a Postgres database TIMESTAMP using ActiveRecord.</p>\n\n<p>Unfortunately, Ruby seems to chop off the milliseconds:</p>\n\n<pre><code>ruby-1.9.3-rc1 :078 &gt; ''2012-12-31T01:01:01.232323+3''.to_datetime\n =&gt; Mon, 31 Dec 2012 01:01:01 +0300 \n</code></pre>\n\n<p>Postgrs supports microsecond resolution.  How can I get my timestamp to be saved accordingly? I need at least millisecond resolution.</p>\n\n<p>(PS Yes I could hack in a milliseconds integer column in postgres; that kind of defeats the whole purpose of ActiveRecord.)</p>\n\n<p><strong>UPDATE:</strong><br>\nThe very helpful responses showed that Ruby''s <code>DateTime</code> is <em>not</em> chopping off milliseconds; using <code>#to_f</code> shows it.  But, doing:</p>\n\n<pre><code>m.happened_at = ''2012-01-01T00:00:00.32323''.to_datetime\nm.save!\nm.reload\nm.happened_at.to_f\n</code></pre>\n\n<p>Does drop the milliseconds.</p>\n\n<p>Now, the interesting thing is that <code>created_at</code> does show milliseconds, both in Rails and Postgres.  But other timestamps fields (like <code>happened_at</code> above) don''t.  (Perhaps Rails uses a <code>NOW()</code> function for <code>created_at</code> as opposed to passing in a DateTime).</p>\n\n<p>Which leads to my ultimate question:<br>\n<strong>How can I get ActiveRecord to preserve millisecond resolution on timestamp fields?</strong></p>\n', '785494', '', '785494', '', '2013-01-01 10:32:39', '2013-11-15 14:39:26', 'Millisecond resolution of DateTime in Ruby', '<ruby><postgresql><datetime><activerecord><rails-postgresql>', 4, 0, '2', '', ''),
(14107208, 1, '14108774', '', '2013-01-01 01:13:40', 67, 40467, '<p>Is there any way to <code>find and replace text string automatically in all folder''s files</code>?</p>\n', '895174', '', '895174', '', '2013-12-19 08:25:50', '2014-12-17 17:25:55', 'Sublime text 2 - find and replace globally ( all files and in all directories )', '<replace><ide><find><sublimetext2><global>', 2, 0, '21', '', ''),
(14107804, 1, '14107826', '', '2013-01-01 04:22:58', 12, 4957, '<p>It is a known fact that there are three blocks of IPv4 Addresses that were chosen to be reserved for private networks:</p>\n\n<pre><code> 10.0.0.0        -   10.255.255.255  (10/8 prefix)\n 172.16.0.0      -   172.31.255.255  (172.16/12 prefix)\n 192.168.0.0     -   192.168.255.255 (192.168/16 prefix)\n</code></pre>\n\n<p>(as specified by <a href="http://tools.ietf.org/html/rfc1918">RFC 1918</a>). However, although I can sort of see why 10.0.0.0 would be a natural choice, I can think of no particular reason why 172.16.0.0 and 192.168.0.0 were chosen among all the possibilities. I tried to google about this but got nothing, and the RFC document did not provide any explanation either. Was it really just a random decision?</p>\n', '1939277', '', '62576', '', '2013-01-01 04:37:26', '2013-01-01 22:05:55', 'Reasons behind the choice of 172.16/192.168?', '<networking><protocols>', 1, 3, '4', '2013-01-01 04:33:52', ''),
(14108430, 1, '14259396', '', '2013-01-01 06:35:56', 12, 2790, '<p>I have a basic class that makes GET and POST requests using <code>HttpWebRequest</code>/<code>HttpWebResponse</code>.</p>\n\n<p>I use my class to login to an API and then request data. In a Windows 8 "Metro" application, it works exactly as expected. On a Windows Phone 8 application, the login appears to succeed, but in the subsequent request for data, no cookies are sent and the server responds as if the client is not logged in.</p>\n\n<p>Here is the class, this exact same code is used in the Windows 8 app and the Windows Phone app:</p>\n\n<pre><code>class Class1\n    {\n        CookieContainer cookieJar = new CookieContainer();\n        CookieCollection responseCookies = new CookieCollection();\n\n        public async Task&lt;string&gt; httpRequest(HttpWebRequest request)\n        {\n            string received;\n\n            using (var response = (HttpWebResponse)(await Task&lt;WebResponse&gt;.Factory.FromAsync(request.BeginGetResponse, request.EndGetResponse, null)))\n            {\n                using (var responseStream = response.GetResponseStream())\n                {\n                    using (var sr = new StreamReader(responseStream))\n                    {\n                        cookieJar = request.CookieContainer;\n                        responseCookies = response.Cookies;\n                        received = await sr.ReadToEndAsync();\n                    }\n                }\n            }\n\n            return received;\n        }\n\n        public async Task&lt;string&gt; get(string path)\n        {\n            var request = WebRequest.Create(new Uri(path)) as HttpWebRequest;\n            request.CookieContainer = cookieJar;\n\n            return await httpRequest(request);\n        }\n\n        public async Task&lt;string&gt; post(string path, string postdata)\n        {\n            var request = WebRequest.Create(new Uri(path)) as HttpWebRequest;\n            request.Method = "POST";\n            request.CookieContainer = cookieJar;\n\n            byte[] data = Encoding.UTF8.GetBytes(postdata);\n            using (var requestStream = await Task&lt;Stream&gt;.Factory.FromAsync(request.BeginGetRequestStream, request.EndGetRequestStream, null))\n            {\n                await requestStream.WriteAsync(data, 0, data.Length);\n            }\n\n            return await httpRequest(request);\n        }\n    }\n</code></pre>\n\n<p>And the code to initiate the requests:</p>\n\n<pre><code>    var n = new Class1();\n    await n.post("https://mydomain.com/api/login/", "username=myusername&amp;password=mypassword");\n    await n.get("https://mydomain.com/reader/feeds/");\n</code></pre>\n\n<p>The curious thing is that if I prefix the domain name with "www." it works in both the Windows Phone 8 app and the Windows 8 Metro app.</p>\n\n<p>I think it has something to do with how the domain is handled. The cookie''s domain is ".mydomain.com", and without the prefix it must think the cookie''s do not belong to that domain. After some searching I found <a href="http://blog.codeblack.nl/post/HttpWebRequest-HttpWebResponse-and-cookies.aspx">a report of someone noticing a similar problem</a>.</p>\n\n<p>What I do not understand is why this is treated differently in the Windows 8 app than the Windows Phone app, so that line-for-line identical code works on one platform but fails on another.</p>\n\n<hr>\n\n<p>I have done some more digging into this.</p>\n\n<p>The server code I used for this is in PHP:</p>\n\n<pre><code>&lt;?php\n\nif ($_REQUEST["what"] == "set")\n{\n    setcookie("TestCookie",$_REQUEST["username"] . " " . $_REQUEST["password"], time()+3600*24, "/", "subd.mydomain.com");\n}\n\nif ($_GET["what"] == "get")\n{\n    var_dump($_COOKIE);\n</code></pre>\n\n<p>Client code in C#:</p>\n\n<pre><code>    var n = new ClassLibrary1.Class1();\n            await n.get("http://subd.mydomain.com/?what=set&amp;username=foo&amp;password=bar");\n            await n.get("http://subd.mydomain.com/?what=get");\n</code></pre>\n\n<p>Here is an example of a cookie response from the server</p>\n\n<pre><code>Set-Cookie: ARRAffinity=295612ca; Path=/;Domain=subd.mydomain.com\nSet-Cookie: TestCookie=foo+bar; expires=Fri, 04-Jan-2013 17:19:25 GMT; path=/; domain=subd.mydomain.com\n</code></pre>\n\n<p>In the Windows 8 Store/Metro app, this is the result:</p>\n\n<pre><code>array(2) {\n  ["ARRAffinity"]=&gt;\n  string(8) "295612ca"\n  ["TestCookie"]=&gt;\n  string(7) "foo bar"\n}\n</code></pre>\n\n<p>In the Windows Phone app, this is the result:</p>\n\n<pre><code>array(0){\n}\n</code></pre>\n\n<p>The Windows Phone does not see any cookies when they are set this way.</p>\n\n<p>I change how <code>TestCookie</code> is set, the result from the server now looks like this:</p>\n\n<pre><code>Set-Cookie: ARRAffinity=295612ca;Path=/;Domain=subd.mydomain.com\nSet-Cookie: TestCookie=foo+bar; expires=Fri, 04-Jan-2013 17:29:59 GMT; path=/\n</code></pre>\n\n<p><code>TestCookie</code> now does not explicitly set a domain, ARRAffinity is unchanged.</p>\n\n<p>The Windows 8 Store/Metro app now returns this:</p>\n\n<pre><code>array(2) {\n  ["TestCookie"]=&gt;\n  string(7) "foo bar"\n  ["ARRAffinity"]=&gt;\n  string(8) "295612ca"\n}\n</code></pre>\n\n<p>The Windows Phone 8 app, returns this:</p>\n\n<pre><code>array(1) {\n  ["TestCookie"]=&gt;\n  string(7) "foo bar"\n}\n</code></pre>\n\n<p>The <code>ARRAffinity</code> cookie is not sent because it explicitly declares a domain.</p>\n\n<p>If I assign some breakpoints and check the <code>CookieContainer</code> of the request, I have two entries in the <code>m_domainTable</code></p>\n\n<pre><code>+       [0] {[.subd.mydomain.com, System.Net.PathList]} System.Collections.Generic.KeyValuePair&lt;string,System.Net.PathList&gt;\n+       [1] {[subd.mydomain.com, System.Net.PathList]}  System.Collections.Generic.KeyValuePair&lt;string,System.Net.PathList&gt;\n</code></pre>\n\n<p>The cookie that isn''t sent, is in the <code>.subd.mydomain.com</code> container. This is the same on both Windows 8 and Windows Phone 8.</p>\n\n<p>However, if the cookie declares itself like this:</p>\n\n<pre><code>Set-Cookie: TestCookie=foo+bar; expires=Fri, 04-Jan-2013 17:19:25 GMT; path=/; domain=.mydomain.com\n</code></pre>\n\n<p>It is correctly sent on Windows Phone 8.</p>\n\n<p>In my original case, the server declares the cookie the same way regardless of if it is accessed via mydomain.com or www.mydomain.com; as ".mydomain.com", but Windows Phone 8 doesn''t seem to think a cookie for ".mydomain.com" should be sent to "mydomain.com". This is problematic, as even if the server puts "subd.mydomain.com" as the domain, it is treated as having a preceding dot, and then doesn''t work through no fault of its own. It seems it has to not send domain info with the cookie to have it treated correctly.</p>\n', '66613', '', '66613', '', '2013-01-09 14:12:07', '2013-01-10 13:47:15', 'Cookies not sent on Windows Phone app, but cookies are sent with same code in Windows 8 app', '<c#><.net><http><windows-8><windows-phone-8>', 1, 6, '1', '', ''),
(14107919, 1, '14107928', '', '2013-01-01 04:57:39', 13, 12641, '<p>Is there any way to copy database structure without data in MySQL, so the new database will be the same as it is copied from, but with empty tables.</p>\n\n<p>After getting some suggestions I tried the command, but I am getting syntax error, my <code>username = root</code> and <code>password = nothing</code>. I guess the default one. I am trying following command, </p>\n\n<pre><code>mysqldump -u root -p -d xyz_db | mysql -u root -p -Dnew_db\n</code></pre>\n\n<p>what I am missing or misplacing in command?</p>\n', '1705804', '', '1705804', '', '2015-01-05 05:34:39', '2015-01-05 05:34:39', 'copy database structure without data in mysql (with empty tables)', '<mysql><copy><database-schema>', 4, 0, '4', '', ''),
(14109024, 1, '', '', '2013-01-01 08:33:07', 20, 20739, '<p>866 charset installed by default in Windows'' cmd.exe is poor and inconvinient as compared with glorious Unicode.</p>\n\n<p>Can I install Unicode by default or replace cmd.exe to another console and make it default so programms use it instead of cmd.exe?</p>\n\n<p>I understand that <strong>chcp 65001</strong> changes encoding only in the running console. I want to change charset at the system level.</p>\n', '1251169', '', '1002260', '', '2014-10-06 05:01:47', '2014-12-23 14:29:43', 'How to make Unicode charset in cmd.exe by default?', '<windows><unicode><character-encoding><cmd><console>', 3, 1, '9', '', ''),
(14107979, 1, '14108694', '', '2013-01-01 05:12:16', 18, 4492, '<p>I want to blur image rectangular or circular. After googling, I found that it is easy to blur whole image but it difficult to blur specific part of image (rectangular, circular). so how it is possible ??? </p>\n\n<p>Thanks in advance</p>\n', '1917782', '', '1917782', '', '2013-08-19 15:13:35', '2013-11-14 06:26:45', 'Blur an image of specific part (rectangular, circular)?', '<iphone><objective-c><ios>', 2, 10, '24', '', ''),
(14109079, 1, '17695402', '', '2013-01-01 08:43:25', 16, 31520, '<p>I am a newbie to Eclipse and Java. I''m trying to install Java to use Eclipse (I followed all instructions to install Java and Eclipse) but my Eclipse is not starting due to some bad configuration I guess. I can''t figure out why it''s not working for me.</p>\n\n<p><strong>Eclipse Installation:</strong></p>\n\n<ol>\n<li>Extracted Eclipse at <code>C:\\eclipse</code></li>\n<li>Created a shortcut to my desktop having target <code>C:\\eclipse\\eclipse.exe</code></li>\n</ol>\n\n<p>When I try to run Eclipse with this shortcut, I see following Eclipse splash screen for a second and it disappears. Eclipse does not start at all.</p>\n\n<p><img src="http://i.stack.imgur.com/LlTUj.png" alt="Eclipse Splash Screen"></p>\n\n<p><strong>JAVA Installation:</strong></p>\n\n<ol>\n<li>Installed JDK at <code>C:\\Program Files\\Java\\jdk1.7.0_10</code></li>\n<li>Installed JRE at <code>C:\\Program Files\\Java\\jre7</code></li>\n</ol>\n\n<p><strong>Environment Variables Configuration:</strong></p>\n\n<pre><code>JAVA_HOME = C:\\Program Files\\Java\\jdk1.7.0_10\nPATH = C:\\Program Files\\Java\\jdk1.7.0_10\\bin;\n</code></pre>\n\n<p>I tested my Java installation using the console and figured out this issue but I don''t know how to fix it, and I guess this is causing Eclipse not to start.</p>\n\n<p><strong>Problem:</strong></p>\n\n<p><img src="http://i.stack.imgur.com/aXxoU.png" alt="enter image description here"></p>\n\n<p>Any help will be highly appreciated!</p>\n', '1070732', '', '1871769', '', '2013-01-01 09:01:11', '2013-07-17 08:57:32', 'Error occured during initialization of VM (java/lang/NoClassDefFoundError: java/lang/Object)', '<windows><eclipse><java><java-7>', 3, 3, '5', '', ''),
(14109927, 1, '14110096', '', '2013-01-01 11:12:14', 15, 17611, '<p>I am using AngularJS with Rails. I have the following request which updates users in bulk.</p>\n\n<pre><code> $http{\n    method: ''POST'',\n    url: $scope.update_url,\n    params: {selected_ids: userIds}\n }\n</code></pre>\n\n<p>This cannot be a ''GET'' request due to restrictions in the length of the URL (http://support.microsoft.com/kb/208427)</p>\n\n<p>But for ''POST'' request, we need to have a CSRF authenticity token in the header.</p>\n\n<p>How can we set the CSRF Token to the post request header?</p>\n', '1300302', '', '', '', '', '2013-11-10 13:59:54', 'Angular JS Verify CSRF Token in POST Request', '<angularjs><javascript-framework>', 2, 0, '17', '', ''),
(14109724, 1, '14109796', '', '2013-01-01 10:41:09', 18, 37397, '<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href="http://stackoverflow.com/questions/920413/make-error-missing-separator">Make error: missing separator</a>  </p>\n</blockquote>\n\n\n\n<p>Have this code in makefile:</p>\n\n<pre><code>PROG = semsearch\nall: $(PROG)\n%: %.c\ngcc -o $@ $&lt; -lpthread\n\nclean:\nrm $(PROG)\n</code></pre>\n\n<p>and the error</p>\n\n<pre><code>missing separator. stop.\n</code></pre>\n\n<p>Can someone help me?</p>\n', '1827257', '', '648658', '', '2015-01-08 15:56:37', '2015-01-08 15:56:37', 'Makefile - missing separator', '<makefile><gnu-make>', 1, 3, '3', '2013-01-01 22:01:21', ''),
(14109474, 1, '', '', '2013-01-01 09:58:09', 19, 11399, '<p>i try to import into mongoDB 70 mega json file that is valid.\nbut getting this error over and over in aloop:</p>\n\n<pre><code> 01 11:42:20 exception:BSON representation of supplied JSON is too large: Failure parsing JSON string near: "name": "L\n 01 11:42:20\n 01 11:42:20 Assertion: 10340:Failure parsing JSON string near: "link": "h\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 kernel32.dll       BaseThreadInitThunk+0x12\n 01 11:42:20 ntdll.dll          RtlInitializeExceptionChain+0xef\n 01 11:42:20 exception:BSON representation of supplied JSON is too large: Failure parsing JSON string near: "link": "h\n 01 11:42:20\n 01 11:42:20 Assertion: 10340:Failure parsing JSON string near: }\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 kernel32.dll       BaseThreadInitThunk+0x12\n 01 11:42:20 ntdll.dll          RtlInitializeExceptionChain+0xef\n 01 11:42:20 exception:BSON representation of supplied JSON is too large: Failure parsing JSON string near: }\n 01 11:42:20\n 01 11:42:20 Assertion: 10340:Failure parsing JSON string near: ],\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 mongoimport.exe    ???\n 01 11:42:20 kernel32.dll       BaseThreadInitThunk+0x12\n 01 11:42:20 ntdll.dll          RtlInitializeExceptionChain+0xef\n 01 11:42:20 exception:BSON representation of supplied JSON is too large: Failure parsing JSON string near: ],\n</code></pre>\n\n<p>my json ( only small example from it ) consist meny meny structures as this one :</p>\n\n<pre><code>[ \n{\n   "data": [\n         "id": "xxxxxxxxxxxxxxxxxx",\n         "from": {\n            "name": "yyyyyyyyyyy",\n            "id": "1111111111111"\n         },\n         "to": {\n            "data": [\n               {\n                  "version": 1,\n                  "name": "1111111111111",\n                  "id": "1111111111111"\n               }\n            ]\n         },\n         "picture": "fffffffffffffffffffffff.jpg",\n         "link": "http://www.youtube.com/watch?v=qqqqqqqqqqqqq",\n         "source": "http://www.youtube.com/v/qqqqqqqqqqqqq?version=3&amp;autohide=1&amp;autoplay=1",\n         "name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",\n         "description": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx...",\n         "icon": "http://static.ak.fbcdn.net/rsrc.php/v2/xxx/r/dddd",\n         "actions": [\n            {\n               "name": "Comment",\n               "link": "http://www.xxx.com/1111111111111/posts/1111111111111"\n            },\n            {\n               "name": "Like",\n               "link": "http://www.xxxx.com/1111111111111/posts/1111111111111"\n            }\n         ],\n         "privacy": {\n            "value": ""\n         },\n         "type": "video",\n         "created_time": 1356953890,\n         "updated_time": 1356953890,\n         "likes": {\n            "data": [\n               {\n                  "name": "jjj ",\n                  "id": "59xxx67"\n               },\n               {\n                  "name": "xxxxx",\n                  "id": "79xxx27"\n               }\n            ],\n            "count": 2\n         },\n         "comments": {\n            "count": 0\n         }\n      },\n\n....\n....\n....\n}\n]\n</code></pre>\n\n<p>this is the general patern of the json ":</p>\n\n<pre><code>[\n{\n   "data": [\n      {\n\n      }\n    ],\n    "paging": {\n      "previous": "link",\n      "next": "link"\n   }\n},\n   "data": [\n      {\n      }\n    ],\n    "paging": {\n      "previous": "link",\n      "next": "link"\n   }\n},\n"data": [\n      {\n      }\n    ],\n    "paging": {\n      "previous": "link",\n      "next": "link"\n   }\n}\n]\n</code></pre>\n', '63898', '', '63898', '', '2013-01-01 12:22:16', '2014-12-16 13:20:44', 'mongodb mongoimport too large: Failure parsing errors', '<json><mongodb><import>', 5, 0, '7', '', ''),
(14109187, 1, '18806269', '', '2013-01-01 09:05:50', 12, 2665, '<p>There is a <a href="http://www.curious-creature.org/2012/12/11/android-recipe-1-image-with-rounded-corners/">nice post</a> made by the popular Google developer <a href="http://www.curious-creature.org/">Romain Guy</a> that shows how to use a rounded corners drawable (called "StreamDrawable" in <a href="https://docs.google.com/a/android.co.il/file/d/0B3dxhm5xm1sia2NfM3VKTXNjUnc/edit">his code</a> ) on a view efficiently.</p>\n\n<p>The sample itself works very well on my Galaxy S3 when in portrait mode, but I have a few issues with it:</p>\n\n<ol>\n<li><p>if the screen is small (for example on qvga screens), the shown images get cropped.</p></li>\n<li><p>if I have an input bitmap that is too small than how I wish to show it, the output image has its edges smeared. Even on the Galaxy S3, when you run the sample code and it''s on landscape, it looks awful:</p>\n\n<p><img src="http://i.stack.imgur.com/nr2Hw.jpg" alt="enter image description here"></p></li>\n<li><p>I''m still not sure about it (since I use a workaround of scaling the image for using the sample code), but it think that even this solution is a bit slow when being used in a listView. Maybe there is a renderscript solution for this?</p></li>\n</ol>\n\n<p>It doesn''t matter if I use setImageDrawable or setBackgroundDrawable. It must be something in the drawable itself.</p>\n\n<p>I''ve tried to play with the variables and the bitmapShader, but nothing worked. Sadly <a href="http://developer.android.com/reference/android/graphics/Shader.TileMode.html"><strong>TileMode</strong></a> doesn''t have a value for just stretching the image, only tiling it in some way.</p>\n\n<p>As a workaround I can create a new scaled bitmap, but it''s just a workaround. Surely there is a better way which will also not use more memory than it should.</p>\n\n<p>How do I fix those issues and use this great code?</p>\n', '878126', '', '488657', '', '2013-01-29 23:00:43', '2014-12-23 21:00:12', 'Using a rounded corners drawable', '<android><rounded-corners><android-drawable>', 3, 12, '14', '', ''),
(14109906, 1, '', '', '2013-01-01 11:10:35', 20, 463, '<p>I wonder if anyone can help me with a problem that is making me pull what''s left of my hair out...</p>\n\n<p>I am currently working on a project that requires me to talk to a Unidata database. PHP has no native driver to access this type of database, however, after some Googling, I found the following:</p>\n\n<p><a href="https://u2devzone.rocketsoftware.com/accelerate/articles/u2-pdo-driver/u2-pdo-driver">https://u2devzone.rocketsoftware.com/accelerate/articles/u2-pdo-driver/u2-pdo-driver</a>.</p>\n\n<p>I have the U2 Intercall header and library and I think I am including them correctly. However, the extension compiles but does not pass the tests as it errors out with</p>\n\n<pre><code>pdo_u2.so: undefined symbol: ic_universe_session in Unknown on line 0\n</code></pre>\n\n<p>which suggests to me that it is not being linked against the library. When I edit the makefile and specify by hand that the library should be included, it errors out with </p>\n\n<pre><code>relocation R_X86_64_32 against `.rodata.str1.1'' can not be used when making a shared object; recompile with -fPIC\n/home/kaigoh/Downloads/intcall/lib/libuvic.a: could not read symbols: Bad value\ncollect2: error: ld returned 1 exit status\nmake: *** [pdo_u2.la] Error 1\n</code></pre>\n\n<p>I have tried forcing the -fPIC switch in the makefile but I get the same error.</p>\n\n<p>I simply do not know enough about compiling custom PHP extensions to assist myself, and I am hoping there is a guru here who can point me in the right direction!</p>\n\n<p>UPDATE: This compiles perfectly using a 32-bit install of Linux, so no idea why it is failing with a 64-bit install...</p>\n', '421681', '', '421681', '', '2013-01-01 16:13:11', '2013-04-04 19:53:41', 'Trying to build PHP PDO extension for Rocket U2', '<php><pdo><u2><universe><unidata>', 1, 3, '', '', ''),
(14110532, 1, '14130068', '', '2013-01-01 12:37:52', 20, 797, '<p><em>What I mean by extended computation expressions is computation expressions with custom keywords defined via <a href="http://msdn.microsoft.com/en-us/library/hh289709.aspx">CustomOperation</a> attribute.</em></p>\n\n<p>When reading about <a href="http://files.meetup.com/2922732/Computation%20Expressions%20%28April%29.pdf">extended computation expressions</a>, I come across very cool IL DSL by @kvb:</p>\n\n<pre><code>let il = ILBuilder()\n\n// will return 42 when called\n// val fortyTwoFn : (unit -&gt; int)\nlet fortyTwoFn = \n    il {\n        ldc_i4 6\n        ldc_i4_0\n        ldc_i4 7\n        add\n        mul\n        ret\n    }\n</code></pre>\n\n<p>I wonder how the operations compose without using <code>for..in..do</code> construct. My gut feeling is that it starts with <code>x.Zero</code> member, but I haven''t found any reference to verify that.</p>\n\n<p>If the example above is too technical, here is a similar DSL where components of a slide are listed without <code>for..in..do</code>:</p>\n\n<pre><code>page {\n      title "Happy New Year F# community"\n      item "May F# continue to shine as it did in 2012"\n      code @"…"\n      button (…)\n} |&gt; SlideShow.show\n</code></pre>\n\n<p>I have a few closely related questions:</p>\n\n<ul>\n<li><em>How does one define or use extended computation expressions without <code>For</code> member (i.e. provide a small complete example)?</em> I don''t worry much if they aren''t monads any longer, I''m interested in them in developing DSLs.</li>\n<li><em>Can we use extended computation expressions with <code>let!</code> and <code>return!</code>? If yes, is there any reason of not doing so?</em> I ask these questions because I haven''t encountered any example using <code>let!</code> and <code>return!</code>.</li>\n</ul>\n', '634025', '', '634025', '', '2013-01-01 18:01:20', '2013-01-02 22:13:38', 'Extended computation expressions without for..in..do', '<f#><dsl><computation-expression><query-expressions>', 2, 0, '9', '', ''),
(14111052, 1, '14185426', '', '2013-01-01 13:54:10', 12, 12324, '<p>So I went and tried to add <code>Multi Window</code> support for my app following this <a href="http://www.modaco.com/page/news/_/android/developers-add-support-for-samsung-multi-window-to-your-apps-r823">link</a>. My app did appear in the <code>Multi Window</code> applications tab, and I was able to drag and drop it into the screen, however my app did not behave as <code>Multi Window</code> supported app should behave, but instead expanded to full screen. So I think there are some other changes that are need to be made to get it work properly, but I have no idea what. Does anyone have any ideas what could be the problem causing this behaviour?</p>\n', '1301750', '', '350040', '', '2014-06-04 17:59:26', '2014-10-14 06:22:19', 'Adding multi window support to android application', '<android><samsung-mobile><multi-window>', 3, 0, '19', '', ''),
(14110890, 1, '', '', '2013-01-01 13:31:03', 40, 6221, '<p>I always used Repository pattern but for my latest project I wanted to see if I could perfect the use of it and my implementation of “Unit Of Work”. The more I started digging I started asking myself the question: <strong>"Do I really need it?"</strong></p>\n\n<p>Now this all starts with a couple of comments on Stackoverflow with a trace to Ayende Rahien''s post on his blog, with 2 specific,</p>\n\n<ul>\n<li><a href="http://ayende.com/blog/3955/repository-is-the-new-singleton">repository-is-the-new-singleton</a></li>\n<li><a href="http://ayende.com/blog/153701/ask-ayende-life-without-repositories-are-they-worth-living">ask-ayende-life-without-repositories-are-they-worth-living</a></li>\n</ul>\n\n<p>This could probably be talked about forever and ever and it depends on different applications. Whats I like to know,</p>\n\n<ol>\n<li>would this approach be suited for a Entity Framework project?</li>\n<li>using this approach is the business logic still going in a service layer, or extension methods (as explained below, I know, the extension method is using NHib session)?</li>\n</ol>\n\n<p><strong>That''s easily done using extension methods. Clean, simple and reusable.</strong></p>\n\n<pre><code>public static IEnumerable GetAll(\n    this ISession instance, Expression&lt;Func&lt;T, bool&gt;&gt; where) where T : class\n{\n    return instance.QueryOver().Where(where).List();\n}\n</code></pre>\n\n<p>Using this approach and <code>Ninject</code> as DI, do I need to make the <code>Context</code> a interface and inject that in my controllers?</p>\n', '148601', '', '301832', '', '2013-01-01 13:43:01', '2015-01-30 02:02:48', 'NOT using repository pattern, use the ORM as is (EF)', '<entity-framework><design-patterns><architecture><aop><repository-pattern>', 7, 7, '25', '', ''),
(14111677, 1, '14974234', '', '2013-01-01 15:29:08', 16, 14581, '<p>I''m seeing many of these errors when using my emulator with IntelliJ.  I''m not sure what to do about it.  It doesn''t appear to have been affecting anything, so I haven''t paid much attention to it.  But I''m concerned it may cause an issue before long.</p>\n\n<pre><code>01-01 15:16:22.805: ERROR/StrictMode(607): null\n        android.app.ServiceConnectionLeaked: Service com.android.exchange.ExchangeService has leaked ServiceConnection com.android.emailcommon.service.ServiceProxy$ProxyConnection@40cf0270 that was originally bound here\n        at android.app.LoadedApk$ServiceDispatcher.&lt;init&gt;(LoadedApk.java:969)\n        at android.app.LoadedApk.getServiceDispatcher(LoadedApk.java:863)\n        at android.app.ContextImpl.bindService(ContextImpl.java:1418)\n        at android.app.ContextImpl.bindService(ContextImpl.java:1407)\n        at android.content.ContextWrapper.bindService(ContextWrapper.java:473)\n        at com.android.emailcommon.service.ServiceProxy.setTask(ServiceProxy.java:157)\n        at com.android.emailcommon.service.ServiceProxy.setTask(ServiceProxy.java:145)\n        at com.android.emailcommon.service.AccountServiceProxy.getDeviceId(AccountServiceProxy.java:116)\n</code></pre>\n', '197606', '', '', '', '', '2013-03-16 07:47:48', '"com.android.exchange.ExchangeService has leaked ..." error when running emulator', '<java><android>', 1, 4, '1', '2013-03-26 02:49:38', ''),
(14111679, 1, '14111686', '', '2013-01-01 15:29:30', 15, 635, '<p>In Java, I''ve done things like the following without thinking much about it:</p>\n\n<pre><code>public class Main {\n\n    public void run() {\n        // ...\n    }\n\n    public static void main(String[] args) {\n        new Main().run();\n    }\n}\n</code></pre>\n\n<p>However, recently I''ve become unsure as to whether doing that is safe. After all, there is no reference to the <code>Main</code> object after it''s created (well, there is the <code>this</code> reference, but does that count?), so it looks like there''s a danger that the garbage collector might delete the object while it''s in the middle of executing something. So perhaps the <code>main</code> method should look like this:</p>\n\n<pre><code>    public static void main(String[] args) {\n        Main m = new Main();\n        m.run();\n    }\n</code></pre>\n\n<p>Now, I''m pretty sure that the first version works and I''ve never had any problems with it, but I''d like to know if it''s safe to do in all cases (not only in a specific JVM, but preferably according to what the language specification says about such cases).</p>\n', '595306', '', '', '', '', '2014-03-19 09:54:49', 'Java - Can objects which are executing methods be garbage-collected?', '<java><object><garbage-collection><main>', 3, 4, '4', '', ''),
(14111572, 1, '14112752', '', '2013-01-01 15:15:10', 16, 2080, '<p>Let say I have a storyboard that contains <code>UINavigationController</code> as initial view controller. Its root view controller is subclass of <code>UITableViewController</code>, which is <code>BasicViewController</code>. It has <code>IBAction</code> which is connected to right navigation button of the navigation bar<br />\n<br />\nFrom there I would like to use the storyboard as a template for other views without having to create additional storyboards. Say these views will have exactly the same interface but with root view controller of class <code>SpecificViewController1</code> and <code>SpecificViewController2</code> which are subclasses of <code>BasicViewController</code>.<br />\nThose 2 view controllers would have the same functionality and interface except for the <code>IBAction</code> method.<br />\nIt would be like the following:</p>\n\n<pre><code>@interface BasicViewController : UITableViewController\n\n@interface SpecificViewController1 : BasicViewController\n\n@interface SpecificViewController2 : BasicViewController\n</code></pre>\n\n<p>Can I do something like that?<br />\nCan I just instantiate the storyboard of <code>BasicViewController</code> but have root view controller to subclass <code>SpecificViewController1</code> and <code>SpecificViewController2</code>?<br />\n<br />\nThanks.</p>\n', '737888', '', '', '', '', '2013-01-01 17:51:21', 'How to use single storyboard uiviewcontroller for multiple subclass', '<objective-c><cocoa-touch><ios5><uiviewcontroller><storyboard>', 1, 1, '4', '', ''),
(14112839, 1, '14112929', '', '2013-01-01 18:01:40', 18, 4375, '<p>This is from <a href="http://docs.jboss.org/hibernate/orm/3.3/reference/en/html/mapping.html">Hibernate official tutorial</a>:</p>\n\n<blockquote>\n  <p>There is an alternative <code>&lt;composite-id&gt;</code> declaration that allows access to legacy data with composite keys. Its use is strongly discouraged for anything else.</p>\n</blockquote>\n\n<p>Why are composite keys discouraged? I am considering using a 3-column table where all of the columns are foreign keys and together form a primary key that is a meaningful relationship in my model. I don''t see why this is a bad idea, espicially that I will be using an index on them.</p>\n\n<p>What''s the alternative? Create an additional automatically generated column and use it as a primary key? I still need to query my 3 columns anyways!?</p>\n\n<p>In short, why is this statement true? and what''s the better alternative?</p>\n', '1230594', '', '', '', '', '2014-11-26 15:49:57', 'Why are composite keys discouraged in hibernate?', '<java><database><hibernate><orm><composite-key>', 4, 1, '12', '', ''),
(14111607, 1, '14111651', '', '2013-01-01 15:20:37', 11, 2699, '<p>Foo has:</p>\n\n<pre><code>@ManyToMany(mappedBy = "foos")\nprivate Set&lt;Bar&gt; bars\n</code></pre>\n\n<p>and Bar has :</p>\n\n<pre><code>@ManyToMany\nprivate Set&lt;Foo&gt; foos\n</code></pre>\n\n<p>What difference does the location of mappedBy attribute make to a bi-directional relationship , other than whether table is called foo_bar, or bar_foo; and without the mappedBy attribute I get two join tables, both foo_bar and bar_foo.</p>\n', '106261', '', '106261', '', '2013-01-01 15:26:47', '2013-01-01 15:28:29', '@ManyToMany(mappedBy = "foo")', '<java><hibernate><orm>', 3, 0, '1', '', ''),
(14111831, 1, '', '', '2013-01-01 15:54:36', 13, 2433, '<p>I want to code an application that can read and decode a pdf document; now where I''m supposed to get the specs for this fileformat ? The PDF format is standardized from the ISO group but it''s not clear to me where is the most reliable source for getting this kind of informations.</p>\n\n<p>what is a good source to start with this file format ?</p>\n', '1824407', '', '', '', '', '2015-01-19 22:40:03', 'PDF specifications for coders: Adobe or ISO?', '<c++><c><pdf><specifications>', 2, 21, '3', '', ''),
(14112515, 1, '14112532', '', '2013-01-01 17:22:12', 31, 7604, '<p>Today, after half an hour of searching for a bug, I discovered that it is possible to put a semicolon after an if statement instead of code, like this:</p>\n\n<pre><code>if(a == b);\n//do stuff\n</code></pre>\n\n<p>which basically means that the stuff will be done whether a equals b or not, and the if statement has no point whatsoever. Why doesn''t java give me an error? Is there any situation in which this would be useful?</p>\n', '1144231', '', '527702', '', '2013-01-02 13:36:48', '2013-06-04 10:02:23', 'semicolon at end of if statement', '<java><if-statement><semicolon>', 14, 6, '6', '', ''),
(14113057, 1, '14113150', '', '2013-01-01 18:27:49', 21, 34027, '<p>I am creating a scaffold -</p>\n\n<pre><code>rails g scaffold Contact email:string email_provider:string \n</code></pre>\n\n<p>but I want the email provider to be a drop down (with gmail/yahoo/msn as options) and not a text field. How can I do this ? </p>\n\n<p>Thanks</p>\n\n<p>Edit - I see this code </p>\n\n<pre><code>&lt;%= f.select :email_provider, options_for_select(%w[Gmail Yahoo MSN]) %&gt;\n</code></pre>\n\n<p>is working fine for me, so just wondering what is the difference in using Select and collection_select as mentioned in below answers ? </p>\n', '692622', '', '631619', '', '2013-01-01 21:12:18', '2014-10-16 20:33:59', 'How to have a drop down <select> field in a rails form?', '<ruby-on-rails><ruby-on-rails-3><drop-down-menu><input><selectlist>', 4, 0, '12', '', ''),
(14113427, 1, '15395445', '', '2013-01-01 19:19:03', 127, 48227, '<p>Trying to update Homebrew with <code>brew update</code> I got the following error</p>\n\n<pre><code>error: The following untracked working tree files would be overwrittenby merge:     \n Library/Formula/argp-standalone.rb\n Library/Formula/cocot.rb \nPlease move or remove them before you can merge. \nAborting \nUpdating e088818..5909e2c \nError: Failed while executing git pull  origin refs/heads/master:refs/remotes/origin/master\n</code></pre>\n\n<p>I found a blog post by someone who experienced a similar problem after having installed Mountain Lion (which I did this week too). He explains how he removed the files referred to in the error message</p>\n\n<pre><code>I removed these files:\n$ cd $(brew --prefix)\n$ rm cocot.rb\nHowever, removing these files didn''t help with the brew update. Instead I had to manually update brew through git:\n$ cd $(brew --prefix)\n$ git fetch origin\n$ git reset --hard origin/master\n$ brew update\nAlready up-to-date.\n</code></pre>\n\n<p>Assuming those instructions are correct (which I maybe shouldn''t assume), I tried to follow these instructions and do </p>\n\n<pre><code>    $ cd $(brew --prefix)\n    $ rm cocot.rb\n</code></pre>\n\n<p>However, it said ''file doesn''t exist'' when I tried to rm cocot.rb</p>\n\n<p>One thing I''m not sure about is the <code>cd $(brew --prefix)</code> Are those the exact words I type or do I have to replace prefix with something? the cd was successful, so I''m assuming it was correct -- it moved me into /usr/local, but there was no file to remove. Contents of /usr/local are</p>\n\n<pre><code>Cellar              clamXav             git             mysql               var Library             doc             heroku              mysql-5.5.15-osx10.6-x86_64 README.md           etc             include             rvm bin             foreman             lib             share\n</code></pre>\n\n<p>At any rate, do you know how I can fix the ''brew update''</p>\n\n<p>Update: After removing the files according to favoretti''s instructions and trying <code>chown -R &lt;your_username&gt; $(brew --prefix)/.git</code>, I got the following error running <code>brew update</code></p>\n\n<pre><code>error: The following untracked working tree files would be overwritten by merge:\n    Library/Aliases/gperftools\n    Library/Aliases/hashdeep\n    Library/Aliases/htop\n    Library/Aliases/nodejs\n    Library/Aliases/ocio\n    Library/Aliases/oiio\n    Library/Aliases/pgrep\n    Library/Aliases/pkill\n    Library/Aliases/qt4\n    Library/Aliases/twolame\n    Library/Aliases/wxwidgets\n    Library/Contributions/cmds/brew-aspell-dictionaries\n    Library/Contributions/cmds/brew-beer.rb\n    Library/Contributions/cmds/brew-dirty.rb\n    Library/Contributions/cmds/brew-graph\n    Library/Contributions/cmds/brew-grep\n    Library/Contributions/cmds/brew-leaves.rb\n    Library/Contributions/cmds/brew-linkapps.rb\n    Library/Contributions/cmds/brew-ls-taps.rb\n    Library/Contributions/cmds/brew-man\n    Library/Contributions/cmds/brew-md5-to-sha1\n    Library/Contributions/cmds/brew-mirror-check.rb\n    Library/Contributions/cmds/brew-pull.rb\n    Library/Contributions/cmds/brew-readall.rb\n    Library/Contributions/cmds/brew-server\n    Library/Contributions/cmds/brew-services.rb\n    Library/Contributions/cmds/brew-switch.rb\n    Library/Contributions/cmds/brew-test-bot.rb\n    Library/Contributions/cmds/brew-tests.rb\n    Library/Contributions/cmds/brew-unpack.rb\n    Library/Contributions/cmds/brew-which.rb\n    Library/Contributions/cmds/git\n    Library/Contributions/cmds/svn\n    Library/ENV/4.3/apr-1-config\n    Library/ENV/4.3/bsdmake\n    Library/ENV/4.3/c++\n    Library/ENV/4.3/c89\n    Library/ENV/4.3/c99\n    Library/ENV/4.3/cc\n    Library/ENV/4.3/clang\n    Library/ENV/4.3/clang++\n    Library/ENV/4.3/cpp\n    Library/ENV/4.3/g++\n    Library/ENV/4.3/gcc\n    Library/ENV/4.3/git\n    Library/ENV/4.3/i686-apple-darwin11-llvm-g++-4.2\n    Library/ENV/4.3/i686-apple-darwin11-llvm-gcc-4.2\n    Library/ENV/4.3/ld\n    Library/ENV/4.3/llvm-g++\n    Library/ENV/4.3/llvm-g++-4.2\n    Library/ENV/4.3/llvm-gcc\n    Library/ENV/4.3/llvm-gcc-4.2\n    Library/ENV/4.3/make\n    Library/ENV/4.3/mig\n    Library/ENV/4.3/sed\n    Library/ENV/4.3/svn\n    Library/ENV/4.3/xcrun\n    Library/ENV/libsuperenv.rb\n    Library/ENV/pkgconfig/leopard/libcrypto.pc\n    Library/ENV/pkgconfig/leopard/libcurl.pc\n    Library/ENV/pkgconfig/mountain_lion/libcurl.pc\n    Library/ENV/pkgconfig/mountain_lion/libexslt.pc\n    Library/ENV/pkgconfig/mountain_lion/libxml-2.0.pc\n    Library/ENV/pkgconfig/mountain_lion/libxslt.pc\n    Library/Formula/abcl.rb\n    Library/Formula/abcmidi.rb\n    Library/Formula/aiccu.rb\n    Library/Formula/akka.rb\n    Library/Formula/alac.rb\n    Library/Formula/alure.rb\n    Library/Formula/appledoc.rb\n    Library/Formula/arangodb.rb\n    Library/Formula/argp-standalone.rb\n    Library/Formula/argtable.rb\n    Library/Formula/autopano-sift-c.rb\n    Library/Formula/avian.rb\n    Library/Formula/avidemux.rb\n    Library/Formula/avro-cpp.rb\n    Library/Formula/aws-cloudsearch.rb\n    Library/Formula/aws-sns-cli.rb\n    Library/Formula/backupninja.rb\n    Library/Formula/bact.rb\n    Library/Formula/bam.rb\n    Library/Formula/basex.rb\n    Library/Formula/berkeley-db4.rb\n    Library/Formula/bind.rb\n    Library/Formula/blazeblogger.rb\n    Library/Formula/bochs.rb\n    Library/Formula/boost149.rb\n    Library/Formula/bsdconv.rb\n    Library/Formula/bsdmake.rb\n    Library/Formula/buildapp.rb\n    Library/Formula/bup.rb\n    Library/Formula/byacc.rb\n    Library/Formula/cadubi.rb\n    Library/Formula/camellia.rb\n    Library/Formula/casperjs.rb\n    Library/Formula/ccextractor.rb\n    Library/Formula/cconv.rb\n    Library/Formula/cdo.rb\n    Library/Formula/cdpr.rb\n    Library/Formula/cgvg.rb\n    Library/Formula/checkstyle.rb\n    Library/Formula/chordii.rb\n    Library/Formula/chruby.rb\n    Library/Formula/cifer.rb\n    Library/Formula/clhep.rb\n    Library/Formula/cntlm.rb\n    Library/Formula/cocot.rb\n    Library/Formula/cogl.rb\n    Library/Formula/collada-dom.rb\n    Library/Formula/crash.rb\n    Library/Formula/crossroads.rb\n    Library/Formula/crosstool-ng.rb\n    Library/Formula/css-crush.rb\n    Library/Formula/csync.rb\n    Library/Formula/ctemplate.rb\n    Library/Formula/curlftpfs.rb\n    Library/Formula/cutter.rb\n    Library/Formula/cvsutils.rb\n    Library/Formula/darkstat.rb\n    Library/Formula/darner.rb\n    Library/Formula/dart.rb\n    Library/Formula/dasm.rb\n    Library/Formula/debianutils.rb\n    Library/Formula/dfc.rb\n    Library/Formula/dgtal.rb\n    Library/Formula/dhcping.rb\n    Library/Formula/di.rb\n    Library/Formula/dmtx-utils.rb\n    Library/Formula/drip.rb\n    Library/Formula/dsniff.rb\n    Library/Fo\nAborting\nUpdating e088818..c1fbc29\nError: Failed while executing git pull  origin refs/heads/master:refs/remotes/origin/master\n</code></pre>\n', '1647484', '', '1647484', '', '2013-01-01 19:46:29', '2014-07-27 01:50:22', 'Brew update failed', '<homebrew>', 8, 1, '60', '', ''),
(14113691, 1, '14118242', '', '2013-01-01 19:56:44', 13, 709, '<p>I am trying to develop pictorial charts. Is it possible to develop such charts in R ?\n<img src="http://i.stack.imgur.com/QfVoU.jpg" alt="enter image description here"></p>\n\n<pre><code> myd &lt;- data.frame (categories = c("Planes", "Ships", "Cars", "Trains"), \nvalues = c(15, 18, 22, 11))\n</code></pre>\n\n<p>Component icons are here: </p>\n\n<p><img src="http://i.stack.imgur.com/WNinq.jpg" alt="enter image description here">\n<img src="http://i.stack.imgur.com/7dqJM.jpg" alt="enter image description here">\n<img src="http://i.stack.imgur.com/9E3Wj.jpg" alt="enter image description here">\n<img src="http://i.stack.imgur.com/tStmx.jpg" alt="enter image description here"></p>\n', '1502364', '', '', '', '', '2013-01-02 09:19:58', 'pictorial chart in r', '<r><graph><plot><image><figure>', 1, 3, '8', '', '');
INSERT INTO `Posts` (`Id`, `PostTypeId`, `AcceptedAnswerId`, `ParentId`, `CreationDate`, `Score`, `ViewCount`, `Body`, `OwnerUserId`, `OwnerDisplayName`, `LastEditorUserId`, `LastEditorDisplayName`, `LastEditDate`, `LastActivityDate`, `Title`, `Tags`, `AnswerCount`, `CommentCount`, `FavoriteCount`, `ClosedDate`, `CommunityOwnedDate`) VALUES
(14113278, 1, '14485464', '', '2013-01-01 18:56:52', 55, 11867, '<p>I have an offline web application using appcaching. I need to provide it about 10MB - 20MB of data that it will save (client-side) consisting mainly of PNG image files. The operation is as follows:</p>\n\n<ol>\n<li>Web application downloads and installs in appcache (uses manifest)</li>\n<li>Web app requests from server PNG data files (how? - see alternatives below)</li>\n<li>Occasionally web app resyncs with server, and does small partial updates/deletes/additions to PNG database</li>\n<li>FYI: Server is a JSON REST server, that can place files in wwwroot for pickup</li>\n</ol>\n\n<p>Here is my current analysis of client-based "databases" that handle binary blob storage</p>\n\n<h1>SEE UPDATE at Bottom</h1>\n\n<ul>\n<li><strong>AppCache</strong> (via manifest add all the PNG and then update on demand)\n<ul>\n<li>CON: any change of a PNG database item will mean complete download of all items in manifest (Really bad news!)</li>\n</ul></li>\n<li><strong>WebStorage</strong>\n<ul>\n<li>CON: Designed for JSON storage</li>\n<li>CON: can only store blobs via base64 encoding (probably fatal flaw due to cost of de-encoding)</li>\n<li>CON: Hard limit of 5MB for webStorage <a href="http://htmlui.com/blog/2011-08-23-5-obscure-facts-about-html5-localstorage.html">http://htmlui.com/blog/2011-08-23-5-obscure-facts-about-html5-localstorage.html</a></li>\n</ul></li>\n<li><strong>PhoneGap &amp; SQLLite</strong>\n<ul>\n<li>CON: Sponsor will reject it as a native app requiring certification</li>\n</ul></li>\n<li><strong>ZIP file</strong>\n<ul>\n<li>Server creates a zip file, places it in wwwroot, and notifies client</li>\n<li>user has to manually unzip (At least that is how I see it) and save to client file system</li>\n<li>Web app uses FileSystem API to reference files</li>\n<li>CON: ZIP might be too large (zip64?), long time to create</li>\n<li>CON: Not sure if FileSystem API can always read out of the sandbox (I think so)</li>\n</ul></li>\n<li><strong>USB or SD card</strong> (back to the stone age....)\n<ul>\n<li>The user will be local to the server before going offline</li>\n<li>So we could have him insert a SD card, let the server fill it with PNG files</li>\n<li>Then the user will plug it into the laptop, tablet</li>\n<li>Web app will use FileSystem API to read the files </li>\n<li>CON: Not sure if FileSystem API can always read out of the sandbox (I think so)</li>\n</ul></li>\n<li><strong>WebSQL</strong>\n<ul>\n<li>CON: w3c has abandoned it (pretty bad)</li>\n<li>I might consider a Javascript wrapper that uses IndexedDB and WebSQL as a fall-back</li>\n</ul></li>\n<li><strong>FileSystem API</strong>\n<ul>\n<li>Chrome supports read/write of blobs </li>\n<li>CON: not clear about IE and FireFox (IE10, has non-standard msSave)</li>\n<li>caniuse.com reports IOS and Android support (but again, is this just r/w of JSON, or does it include the full blob API for writing?</li>\n<li>CON: FireFox folks dislike FileSystem API &amp; not clear if they are supporting saving blobs: <a href="https://hacks.mozilla.org/2012/07/why-no-filesystem-api-in-firefox/">https://hacks.mozilla.org/2012/07/why-no-filesystem-api-in-firefox/</a></li>\n<li>PRO: <em>Much</em> faster than IndexedDB for blobs according to jsperf <a href="http://jsperf.com/indexeddb-vs-localstorage/15">http://jsperf.com/indexeddb-vs-localstorage/15</a> (page 2)</li>\n</ul></li>\n<li><strong>IndexedDB</strong>\n<ul>\n<li>Good support in IE10, FireFox (save, read blobs)</li>\n<li>Good speed and easier management than a file system (deletes, updates) </li>\n<li>PRO: see speed tests: <a href="http://jsperf.com/indexeddb-vs-localstorage/15">http://jsperf.com/indexeddb-vs-localstorage/15</a></li>\n<li>See this article on storing and display of images in IndexedDB: <a href="https://hacks.mozilla.org/2012/02/storing-images-and-files-in-indexeddb/">https://hacks.mozilla.org/2012/02/storing-images-and-files-in-indexeddb/</a></li>\n<li>CON: I confirmed that Chrome does not yet support blob writing (current bug, but not clear when it will be fixed)</li>\n<li>UPDATE: Chrome developers confirm they are working on this for both desktop and android! no timeline yet.</li>\n</ul></li>\n<li><strong>LawnChair</strong> JavaScript wrapper <a href="http://brian.io/lawnchair/">http://brian.io/lawnchair/</a>\n<ul>\n<li>PRO: very clean wrapper for IndexedDB, WebSQL or whatever database you have (think polyfill)</li>\n<li>CON: cannot store binary blobs, only data:uri (base64 encoding) (probably fatal flaw due to cost of de-encoding)</li>\n</ul></li>\n<li><strong>IndexedDB JQUERY</strong> polyFill <a href="https://github.com/axemclion/jquery-indexeddb">https://github.com/axemclion/jquery-indexeddb</a>\n<ul>\n<li>Parashuram has writtent a nice JQUERY wrapper for the raw IndexedDB interface</li>\n<li>PRO: greatly simplifies using IndexedDB, I was hoping to add a shim/polyfill for Chrome FileSystemAPI</li>\n<li>CON: It should handle blobs, but I was unable to get it to work</li>\n</ul></li>\n<li><strong>idb.filesystem.js</strong> <a href="http://ericbidelman.tumblr.com/post/21649963613/idb-filesystem-js-bringing-the-html5-filesystem-api">http://ericbidelman.tumblr.com/post/21649963613/idb-filesystem-js-bringing-the-html5-filesystem-api</a>\n<ul>\n<li>Eric Bidelman @ Google has written a well tested PolyFill the FileSystem API that uses Indexed DB as a fall back</li>\n<li>PRO: FileSystem API is well suited for storing blobs</li>\n<li>PRO: works great on FireFox and Chrome\n<ul>\n<li>PRO: great for synchronizing with cloud based CouchDB</li>\n</ul></li>\n<li>CON: no clear why, but it is not working on IE10</li>\n</ul></li>\n<li><strong>PouchDB</strong> JavaScript Library <a href="http://pouchdb.com/">http://pouchdb.com/</a>\n<ul>\n<li>great for syncing a CouchDB with a local DB (uses either WebSQL or IndexedDB (not my problem though)</li>\n<li>CON: NO CONS, PouchDB now supports binary blobs for all recent browsers (IE, Chrome, Firefox, Chrome on mobile, etc.) as well as many older browsers. That was not the case when I first did this post.</li>\n</ul></li>\n</ul>\n\n<p>NOTE: to see a data:uri encoding of PNG I created an example at: <a href="http://jsbin.com/ivefak/1/edit">http://jsbin.com/ivefak/1/edit</a></p>\n\n<p><strong>Desired/Usefull/Uneeded Features</strong></p>\n\n<ul>\n<li>No native (EXE, PhoneGap, ObjectiveC, etc) app on client (pure web application)</li>\n<li>Only needs to run on latest Chrome, FireFox, IE10 for laptops</li>\n<li>Strongly want same solution for Android Tablet (IOS would be nice too) but only need one browser to work (FF, Chrome, etc.)</li>\n<li>Fast initial DB population</li>\n<li>REQUIREMENT: Very fast retrieval of images by web application from storage (DB, file)</li>\n<li>Not meant for consumers. We can restrict browsers, and ask user to do special setup &amp; tasks, but let''s minimize that</li>\n</ul>\n\n<p><strong>IndexedDB Implementations</strong></p>\n\n<ul>\n<li>There is an excellent article on how IE,FF,and Chrome internally implement this at: <a href="http://www.aaron-powell.com/web/indexeddb-storage">http://www.aaron-powell.com/web/indexeddb-storage</a></li>\n<li>In short:\n<ul>\n<li>IE uses the same database format as Exchange and Active Directory for IndexedDB</li>\n<li>Firefox is using SQLite so are kind of implementing a NoSQL database in to SQL database</li>\n<li>Chrome (and WebKit) are using a Key/ Value store which has heritage in BigTable</li>\n</ul></li>\n</ul>\n\n<p><strong>My Current Results</strong></p>\n\n<ul>\n<li>I chose to use an IndexedDB approach (and polyfill with FileSystemAPI for Chrome until they ship blob support)</li>\n<li>For fetching the tiles, I had a dilemna since the JQUERY folks are kvetching about adding this to AJAX</li>\n<li>I went with XHR2-Lib by Phil Parsons, which is very much like JQUERY .ajax() <a href="https://github.com/p-m-p/xhr2-lib">https://github.com/p-m-p/xhr2-lib</a></li>\n<li>Performance for 100MB downloads (IE10 4s, Chrome 6s, FireFox 7s). </li>\n<li>I could not get any of the IndexedDB wrappers to work for blobs (lawnchair, PouchDB, jquery-indexeddb, etc.)</li>\n<li>I rolled my own wrapper, and performance is (IE10 2s, Chrome 3s, FireFox 10s)</li>\n<li>With FF, I assume we are seeing the performance issue of using a relational DB (sqllite) for a non-sql storage</li>\n<li>NOTE, Chrome has outstanding debug tools (developer tab, resources) for inspecting the state of the IndexedDB.</li>\n</ul>\n\n<p><strong>FINAL Results posted below as answer</strong></p>\n\n<h1>Update</h1>\n\n<p>PouchDB now supports binary blobs for all recent browsers (IE, Chrome, Firefox, Chrome on mobile, etc.) as well as many older browsers. That was not the case when I first did this post.</p>\n', '959460', '', '959460', '', '2014-08-28 14:40:06', '2014-08-28 14:40:06', 'Storing Image Data for offline web application (client-side storage database)', '<javascript><html5><web-applications><indexeddb><leaflet>', 5, 10, '32', '', ''),
(14113559, 1, '', '', '2013-01-01 19:37:19', 15, 2034, '<p>I would like to  make some changes in Jekyll''s layout. Changes are small and different. For example, linking an additional CSS or JavaScript file. Or adding some info in header. Or tuning page title.\n<em>Important</em> that these changes depend on a page/post.</p>\n\n<p>Since changes are small and diverse, creating a special layout for each of them seems to be too expensive.</p>\n\n<p>I tried to create my own solution but run into <a href="https://github.com/mojombo/jekyll/issues/176">impossibility to use variables in including instructions</a>.</p>\n\n<p>Has anyone solved something similar? For example, linking a special CSS to a particular post?</p>\n', '1175083', '', '', '', '', '2014-03-28 05:17:30', 'How to tune layout for a particular page/post in Jekyll?', '<jekyll>', 2, 1, '6', '', ''),
(14114528, 1, '14245913', '', '2013-01-01 21:48:45', 11, 2186, '<p>I''ve got a Maven project that I''m trying to configure to use the maven release plugin.  Part of the release process is to use the Maven GPG Plugin to sign artifacts which requires among other things, the GPG signing key passphrase to succeed.  Because these builds need to be runnable in a non interactive environment, (CI-Server) these params are passed in as arguments to maven in the form of </p>\n\n<pre><code>-Dgpg.passphrase=XXX\n</code></pre>\n\n<p>For snapshot builds everything works fine; the Maven GPG Plugin sees the passed in passphrase, artifacts are built, signed and deployed as expected, however, when I try to use the release plugin I get prompted for the gpg signing key password.  I''ve read through several discussions on similar issues that stem from the release plugin forking another invocation of maven which does not receive the passed in params.  The most popular fix seems to be to use the "arguments" parameter like this:</p>\n\n<pre><code>-Darguments="-Dgpg.passphrase=XXX"\n</code></pre>\n\n<p>Supposedly this gets passed to the forked instance but unfortunately for me it''s not getting rid of the prompt.</p>\n\n<p>Since signing artifacts is not an uncommon prerequisite for deploying release artifacts to public maven repos and presumably most entities producing those artifacts are using some form of CI I can''t imagine I''m the only person who has encountered this problem.  Has anybody found a workaround?</p>\n\n<p><strong>A NOTE ABOUT THE ACCEPTED ANSWER:</strong></p>\n\n<p>The accepted solution will -not- work with Maven 3.0 - 3.0.3 and 3.0.3 just so happens to be what installs by default with java on OSX Mountain Lion.  <a href="http://jira.codehaus.org/browse/MNG-5224">See here</a> for the details.  You''ll need to upgrade to 3.0.4.</p>\n', '556613', '', '556613', '', '2013-01-18 06:02:56', '2014-09-21 20:54:21', 'Avoid gpg signing prompt when using Maven release plugin', '<maven><code-signing><maven-release-plugin><gnupg>', 3, 0, '2', '', ''),
(14114411, 1, '14114419', '', '2013-01-01 21:31:41', 39, 134545, '<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href="http://stackoverflow.com/questions/3022185/regular-expression-sanitize-php">Regular Expression Sanitize (PHP)</a>  </p>\n</blockquote>\n\n\n\n<p>I am facing an issue with URLs, I want to be able to convert titles that could contain anything and have them stripped of all special characters so they only have letters and numbers and of course I would like to replace spaces with hyphens.</p>\n\n<p>How would this be done? I''ve heard a lot about regular expressions (regex) being used...</p>\n', '2321939', '', '367456', '', '2013-01-01 21:51:53', '2015-01-03 11:09:51', 'Remove all special characters from a string', '<php><regex><url><slug>', 3, 1, '16', '2013-01-01 23:53:58', ''),
(14115375, 1, '14115944', '', '2013-01-01 23:54:26', 21, 12973, '<p>I have been wondering why people glorified jQuery''s <code>$(".myClass")</code> method when JavaScript has a generic <code>document.querySelector()</code>. Is there something I''m missing here? Why not just use the <code>document</code> object?</p>\n\n<p>I am completely new to JavaScript, so is there some type of con to <code>document.querySelector()</code> that I am not aware of?</p>\n\n<p>I''d really like to know because I ran across something like this earlier and I''m wondering if it might help a situation I''m in:</p>\n\n<pre><code>var retrieve = function( s ) {\n    return document.querySelector( s );\n};\n\nretrieve(".myClass").style.display = "block";\n</code></pre>\n\n<p>Note: I have nothing against jQuery at all, in fact I love it. But I''d rather not cheat myself using the easy pre-made ready-to-use tools when I''m just now trying to learn JavaScript. Any help would be much appreciated! :-)</p>\n', '1672778', '', '411918', '', '2013-01-02 01:24:57', '2013-01-02 03:05:02', 'JavaScript''s document.querySelector() same as jQuery $() method?', '<javascript><jquery><dom><model><document>', 1, 15, '8', '', ''),
(14114729, 1, '14114741', '', '2013-01-01 22:13:59', 24, 22344, '<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href="http://stackoverflow.com/questions/13137817/how-to-download-image-using-requests">How to download image using requests</a>  </p>\n</blockquote>\n\n\n\n<p>I know that fetching a url is as simple as <code>requests.get</code> and I can get at the raw response body and save it to a file, but for large files, is there a way to stream directly to a file? Like if I''m downloading a movie with it or something?</p>\n', '197663', '', '', '', '', '2014-04-15 20:22:27', 'Save a file using the python requests library', '<python><file><http><download><request>', 1, 3, '9', '2013-01-02 01:55:12', ''),
(14114480, 1, '14116462', '', '2013-01-01 21:41:52', 12, 4212, '<p>I''m trying to make an HTTPS connection to a <a href="https://www.onlinescoutmanager.co.uk" rel="nofollow">server</a> that has a certificate set to expire in April 2013 and uses GlobalSign as the root certificate.</p>\n\n<pre><code>HttpsURLConnection urlConnection = (HttpsURLConnection) url.openConnection();\n// urlConnection.setSSLSocketFactory(sslSocketFactory);\nurlConnection.setDoOutput(true);\nurlConnection.setChunkedStreamingMode(0);\n\n// Send the POST data\nOutputStream out = new BufferedOutputStream(urlConnection.getOutputStream());\nout.write(postParamString.toString().getBytes("UTF8"));\n\n// Read the reply\nInputStream in = urlConnection.getInputStream();\n</code></pre>\n\n<p>As it stands, this throws <code>javax.net.ssl.SSLHandshakeException: org.bouncycastle.jce.exception.ExtCertPathValidatorException: Could not validate certificate signature.</code> when <code>getOutputStream()</code> is called.</p>\n\n<p>This same site and certificate are valid in the stock HTC web browser and desktop browsers. When I use the same code to access <a href="https://www.google.co.uk" rel="nofollow">Google</a> it works (but then complains about a 404 error). Various posts on StackOverflow imply that it should "just work" and others say to set up your own key store (or disable all HTTPS validation!) I assume the difference in behaviour is down to different root key stores in use (Can anyone clarify this?).</p>\n\n<p>I''ve now tried creating a key store using bouncy castle but I can''t get this to load on my device.</p>\n\n<p>After exporting the certificate from Firefox, I create a key store using:</p>\n\n<pre><code>keytool.exe -import -alias onlinescoutmanager -file www.onlinescoutmanager.co.uk.crt -storetype BKS -keystore res\\raw\\keystore\n</code></pre>\n\n<p>This is then loaded and used in the application using:</p>\n\n<pre><code>InputStream stream = context.getResources().openRawResource(R.raw.keystore);\n// BKS seems to be the default but we want to be explicit\nKeyStore ks = KeyStore.getInstance("BKS");\nks.load(stream, "www.onlinescoutmanager.co.uk".toCharArray());\nstream.close();\n\nTrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\ntmf.init(ks);\nX509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0];\nSSLContext context2 = SSLContext.getInstance("TLS");\ncontext2.init(null, new TrustManager[] { defaultTrustManager }, null);\nsslSocketFactory = context2.getSocketFactory();\n</code></pre>\n\n<p>This is failing with <code>java.io.IOException: Wrong version of key store.</code> when <code>keystore.Load()</code> is called.</p>\n\n<p>I have <a href="http://stackoverflow.com/a/5187509/588306">ensured I''m passing <code>-storetype BKS</code></a>, <a href="http://stackoverflow.com/a/12528853/588306">used a &lt;=7 character keystore password</a>, added the CA certs to the key store, and using both Bouncy Castle version 1.45 and 1.47 to create the key store with no change in the reported error message.</p>\n\n<p>My environment is Eclipse Juno 4.2.1 with JRE 1.7u9b5 running on Windows 8. The device I''m testing on is an HTC sensation running stock Android 2.3. The application has a minimum SDK version of 7 and a target of 15.</p>\n\n<p>If anyone can explain how to create a valid BKS key store on Windows 8 or how I can get Java to use the same key store as the browser(or system?) that would be appreciated.</p>\n\n<p>You can download the <a href="https://www.dropbox.com/s/j148u838icm4rk5/SGM.zip" rel="nofollow">entire project</a> as it was at the time of writing, and the <a href="https://www.dropbox.com/s/0cnb8l2m90zyjc3/keystore" rel="nofollow">generated keystore</a> if required.</p>\n', '588306', '', '588306', '', '2013-01-02 23:36:17', '2013-01-03 00:39:54', 'Making an HTTPS connection using URL.openConnection()', '<java><android><https><bouncycastle><keystore>', 2, 7, '3', '', ''),
(14114738, 1, '14114786', '', '2013-01-01 22:15:40', 15, 1353, '<p>I have just installed Powerline plugin into my vim by using pathogen and submodule.</p>\n\n<p>The powerline <strong>is only visible</strong> when where are <strong>multiple buffers</strong>. When there is only one buffer in vim, I can''t see it. </p>\n\n<p>I wonder whether it is a bug or not?</p>\n\n<p><img src="http://i.stack.imgur.com/UdF4C.png" alt="single">\n<img src="http://i.stack.imgur.com/7q4KR.png" alt="vec">\n<img src="http://i.stack.imgur.com/L9eaj.png" alt="hoz"></p>\n', '1022209', '', '', '', '', '2013-01-01 22:22:35', 'Powerline can be shown in multiple buffer, but not in a single buffer', '<vim><macvim><vim-plugin>', 1, 0, '3', '', ''),
(14115440, 1, '14752347', '', '2013-01-02 00:03:18', 17, 42957, '<p>I am trying to import <a href="https://en.wikipedia.org/wiki/Pygame">Pygame</a> to use for my version of <a href="http://en.wikipedia.org/wiki/Python_%28programming_language%29">Python</a>, 3.3. The downloads on the Pygame website only have Python 3.1 and 3.2. I cannot seem to be able to import Pygame though I thought I had it installed in the correct path. I have tried both the 3.1 and 3.2 Pygame downloads.</p>\n\n<p>Is Pygame just not installed in the correct file path or is Pygame not compatible with my version of Python (3.3)?</p>\n\n<p>I am running Windows&nbsp;7 and here is the error:</p>\n\n<pre><code>Traceback (most recent call last):\nFile "&lt;pyshell#3&gt;", line 1, in &lt;module&gt;\nimport pygame\nFile ".\\pygame\\__init__.py", line 95, in &lt;module&gt;\nfrom pygame.base import *\nImportError: DLL load failed: The specified module could not be found.\n</code></pre>\n', '1941681', '', '63550', '', '2014-03-01 10:03:05', '2014-04-06 04:42:35', 'Pygame installation for Python 3.3', '<python><pygame>', 5, 0, '3', '', ''),
(14115620, 1, '14792896', '', '2013-01-02 00:31:50', 16, 6443, '<p>I''ve written a custom ASP.NET control and I just updated it to have an async Load event handler. Now I''m getting this error:</p>\n\n<blockquote>\n  <p>An asynchronous operation cannot be started at this time. Asynchronous operations may only be started within an asynchronous handler or module or during certain events in the Page lifecycle. If this exception occurred while executing a Page, ensure that the Page is marked &lt;%@ Page Async="true" %>. </p>\n</blockquote>\n\n<p>The page <em>does</em> have the <code>&lt;%@ Page Async="true" %&gt;</code> tag already. So I take it that controls can''t have async load event handlers. </p>\n\n<p>Where can I find a comprehensive list of events in the ASP.NET webforms lifecycle that are allowed to be async?</p>\n', '46926', '', '', '', '', '2013-05-06 22:14:38', 'Which ASP.NET lifecycle events can be async?', '<asp.net><async-await>', 2, 5, '8', '', ''),
(14115902, 1, '14115913', '', '2013-01-02 01:23:17', 15, 636, '<p>It''s commonly known that <code>{}</code> is shorter way to define an object like <code>[]</code> is for an array.</p>\n\n<p>But now I am wondering why:</p>\n\n<pre><code>{} != ({})\n</code></pre>\n\n<ul>\n<li><code>{}</code> evaluates to undefined</li>\n<li><code>({})</code> evaluates to "correct" Object</li>\n</ul>\n\n<p>Why is JavaScript behaving like this ?</p>\n\n<p>For example <code>1</code> equals to <code>(1)</code>, so why <code>{}</code> not equals to <code>({})</code> ?</p>\n', '823738', '', '31671', '', '2013-01-03 07:01:52', '2013-01-03 07:01:52', 'Why {} != ( {} ) in JavaScript?', '<javascript>', 2, 4, '3', '', ''),
(14116194, 1, '14116626', '', '2013-01-02 02:18:37', 11, 1262, '<p>I''m generating a bunch of tiles for <code>CATiledLayer</code>. It takes about 11 seconds to generate 120 tiles at 256 x 256 with 4 levels of detail on an iPhone 4S. The image itself fits within 2048 x 2048.</p>\n\n<p>My bottleneck is <code>UIImagePNGRepresentation</code>. It takes about 0.10-0.15 seconds to generate every 256 x 256 image.</p>\n\n<p>I''ve tried generating multiple tiles on different background queue''s, but this only cuts it down to about 9-10 seconds.</p>\n\n<p>I''ve also tried using the ImageIO framework with code like this:</p>\n\n<pre><code>- (void)writeCGImage:(CGImageRef)image toURL:(NSURL*)url andOptions:(CFDictionaryRef) options\n{\n    CGImageDestinationRef myImageDest = CGImageDestinationCreateWithURL((__bridge CFURLRef)url, (__bridge CFStringRef)@"public.png", 1, nil);\n    CGImageDestinationAddImage(myImageDest, image, options);\n    CGImageDestinationFinalize(myImageDest);\n    CFRelease(myImageDest);\n}\n</code></pre>\n\n<p>While this produces smaller PNG files (win!), it takes about 13 seconds, 2 seconds more than before.</p>\n\n<p>Is there any way to encode a PNG image from <code>CGImage</code> faster? Perhaps a library that makes use of <code>NEON</code> ARM extension (iPhone 3GS+) like <a href="http://libjpeg-turbo.virtualgl.org/">libjpeg-turbo</a> does?</p>\n\n<p>Is there perhaps a better format than PNG for saving tiles that doesn''t take up a lot of space?</p>\n\n<p>The only viable option I''ve been able to come up with is to increase the tile size to 512 x 512. This cuts the encoding time by half. Not sure what that will do to my scroll view though. The app is for iPad 2+, and only supports iOS 6 (using iPhone 4S as a baseline).</p>\n', '867760', '', '867760', '', '2013-01-02 02:36:05', '2014-02-05 17:06:48', 'Any way to encode a PNG faster than UIImagePNGRepresentation?', '<ios><uiimage><catiledlayer><cgimageref><uiimagepngrepresentation>', 1, 0, '4', '', ''),
(14115314, 1, '14115349', '', '2013-01-01 23:42:37', 15, 12465, '<p>I am trying to compile the following C++ program which relies on the C++11 <code>&lt;thread&gt;</code> header. I am trying to do this on OSX Lion.</p>\n\n<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n#include &lt;vector&gt;\n\nvoid hello()\n{\n    std::cout &lt;&lt; "Hello from thread " &lt;&lt; std::this_thread::get_id() &lt;&lt; std::endl;\n}\n\nint main()\n{\n    std::vector&lt;std::thread&gt; threads;\n\n    for(int i = 0; i &lt; 5; i++)\n    {\n        threads.push_back(std::thread(hello));\n    }\n\n    for(auto&amp; thread: threads)\n    {\n        thread.join();\n    }\n\n    return 0;\n}\n</code></pre>\n\n<p>The above program compiles fine with g++ 4.7 which I installed using the homebrew package manager. However when trying to compile the above program with clang 3.2 (also installed using the homebrew package manager) I get the following error message:</p>\n\n<pre><code>Zameers-MacBook-Air:tmp zmanji$ clang++ -v -std=c++11 test.cpp \nclang version 3.2 (tags/RELEASE_32/final)\nTarget: x86_64-apple-darwin11.3.0\nThread model: posix\n "/usr/local/Cellar/llvm/3.2/bin/clang" -cc1 -triple x86_64-apple-macosx10.7.0 -emit-obj -mrelax-all -disable-free -main-file-name test.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 128.2 -v -resource-dir /usr/local/Cellar/llvm/3.2/bin/../lib/clang/3.2 -fmodule-cache-path /var/folders/qf/j_7_sw0n093gn1y0mtsyztxh0000gn/T/clang-module-cache -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/zmanji/tmp -ferror-limit 19 -fmessage-length 101 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.7.0 -fobjc-dispatch-method=mixed -fobjc-default-synthesize-properties -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fdiagnostics-show-option -fcolor-diagnostics -o /var/folders/qf/j_7_sw0n093gn1y0mtsyztxh0000gn/T/test-Zkjucl.o -x c++ test.cpp\nclang -cc1 version 3.2 based upon LLVM 3.2svn default target x86_64-apple-darwin11.3.0\nignoring nonexistent directory "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64"\nignoring nonexistent directory "/usr/include/c++/4.0.0"\nignoring nonexistent directory "/usr/include/c++/4.0.0/i686-apple-darwin8/"\nignoring nonexistent directory "/usr/include/c++/4.0.0/backward"\n#include "..." search starts here:\n#include &lt;...&gt; search starts here:\n /usr/include/c++/4.2.1\n /usr/include/c++/4.2.1/backward\n /usr/local/include\n /usr/local/Cellar/llvm/3.2/bin/../lib/clang/3.2/include\n /usr/include\n /System/Library/Frameworks (framework directory)\n /Library/Frameworks (framework directory)\nEnd of search list.\ntest.cpp:2:10: fatal error: ''thread'' file not found\n#include &lt;thread&gt;\n         ^\n1 error generated.\n</code></pre>\n\n<p>It seems that clang cannot find the <code>&lt;thread&gt;</code> header but I am not sure why.</p>\n\n<p><strong>Edit:</strong>\nI tried sharth''s answer below and now I am getting the error that the <code>&lt;iostream&gt;</code> header does not exist.</p>\n\n<pre><code>Zameers-MacBook-Air:tmp zmanji$ clang++ -v -std=c++11 -stdlib=libc++ test.cpp \nclang version 3.2 (tags/RELEASE_32/final)\nTarget: x86_64-apple-darwin11.3.0\nThread model: posix\n "/usr/local/Cellar/llvm/3.2/bin/clang" -cc1 -triple x86_64-apple-macosx10.7.0 -emit-obj -mrelax-all -disable-free -main-file-name test.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 128.2 -v -resource-dir /usr/local/Cellar/llvm/3.2/bin/../lib/clang/3.2 -fmodule-cache-path /var/folders/qf/j_7_sw0n093gn1y0mtsyztxh0000gn/T/clang-module-cache -stdlib=libc++ -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/zmanji/tmp -ferror-limit 19 -fmessage-length 203 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.7.0 -fobjc-dispatch-method=mixed -fobjc-default-synthesize-properties -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fdiagnostics-show-option -fcolor-diagnostics -o /var/folders/qf/j_7_sw0n093gn1y0mtsyztxh0000gn/T/test-k2Alf4.o -x c++ test.cpp\nclang -cc1 version 3.2 based upon LLVM 3.2svn default target x86_64-apple-darwin11.3.0\nignoring nonexistent directory "/usr/local/Cellar/llvm/3.2/bin/../lib/c++/v1"\nignoring nonexistent directory "/usr/include/c++/v1"\n#include "..." search starts here:\n#include &lt;...&gt; search starts here:\n /usr/local/include\n /usr/local/Cellar/llvm/3.2/bin/../lib/clang/3.2/include\n /usr/include\n /System/Library/Frameworks (framework directory)\n /Library/Frameworks (framework directory)\nEnd of search list.\ntest.cpp:1:10: fatal error: ''iostream'' file not found\n#include &lt;iostream&gt;\n         ^\n1 error generated.\n</code></pre>\n', '2874', '', '2874', '', '2013-01-02 02:33:48', '2013-01-02 02:33:48', 'How to compile C++11 with clang 3.2 on OSX lion?', '<c++><osx><c++11><clang>', 1, 1, '4', '', ''),
(14115701, 1, '14116498', '', '2013-01-02 00:44:51', 116, 84622, '<p>I am trying to create a directive that would create an input field with the same ng-model as the element that creates the directive.</p>\n\n<p>Here''s what I came up with so far:</p>\n\n<p><strong>HTML</strong></p>\n\n<pre class="lang-html prettyprint-override"><code>&lt;!doctype html&gt;\n&lt;html ng-app="plunker" &gt;\n&lt;head&gt;\n  &lt;meta charset="utf-8"&gt;\n  &lt;title&gt;AngularJS Plunker&lt;/title&gt;\n  &lt;link rel="stylesheet" href="style.css"&gt;\n  &lt;script&gt;document.write("&lt;base href=\\"" + document.location + "\\" /&gt;");&lt;/script&gt;\n  &lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"&gt;&lt;/script&gt;\n  &lt;script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.0.2/angular.js"&gt;&lt;/script&gt;\n  &lt;script src="app.js"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body ng-controller="MainCtrl"&gt;\n  This scope value &lt;input ng-model="name"&gt;\n  &lt;my-directive ng-model="name"&gt;&lt;/my-directive&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>JavaScript</strong></p>\n\n<pre class="lang-js prettyprint-override"><code>var app = angular.module(''plunker'', []);\n\napp.controller(''MainCtrl'', function($scope) {\n  $scope.name = "Felipe";\n});\n\napp.directive(''myDirective'', function($compile) {\n  return {\n    restrict: ''E'',\n    scope: {\n      ngModel: ''=''\n    },\n    template: ''&lt;div class="some"&gt;&lt;label for="{{id}}"&gt;{{label}}&lt;/label&gt;'' +\n      ''&lt;input id="{{id}}" ng-model="value"&gt;&lt;/div&gt;'',\n    replace: true,\n    require: ''ngModel'',\n    link: function($scope, elem, attr, ctrl) {\n      $scope.label = attr.ngModel;\n      $scope.id = attr.ngModel;\n      console.debug(attr.ngModel);\n      console.debug($scope.$parent.$eval(attr.ngModel));\n      var textField = $(''input'', elem).\n        attr(''ng-model'', attr.ngModel).\n        val($scope.$parent.$eval(attr.ngModel));\n\n      $compile(textField)($scope.$parent);\n    }\n  };\n});\n</code></pre>\n\n<p>However, I am not confident this is the right way to handle this scenario, and there is a bug that my control is not getting initialized with the value of the ng-model target field.</p>\n\n<p>Here''s a Plunker of the code above: <a href="http://plnkr.co/edit/IvrDbJ">http://plnkr.co/edit/IvrDbJ</a></p>\n\n<p>What''s the correct way of handling this?</p>\n\n<p><strong>EDIT</strong>: After removing the <code>ng-model="value"</code> from the template, this seems to be working fine. However, I will keep this question open because I want to double check this is the right way of doing this.</p>\n', '14540', '', '1015177', '', '2013-06-07 01:48:51', '2014-03-25 05:40:41', 'AngularJS - Create a directive that uses ng-model', '<angularjs><directive>', 5, 0, '38', '', ''),
(14115980, 1, '14116215', '', '2013-01-02 01:37:53', 21, 4420, '<p>Spoiler alert, this is problem 5 of Project Euler.</p>\n\n<p>I am attempting to learn Clojure and solved problem 5, but it is a couple orders of magnitude slower (1515 ms in Java versus 169932 ms in Clojure). I even tried using type hinting, unchecked math operations, and inlining functions all for naught.</p>\n\n<p>Why is my Clojure code so much slower?</p>\n\n<p>Clojure code:</p>\n\n<pre><code>(set! *unchecked-math* true)\n(defn divides? [^long number ^long divisor] (zero? (mod number divisor)))\n\n(defn has-all-divisors [divisors ^long num]\n  (if (every? (fn [i] (divides? num i)) divisors) num false))\n\n(time (prn (some (fn [^long i] (has-all-divisors (range 2 20) i)) (iterate inc 1))))\n</code></pre>\n\n<p>Java code:</p>\n\n<pre><code>public class Problem5 {\n  public static void main(String[] args) {\n    long start = System.currentTimeMillis();\n    int i = 1;\n    while(!hasAllDivisors(i, 2, 20)) {\n      i++;\n    }\n    long end = System.currentTimeMillis();\n    System.out.println(i);\n    System.out.println("Elapsed time " + (end - start));\n  }\n\n  public static boolean hasAllDivisors(int num, int startDivisor, int stopDivisor) {\n    for(int divisor=startDivisor; divisor&lt;=stopDivisor; divisor++) {\n      if(!divides(num, divisor)) return false;\n    }\n    return true;\n  }\n\n  public static boolean divides(int num, int divisor) {\n    return num % divisor == 0;\n  }\n}\n</code></pre>\n', '1054469', '', '1054469', '', '2013-01-04 05:08:20', '2014-01-02 06:11:41', 'Clojure performance really bad on simple loop versus Java', '<java><performance><math><clojure>', 2, 2, '11', '', ''),
(14116003, 1, '14117121', '', '2013-01-02 01:42:28', 42, 7795, '<p>What''s the difference between <code>constexpr</code> and <code>const</code>?</p>\n\n<ul>\n<li>When can I use only one of them?  </li>\n<li>When can I use both and how should I choose one?</li>\n</ul>\n', '395573', '', '777186', '', '2013-01-02 09:17:16', '2013-10-02 13:29:56', 'Difference between `constexpr` and `const`', '<c++><c++11><const><constexpr>', 3, 3, '23', '', ''),
(14117114, 1, '', '', '2013-01-02 05:10:16', 26, 32046, '<p>Seems the last post for this problem was closed for one reason or another so I''ll try my luck...</p>\n\n<p>I''m trying to run a simple "rake db:migrate" command. When I do, I get the error in the title.  Yes, the solution "appears" obvious but it''s not because I don''t my Rakefile does not contain any references to ''rake/rdoctask''. It seems to be coming from documentation.rake but when I try to change that file as recommended by the error, I get a different error. I have found a couple of posts declaring this to be a known issue but nothing I''ve found indicates how to fix or work around this.</p>\n\n<p>Does anyone have any ideas how to fix it?  Below is the output from the rake command with a --trace:</p>\n\n<pre><code>$ rake --trace db:migrate\nrake aborted!\nERROR: ''rake/rdoctask'' is obsolete and no longer supported. Use ''rdoc/task'' (available in RDoc 2.4.2+) instead.\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/rake-10.0.3/lib/rake/rdoctask.rb:1:in `&lt;top (required)&gt;''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/railties-3.0.3/lib/rails/tasks/documentation.rake:2:in `require''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/railties-3.0.3/lib/rails/tasks/documentation.rake:2:in `&lt;top (required)&gt;''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/railties-3.0.3/lib/rails/tasks.rb:15:in `load''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/railties-3.0.3/lib/rails/tasks.rb:15:in `block in &lt;top (required)&gt;''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/railties-3.0.3/lib/rails/tasks.rb:6:in `each''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/railties-3.0.3/lib/rails/tasks.rb:6:in `&lt;top (required)&gt;''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/railties-3.0.3/lib/rails/application.rb:213:in `require''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/railties-3.0.3/lib/rails/application.rb:213:in `initialize_tasks''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/railties-3.0.3/lib/rails/application.rb:139:in `load_tasks''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/railties-3.0.3/lib/rails/application.rb:77:in `method_missing''\n    C:/developer/skknobara/Rakefile:7:in `&lt;top (required)&gt;''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/rake-10.0.3/lib/rake/rake_module.rb:25:in `load''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/rake-10.0.3/lib/rake/rake_module.rb:25:in `load_rakefile''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/rake-10.0.3/lib/rake/application.rb:583:in `raw_load_rakefile''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/rake-10.0.3/lib/rake/application.rb:89:in `block in load_rakefile''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/rake-10.0.3/lib/rake/application.rb:160:in `standard_exception_handling''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/rake-10.0.3/lib/rake/application.rb:88:in `load_rakefile''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/rake-10.0.3/lib/rake/application.rb:72:in `block in run''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/rake-10.0.3/lib/rake/application.rb:160:in `standard_exception_handling''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/rake-10.0.3/lib/rake/application.rb:70:in `run''\n    C:/Programs/Ruby193/lib/ruby/gems/1.9.1/gems/rake-10.0.3/bin/rake:33:in `&lt;top (required)&gt;''\n    C:/Programs/Ruby193/bin/rake:23:in `load''\n    C:/Programs/Ruby193/bin/rake:23:in `&lt;main&gt;''\n</code></pre>\n\n<hr>\n\n<p>I discovered that I had rails 3.0.3 in my Gemfile so I changed it to 3.2.9, but now when I run rake db:migrate I get:</p>\n\n<pre><code>rake aborted!\nBundler could not find compatible versions for gem "rack":\n  In Gemfile:\n    rails (= 3.2.9) x86-mingw32 depends on\n      rack (~&gt; 1.4.0) x86-mingw32\n\n    rack (1.2.5)\n</code></pre>\n\n<p>I''m not sure what the error means but "gem list rack" shows I have both 1.4.1 and 1.4.0 installed.  My Gemfile is pretty simple:</p>\n\n<pre><code>gem ''rails'', ''3.2.9''\ngem ''rack'',''&lt; 1.4.1''\ngem ''mysql2'', ''&lt; 0.3''\n</code></pre>\n\n<p>Any thoughts?</p>\n', '1143970', '', '1143970', '', '2013-01-03 05:55:13', '2013-11-27 08:15:29', 'ERROR: ''rake/rdoctask'' is obsolete and no longer supported. Use ''rdoc/task'' (available in RDoc 2.4.2+) instead', '<ruby-on-rails><ruby-on-rails-3.2>', 10, 0, '12', '', ''),
(14116882, 1, '14117348', '', '2013-01-02 04:34:56', 13, 2261, '<p>Apologize for the noob question. Just beginning to learn servicestack. I''m using a self-hosted console application with Razor for my view engine, the "RegistrationFeature" plugin for registrations and CredentialsAuthProvider for authentication via form post to allow users to login. </p>\n\n<p>The <a href="https://github.com/ServiceStack/SocialBootstrapApi">SocialBootStrap</a> application uses MVC 3 and does a "FormsAuthentication.SignOut()" to allow users to  logout. Given that I''m using a self hosted application,  I created a LogoutService that simply does a Request.RemoveSession() and that appears to work. </p>\n\n<p>Is this the right way to log out a user''s session ?</p>\n', '212012', '', '', '', '', '2014-06-02 20:08:30', 'How to logout authenticated user in ServiceStack?', '<servicestack>', 2, 0, '1', '', ''),
(14120223, 1, '16377459', '', '2013-01-02 10:15:04', 16, 766, '<p>I was just answering <a href="http://stackoverflow.com/questions/5857240/why-there-is-no-placement-delete-expression-in-c/14119344#14119344">a question</a> about the lack of placement delete corresponding to placement new. The reason seems to be the way <code>operator delete</code> is called according to the dynamic type of the object (corresponding to the type used to find <code>operator new</code>).</p>\n\n<p>Placement <code>new</code> has been useful to me. When it comes to custom allocation, there is probably a reusable class where different instances manage different pools. Singletons are an anti-pattern and all that.</p>\n\n<p>I can understand the convenience of making <code>new thing;</code> work without keeping track of an allocator, but doing things for different branches of the type hierarchy seems pretty convoluted.</p>\n\n<p>Is there a real-world scenario where a derived class uses a different allocator from its base, and relies on a virtual destructor to find the correct member <code>operator delete</code>?</p>\n\n<p>Lest this be subjective, I''ll accept the answer which is most plausible. Let''s not quibble over code smells or the "best" way of doing things.</p>\n', '153285', '', '', '', '', '2013-05-04 18:15:04', 'Are member new/delete overloads in a derived class ever useful?', '<c++><inheritance><operator-overloading><new-operator>', 4, 11, '1', '', ''),
(14116420, 1, '14116513', '', '2013-01-02 03:01:54', 18, 3650, '<p>I have a program and a static library:</p>\n\n<pre><code>// main.cpp\nint main() {}\n\n// mylib.cpp\n#include &lt;iostream&gt;\nstruct S {\n    S() { std::cout &lt;&lt; "Hello World\\n";}\n};\nS s;\n</code></pre>\n\n<p>I want to link the static library (<code>libmylib.a</code>) to the program object (<code>main.o</code>), although the latter does not use any symbol of the former directly.</p>\n\n<p>The following commands do not seem to the job with <code>g++ 4.7</code>. They will run without any errors or warnings, but apparently <code>libmylib.a</code> will not be linked:</p>\n\n<pre><code>g++ -o program main.o -Wl,--no-as-needed /path/to/libmylib.a\n</code></pre>\n\n<p>or</p>\n\n<pre><code>g++ -o program main.o -L/path/to/ -Wl,--no-as-needed -lmylib\n</code></pre>\n\n<p>Do you have any better ideas?</p>\n', '989331', '', '989331', '', '2013-01-02 03:12:54', '2013-01-02 05:38:36', 'How to force gcc to link an unused static library', '<c++><c><gcc><g++><ld>', 3, 7, '5', '', ''),
(14120661, 1, '14120721', '', '2013-01-02 10:45:27', 20, 7587, '<p>I made new object Date.new with args (year, month). After create ruby added 01 number of day to this object by default. Is there any way to add not first day, but last day of month that i  passed as arg(e.g. 28 if it will be 02month or 31 if it will be 01month) ?</p>\n', '1600336', '', '877819', '', '2014-03-06 04:13:46', '2014-10-10 22:10:32', 'Get last day of the month in Ruby', '<ruby><date><datetime>', 3, 0, '6', '', ''),
(14120711, 1, '14125030', '', '2013-01-02 10:49:02', 14, 1084, '<p>In linux kernel source code, added this lines in <code>tasklet_action</code> code:</p>\n\n<pre><code>printk("tasklet_action = %p\\n" , *tasklet_action);\nprintk("tasklet_action = %p\\n" , &amp;tasklet_action);\nprintk("tasklet_action = %p\\n" , tasklet_action);\n</code></pre>\n\n<p>In the output I get:</p>\n\n<pre><code>tasklet_action = c03441a1\ntasklet_action = c03441a1\ntasklet_action = c03441a1\n</code></pre>\n\n<p>But when searching it in the <code>system.map</code> file the <code>tasklet_action</code> address is at <code>c03441a0</code> so there is an offset of 1 byte. </p>\n\n<ul>\n<li>Why do I have this offset?</li>\n<li>Is it always an one byte offset?</li>\n</ul>\n', '1031417', '', '1031417', '', '2013-06-22 09:53:18', '2013-06-22 09:53:18', 'Linux Kernel - why a function''s address in System.map is one byte preceding its address as seen in real time?', '<c><linux><linux-kernel><arm><function-pointers>', 1, 8, '8', '', ''),
(14119277, 1, '14119294', '', '2013-01-02 09:03:11', 13, 49591, '<pre><code>Select I.Fee\nFrom Item I\nWHERE GETDATE() - I.DateCreated &lt; 365 days\n</code></pre>\n\n<p>How can I subtract two days? Result should be days. Ex: 365 days. 500 days.. etc...</p>\n', '1218067', '', '13302', '', '2013-01-02 09:19:27', '2013-07-11 04:18:10', 'Subtract two dates in SQL and get days of the result', '<sql><sql-server><tsql>', 5, 0, '', '', ''),
(14108774, 2, '', '14107208', '2013-01-01 07:39:46', 133, 0, '<p>Yes, there is <a href="http://docs.sublimetext.info/en/latest/search_and_replace/search_and_replace_files.html">Multiple Files search and replace</a>.</p>\n\n<p>Press <kbd>ctrl</kbd><kbd>shift</kbd><kbd>F</kbd> (<kbd>cmd</kbd><kbd>shift</kbd><kbd>F</kbd> on MacOS):</p>\n\n<p><img src="http://i.stack.imgur.com/B7vVn.png" alt="enter image description here"></p>\n\n<p>In the <code>Where</code> field you can also add filters to search only folders and files that you need. If nothing is set, the search is made on all files listed in the sidebar.</p>\n\n<p>If you double click on a line of the search result, Sublime will jump to that line.</p>\n\n<p>Notice these icons in the search bar:</p>\n\n<p><img src="http://i.stack.imgur.com/SJXOb.png" alt="enter image description here"></p>\n\n<p>The first (<em>show context</em>) toggles context in result format (if enabled, some lines of text are shown before and after the matching line). The second allows to show the result in a new buffer, or in a console.</p>\n', '761777', '', '761777', '', '2013-01-01 08:01:51', '2013-01-01 08:01:51', '', '', 0, 6, '', '', ''),
(23229562, 2, '', '14107208', '2014-04-22 20:29:14', 2, 0, '<p>Press <kbd>ctrl</kbd><kbd>shift</kbd><kbd>F</kbd> (<kbd>cmd</kbd><kbd>shift</kbd><kbd>F</kbd> on  Mac OS X :) and then put <code>*.*</code> in the <code>where:</code> field </p>\n\n<p>This will open the search up to all files in the project as opposed to only open files or folders.</p>\n\n<p>You can also use this to search only files of a certain type, or with a certain name regardless of type. It''s just wildcards for the filename and extension.</p>\n', '637283', '', '637283', '', '2014-12-17 17:25:55', '2014-12-17 17:25:55', '', '', 0, 0, '', '', ''),
(14107378, 2, '', '14107354', '2013-01-01 02:03:59', 0, 0, '<p><code>to_datetime</code> does not destroy millisecond resolution of data - it''s simply hidden because <code>DateTime#to_s</code> doesn''t display it.</p>\n\n<pre><code>[1] pry(main)&gt; ''2012-12-31T01:01:01.232323+3''.to_datetime\n=&gt; Mon, 31 Dec 2012 01:01:01 +0300\n[2] pry(main)&gt; ''2012-12-31T01:01:01.232323+3''.to_datetime.to_f\n=&gt; 1356904861.232323\n</code></pre>\n\n<p>That said, I suspect that ActiveRecord is mistakenly hiding that information when persisting the data; remember that it is database-agnostic, so it takes approaches that are guaranteed to work across all of its database targets. While Postgres supposed microsecond information in timestamps, MySQL does not, so I suspect AR selects for the lowest common denominator. I couldn''t be sure without getting into the guts of AR. You may need a Postgres-specific monkeypatch to enable this behavior.</p>\n', '271475', '', '', '', '', '2013-01-01 02:03:59', '', '', 0, 0, '', '', ''),
(14107418, 2, '', '14107354', '2013-01-01 02:14:17', 7, 0, '<p>ActiveRecord should preserve the full precision from the database, you''re just not looking at it properly. Use <code>strftime</code> and the <code>%N</code> format to see the fractional seconds. For example, <code>psql</code> says this:</p>\n\n<pre><code>=&gt; select created_at from models where id = 1;\n         created_at         \n----------------------------\n 2012-02-07 07:36:20.949641\n(1 row)\n</code></pre>\n\n<p>and ActiveRecord says this:</p>\n\n<pre><code>&gt; Model.find(1).created_at.strftime(''%Y-%m-%d %H:%M:%S.%N'')\n =&gt; "2012-02-07 07:36:20.949641000" \n</code></pre>\n\n<p>So everything is there, you just need to know how to see it.</p>\n\n<p>Also note that ActiveRecord will probably give you <code>ActiveSupport::TimeWithZone</code> objects rather than <code>DateTime</code> objects but <code>DateTime</code> preserves everything too:</p>\n\n<pre><code>&gt; ''2012-12-31T01:01:01.232323+3''.to_datetime.strftime(''%Y-%m-%d %H:%M:%S.%N'')\n =&gt; "2012-12-31 01:01:01.232323000" \n</code></pre>\n\n<hr>\n\n<p>Have a look at <code>connection_adapters/column.rb</code> in the ActiveRecord source and check what the <code>string_to_time</code> method does. Your string would go down  the <code>fallback_string_to_time</code> path and that preserves fractional seconds as near as I can tell. Something strange could be going on elsewhere, I wouldn''t be surprised given the strange things I''ve seen in the Rails source, especially the database side of things. I''d try converting the strings to objects by hand so that ActiveRecord will keeps its hands off them.</p>\n', '479863', '', '479863', '', '2013-01-01 03:43:48', '2013-01-01 03:43:48', '', '', 0, 4, '', '', ''),
(14109674, 2, '', '14107354', '2013-01-01 10:34:03', 2, 0, '<p>Changing <code>m.happened_at = ''2012-01-01T00:00:00.32323''.to_datetime</code> in the code above to <code>m.happened_at = ''2012-01-01T00:00:00.32323''</code> solves the problem, though I have no idea why.</p>\n', '785494', '', '', '', '', '2013-01-01 10:34:03', '', '', 0, 2, '', '', '');
INSERT INTO `Posts` (`Id`, `PostTypeId`, `AcceptedAnswerId`, `ParentId`, `CreationDate`, `Score`, `ViewCount`, `Body`, `OwnerUserId`, `OwnerDisplayName`, `LastEditorUserId`, `LastEditorDisplayName`, `LastEditDate`, `LastActivityDate`, `Title`, `Tags`, `AnswerCount`, `CommentCount`, `FavoriteCount`, `ClosedDate`, `CommunityOwnedDate`) VALUES
(19832359, 2, '', '14107354', '2013-11-07 09:35:33', 2, 0, '<p>I ended up here when I was suffering from using the RVM provided binary Ruby 2.0.0-p247 on OS X (Mavericks) which was causing rounding to whole values of seconds when retrieving times from Postgres.  Rebuilding Ruby myself (<code>rvm reinstall 2.0.0 --disable-binary</code>) solved the issue for me.</p>\n\n<p>See <a href="https://github.com/wayneeseguin/rvm/issues/2189" rel="nofollow">https://github.com/wayneeseguin/rvm/issues/2189</a> which I found via <a href="https://github.com/rails/rails/issues/12422" rel="nofollow">https://github.com/rails/rails/issues/12422</a>.</p>\n\n<p>I recognise that this is not THE answer to this issue but I hope this note might help someone struggling with it.</p>\n', '1476206', '', '1476206', '', '2013-11-15 14:39:26', '2013-11-15 14:39:26', '', '', 0, 0, '', '', ''),
(14110132, 2, '', '14107531', '2013-01-01 11:45:27', 4, 0, '<p>I haven''t used it before, but angular has a <a href="http://docs.angularjs.org/api/ng.%24anchorScroll" rel="nofollow">$anchorScroll</a> service. As to reloading the data, you could cache it using <a href="http://docs.angularjs.org/api/ng.%24cacheFactory" rel="nofollow">$cacheFactory</a>, or store the data on a higher scope.</p>\n', '1916258', '', '', '', '', '2013-01-01 11:45:27', '', '', 0, 0, '', '', ''),
(16198496, 2, '', '14107531', '2013-04-24 17:29:17', 21, 0, '<p>I have a fiddle here that shows how to restore scroll position in the list view after a detail view; not encapsulated in a directive yet, working on that...</p>\n\n<p><a href="http://jsfiddle.net/BkXyQ/6/">http://jsfiddle.net/BkXyQ/6/</a></p>\n\n<pre><code>$scope.scrollPos = {}; // scroll position of each view\n\n$(window).on(''scroll'', function() {\n    if ($scope.okSaveScroll) { // false between $routeChangeStart and $routeChangeSuccess\n        $scope.scrollPos[$location.path()] = $(window).scrollTop();\n        //console.log($scope.scrollPos);\n    }\n});\n\n$scope.scrollClear = function(path) {\n    $scope.scrollPos[path] = 0;\n}\n\n$scope.$on(''$routeChangeStart'', function() {\n    $scope.okSaveScroll = false;\n});\n\n$scope.$on(''$routeChangeSuccess'', function() {\n    $timeout(function() { // wait for DOM, then restore scroll position\n        $(window).scrollTop($scope.scrollPos[$location.path()] ? $scope.scrollPos[$location.path()] : 0);\n        $scope.okSaveScroll = true;\n    }, 0);\n});\n</code></pre>\n\n<p>The fiddle also shows fetching the list once, outside of ''ListCtrl''.</p>\n', '2275421', '', '', '', '', '2013-04-24 17:29:17', '', '', 0, 4, '', '', ''),
(16503127, 2, '', '14107531', '2013-05-12 00:48:57', 5, 0, '<p>i created a directive that works on the window scroll ( it could updated to work on any element though )</p>\n\n<p>html usage</p>\n\n<pre><code>&lt;div ng-keep-scroll="service.scrollY"&gt;\n&lt;!-- list of scrolling things here --&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>where "service.scrollY" MUST be a variable within a service. Services retain their state and values, controllers are recreated every time they load and clear their values so you cant use them to store persistent data. the controller has a scope variable pointing to the service.</p>\n\n<p>directive js</p>\n\n<pre><code>app.directive(''ngKeepScroll'', function ($timeout) {\n    return function (scope, element, attrs) {\n\n        //load scroll position after everything has rendered\n        $timeout(function () {\n            var scrollY = parseInt(scope.$eval(attrs.ngKeepScroll));\n            $(window).scrollTop(scrollY ? scrollY : 0);\n        }, 0);\n\n        //save scroll position on change\n        scope.$on("$routeChangeStart", function () {\n            scope.$eval(attrs.ngKeepScroll + " = " + $(window).scrollTop());\n        });\n    }\n});\n</code></pre>\n', '839952', '', '', '', '', '2013-05-12 00:48:57', '', '', 0, 1, '', '', ''),
(19006108, 2, '', '14107531', '2013-09-25 13:20:03', 1, 0, '<p>If your page requires fetching of data to display, you may have to use $routeChangeSuccess and delay the scrolling function call.</p>\n\n<pre><code>    scope.$on("$routeChangeSuccess", function() {\n        $timeout(function () {\n            var scrollY = parseInt(scope.$eval(attrs.ngKeepScroll));\n            $(window).scrollTop(scrollY ? scrollY : 0);\n        }, 1000); // delay by 1 sec\n    });\n</code></pre>\n', '1577560', '', '', '', '', '2013-09-25 13:20:03', '', '', 0, 0, '', '', ''),
(23338434, 2, '', '14107531', '2014-04-28 10:18:10', 0, 0, '<p>I''ve found another simple way to solve this issue:</p>\n\n<pre><code>var scrollValue = $(window).scrollTop();\n\n$rootScope.$on("$routeChangeStart", function() {\n    scrollValue = $(window).scrollTop();\n});\n\n$rootScope.$on(''$routeChangeSuccess'', function(newRoute, oldRoute) {\n    setTimeout(function() { $(window).scrollTop(scrollValue); }, 0);\n});\n</code></pre>\n\n<p>Just put it in .run().</p>\n\n<p>This way, setting timeout value to 0 it still works, but runs after the page is rendered (without timeout function it runs before the content (i.e. template or data loading) is rendered, making the function useless.</p>\n\n<p>If you fetch data from some API, you can wrap the timeout in a function in $rootScope and run it after successful request.</p>\n', '2185417', '', '', '', '', '2014-04-28 10:18:10', '', '', 0, 0, '', '', ''),
(25073496, 2, '', '14107531', '2014-08-01 05:37:21', 3, 0, '<p>Below is another version of keep-scroll-pos directive. This version</p>\n\n<ul>\n<li><p>Remembers scroll position of each <em>templateUrl</em> of your $routeProvider definition.</p></li>\n<li><p>Respects hash tags, e.g., #/home#<em>section-2</em>, will scroll to <em>#section-2</em> not previous scroll position.</p></li>\n<li><p>Is easy to use, as it is self-contained, and stores scroll positions internally.</p></li>\n</ul>\n\n<p>Example of html use:</p>\n\n<pre><code>&lt;div ng-view keep-scroll-pos&gt;&lt;/div&gt;\n</code></pre>\n\n<p>The code for keepScrollPos directive is below:</p>\n\n<pre>\n"use strict";\n\nangular.module("myApp.directives", [])\n\n.directive("keepScrollPos", function($route, $window, $timeout, $location, $anchorScroll) {\n\n    // cache scroll position of each route''s templateUrl\n    var scrollPosCache = {};\n\n    // compile function\n    return function(scope, element, attrs) {\n\n        scope.$on(''$routeChangeStart'', function() {\n            // store scroll position for the current view\n            if ($route.current) {\n                scrollPosCache[$route.current.loadedTemplateUrl] = [ $window.pageXOffset, $window.pageYOffset ];\n            }\n        });\n\n        scope.$on(''$routeChangeSuccess'', function() {\n            // if hash is specified explicitly, it trumps previously stored scroll position\n            if ($location.hash()) {\n                $anchorScroll();\n\n            // else get previous scroll position; if none, scroll to the top of the page\n            } else {\n                var prevScrollPos = scrollPosCache[$route.current.loadedTemplateUrl] || [ 0, 0 ];\n                $timeout(function() {\n                    $window.scrollTo(prevScrollPos[0], prevScrollPos[1]);\n                }, 0);\n            }\n        });\n    }\n});\n</pre>\n\n<p>To disregard previously stored scroll position, and to force to scroll to the top, use pseudo hash tag: <em>#top</em>, e.g., href="<em>#/home#top</em>".</p>\n\n<p>Alternatively, if you prefer to just always scroll to the top, use built-in ng-view <em>autoscroll</em> option:</p>\n\n<pre><code>&lt;div ng-view autoscroll&gt;&lt;/div&gt;\n</code></pre>\n', '1469621', '', '1469621', '', '2014-08-01 05:52:15', '2014-08-01 05:52:15', '', '', 0, 1, '', '', ''),
(26244891, 2, '', '14107531', '2014-10-07 20:40:20', 0, 0, '<p>I have used the solution of @Joseph Oster in order to create a directive.\nI have also taken the liberty to update the answer to use:</p>\n\n<ul>\n<li>$locationChangeStart </li>\n<li>$locationChangeSuccess</li>\n</ul>\n\n<p>as the other events are obsolete.</p>\n\n<p>Fiddle is here: <a href="http://jsfiddle.net/empie/p5pn3rvL/" rel="nofollow">http://jsfiddle.net/empie/p5pn3rvL/</a></p>\n\n<p>Directive source:</p>\n\n<pre><code>angular.module(''myapp'', [''ngRoute''])\n    .directive(''autoScroll'', function ($document, $timeout, $location) {\n    return {\n        restrict: ''A'',\n        link: function (scope, element, attrs) {\n            scope.okSaveScroll = true;\n\n            scope.scrollPos = {};\n\n            $document.bind(''scroll'', function () {\n                if (scope.okSaveScroll) {\n                    scope.scrollPos[$location.path()] = $(window).scrollTop();\n                }\n            });\n\n            scope.scrollClear = function (path) {\n                scope.scrollPos[path] = 0;\n            };\n\n            scope.$on(''$locationChangeSuccess'', function (route) {\n                $timeout(function () {\n                    $(window).scrollTop(scope.scrollPos[$location.path()] ? scope.scrollPos[$location.path()] : 0);\n                    scope.okSaveScroll = true;\n                }, 0);\n            });\n\n            scope.$on(''$locationChangeStart'', function (event) {\n                scope.okSaveScroll = false;\n            });\n        }\n    };\n})\n</code></pre>\n', '790635', '', '', '', '', '2014-10-07 20:40:20', '', '', 0, 0, '', '', ''),
(26342856, 2, '', '14107531', '2014-10-13 14:51:57', 0, 0, '<p>You need to reset the scroll position on each route change.\nUse this in your main AppController:</p>\n\n<pre><code>  $scope.$on("$routeChangeSuccess", function () {\n    $anchorScroll();\n  });\n</code></pre>\n\n<p>Or if you are using ui-route:</p>\n\n<pre><code>  $scope.$on("$stateChangeSuccess", function () {\n    $anchorScroll();\n  });\n</code></pre>\n\n<p>For more infomation see <a href="http://stackoverflow.com/questions/22002764/in-angularjs-how-do-i-add-a-watch-on-the-url-hash">In AngularJS, how do I add a $watch on the URL hash?</a></p>\n', '1465919', '', '', '', '', '2014-10-13 14:51:57', '', '', 0, 0, '', '', ''),
(14107826, 2, '', '14107804', '2013-01-01 04:29:53', 12, 0, '<p>AS stated by ganeshh.iyer "</p>\n\n<blockquote>\n  <p>10.0.0.0/8 was the old ARPANET, which they picked up on 01-Jan-1983. When they shut down the ARPANET in 1990, the 10.0.0.0/8 block was freed. There was much argument about if there should ever be private IP spaces, given that a goal of IPv4 was universal to all hosts on the net.</p>\n  \n  <p>In then end, practicality won out, and RFC 1597 reserved the now well known private address spaces. When ARPANET went away, the 10.0.0.0/8 allocation was marked as reserved and since it was known that the ARPANET was truly gone (the hosts being moved to MILNET, NSFNET or the Internet) it was decided that this was the best Class A block to allocate.</p>\n  \n  <p>Note Class A. This was before CIDR. So, the Class A, B and C private address netblocks needed to come out of the correct IP ranges.</p>\n  \n  <p>I know that 172.16.0.0/12 was picked because it offered the most continuous block of Class B (/16) addresses in the IP space that was in a reserved block. 192.0.0.0/24 was always reserved for the same reason that 0.0.0.0/8 and 128.0.0.0/16 were reserved (first blocks of the old Class C, A and B network blocks) so assigning 192.168.0.0/24 out as private fit well -- 192.0.2.0/24 was already TEST-NET, where you could use them in public documentation without fear of someone trying it (see example.com for another example.)"</p>\n</blockquote>\n\n<p>Quoted from: </p>\n\n<ul>\n<li><a href="https://supportforums.cisco.com/thread/2014967">https://supportforums.cisco.com/thread/2014967</a></li>\n<li><a href="https://supportforums.cisco.com/people/ganeshh.iyer">https://supportforums.cisco.com/people/ganeshh.iyer</a></li>\n</ul>\n', '1882084', '', '207421', '', '2013-01-01 22:05:55', '2013-01-01 22:05:55', '', '', 0, 2, '', '', ''),
(14107928, 2, '', '14107919', '2013-01-01 04:59:07', 20, 0, '<pre><code>mysqldump -u user -ppass -d olddb | mysql -u user -ppass -Dnewdb\n</code></pre>\n\n<p>The new database must exist already. The <code>-d</code> flag in the mysqldump command prevents copying of data.</p>\n', '1360253', '', '', '', '', '2013-01-01 04:59:07', '', '', 0, 2, '', '', ''),
(14107933, 2, '', '14107919', '2013-01-01 05:00:23', 1, 0, '<p><code>mysqldump -d -u someuser -p mydatabase &gt; mydatabase.sql</code></p>\n\n<p><a href="http://www.electrictoolbox.com/mysqldump-schema-only/" rel="nofollow">http://www.electrictoolbox.com/mysqldump-schema-only/</a></p>\n\n<p>This will output to a sql file.</p>\n', '1388526', '', '', '', '', '2013-01-01 05:00:23', '', '', 0, 0, '', '', ''),
(14108098, 2, '', '14107919', '2013-01-01 05:40:43', 3, 0, '<p>You can take backup using <strong>mysqldump</strong> and restore with <strong>mysql</strong> using commandline. </p>\n\n<p><strong>For backup database</strong></p>\n\n<pre><code>mysqldump -u root-pPassword -P3309 --routines --no-data testdb &gt; "d:\\dbwithnodata.sql"\n</code></pre>\n\n<p><strong>For restoration of database</strong></p>\n\n<pre><code>mysql -u root-pPassword -P3309 newdb &lt; "d:\\dbwithnodata.sql"\n</code></pre>\n', '1784834', '', '', '', '', '2013-01-01 05:40:43', '', '', 0, 0, '', '', ''),
(18703270, 2, '', '14107919', '2013-09-09 16:58:48', 0, 0, '<p>You can backup you MYSQL database structure with</p>\n\n<pre><code>mysqldump -u username –p  -d database_name &gt; backup.sql\n</code></pre>\n\n<p>(You should not supply password at command line as it leads to security risks.MYSQL will ask for password by default.)\nAnd you can create create tables in database with </p>\n\n<pre><code>mysql -u username -p new_database &lt; backup.txt\n</code></pre>\n\n<p>Now you can use pipe to give the output of first command as output for second one and you will no longer need <code>backup.sql</code></p>\n\n<pre><code>mysqldump -u username –p  -d database_name|mysql -u username -p new_database\n</code></pre>\n\n<p>All tables in will be created in <code>new_database</code> without data.</p>\n', '1837811', '', '', '', '', '2013-09-09 16:58:48', '', '', 0, 0, '', '', ''),
(14108694, 2, '', '14107979', '2013-01-01 07:27:53', 29, 0, '<p><img src="http://i.stack.imgur.com/hwvgC.png" alt="enter image description here"></p>\n\n<p>Just set your <code>UIImageView</code> property name as "imageView" and add the following four methods with the same sequence in your implementation file. \nAlso, set your ImageView Mode to ''Redraw''.  Add UIImage Category for the blur effect as given or use any custom class, it will work for you.</p>\n\n<p>Method 1 - Cropping the Image </p>\n\n<pre><code>#pragma mark - Cropping the Image \n\n- (UIImage *)croppIngimageByImageName:(UIImage *)imageToCrop toRect:(CGRect)rect{\n\n    CGImageRef imageRef = CGImageCreateWithImageInRect([imageToCrop CGImage], rect);    \n    UIImage *cropped = [UIImage imageWithCGImage:imageRef];\n    CGImageRelease(imageRef);\n\n    return cropped;   \n\n\n}\n</code></pre>\n\n<p>Method 2 - Merge the two Images </p>\n\n<pre><code>#pragma mark - Marge two Images \n\n- (UIImage *) addImageToImage:(UIImage *)img withImage2:(UIImage *)img2 andRect:(CGRect)cropRect{\n\n    CGSize size = CGSizeMake(imageView.image.size.width, imageView.image.size.height);\n    UIGraphicsBeginImageContext(size);\n\n    CGPoint pointImg1 = CGPointMake(0,0);\n    [img drawAtPoint:pointImg1]; \n\n    CGPoint pointImg2 = cropRect.origin;\n    [img2 drawAtPoint: pointImg2];\n\n    UIImage* result = UIGraphicsGetImageFromCurrentImageContext();\n    UIGraphicsEndImageContext();\n\n    return result;\n}\n</code></pre>\n\n<p>Method 3 - RoundRect the Image</p>\n\n<pre><code>#pragma mark - RoundRect the Image\n\n- (UIImage *)roundedRectImageFromImage:(UIImage *)image withRadious:(CGFloat)radious {\n\n    if(radious == 0.0f)\n        return image;\n\n    if( image != nil) {\n\n        CGFloat imageWidth = image.size.width;\n        CGFloat imageHeight = image.size.height;\n\n        CGRect rect = CGRectMake(0.0f, 0.0f, imageWidth, imageHeight);\n        UIWindow *window = [[[UIApplication sharedApplication] windows] objectAtIndex:0];\n        const CGFloat scale = window.screen.scale;\n        UIGraphicsBeginImageContextWithOptions(rect.size, NO, scale);\n\n        CGContextRef context = UIGraphicsGetCurrentContext();\n\n        CGContextBeginPath(context);\n        CGContextSaveGState(context);\n        CGContextTranslateCTM (context, CGRectGetMinX(rect), CGRectGetMinY(rect));\n        CGContextScaleCTM (context, radious, radious);\n\n        CGFloat rectWidth = CGRectGetWidth (rect)/radious;\n        CGFloat rectHeight = CGRectGetHeight (rect)/radious;\n\n        CGContextMoveToPoint(context, rectWidth, rectHeight/2.0f);\n        CGContextAddArcToPoint(context, rectWidth, rectHeight, rectWidth/2.0f, rectHeight, radious);\n        CGContextAddArcToPoint(context, 0.0f, rectHeight, 0.0f, rectHeight/2.0f, radious);\n        CGContextAddArcToPoint(context, 0.0f, 0.0f, rectWidth/2.0f, 0.0f, radious);\n        CGContextAddArcToPoint(context, rectWidth, 0.0f, rectWidth, rectHeight/2.0f, radious);\n        CGContextRestoreGState(context);\n        CGContextClosePath(context);\n        CGContextClip(context);\n\n        [image drawInRect:CGRectMake(0.0f, 0.0f, imageWidth, imageHeight)];\n\n        UIImage *newImage = UIGraphicsGetImageFromCurrentImageContext();\n        UIGraphicsEndImageContext();\n\n        return newImage;\n    } \n    return nil;\n}\n</code></pre>\n\n<p>Method 4 - Touch Move</p>\n\n<pre><code>#pragma mark - Touch Methods\n\n- (void)touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event {\n\n\n    UIImage *croppedImg = nil;\n\n    UITouch *touch = [touches anyObject];\n    CGPoint currentPoint = [touch locationInView:self.imageView];\n\n    double ratioW=imageView.image.size.width/imageView.frame.size.width ;\n\n    double ratioH=imageView.image.size.height/imageView.frame.size.height;\n\n    currentPoint.x *= ratioW;\n    currentPoint.y *= ratioH;\n\n    double circleSizeW = 30 * ratioW;\n    double circleSizeH = 30 * ratioH;\n\n\n    currentPoint.x = (currentPoint.x - circleSizeW/2&lt;0)? 0 : currentPoint.x - circleSizeW/2;\n    currentPoint.y = (currentPoint.y - circleSizeH/2&lt;0)? 0 : currentPoint.y - circleSizeH/2;\n\n\n    CGRect cropRect = CGRectMake(currentPoint.x , currentPoint.y,   circleSizeW,  circleSizeH);\n\n    NSLog(@"x %0.0f, y %0.0f, width %0.0f, height %0.0f", cropRect.origin.x, cropRect.origin.y,   cropRect.size.width,  cropRect.size.height );\n\n    croppedImg = [self croppIngimageByImageName:self.imageView.image toRect:cropRect];\n\n    // Blur Effect \n    croppedImg = [croppedImg imageWithGaussianBlur9];\n\n    // Contrast Effect \n    // croppedImg = [croppedImg imageWithContrast:50];\n\n\n\n    croppedImg = [self roundedRectImageFromImage:croppedImg withRadious:4]; \n\n    imageView.image = [self addImageToImage:imageView.image withImage2:croppedImg andRect:cropRect];  \n} \n</code></pre>\n\n<p>UIImage Category Class</p>\n\n<p>UIImage+ImageBlur.h</p>\n\n<pre><code>#import &lt;UIKit/UIKit.h&gt;\n\n@interface UIImage (ImageBlur)\n\n- (UIImage *)imageWithGaussianBlur9;\n\n@end\n</code></pre>\n\n<p>UIImage+ImageBlur.m</p>\n\n<pre><code>#import "UIImage+ImageBlur.h"\n\n@implementation UIImage (ImageBlur)\n\n- (UIImage *)imageWithGaussianBlur9 {\n    float weight[5] = {0.1270270270, 0.1945945946, 0.1216216216, 0.0540540541, 0.0162162162};\n    // Blur horizontally\n    UIGraphicsBeginImageContextWithOptions(self.size, NO, self.scale);\n    [self drawInRect:CGRectMake(0, 0, self.size.width, self.size.height) blendMode:kCGBlendModeNormal alpha:weight[0]];\n    for (int x = 1; x &lt; 5; ++x) {\n        [self drawInRect:CGRectMake(x, 0, self.size.width, self.size.height) blendMode:kCGBlendModeNormal alpha:weight[x]];\n        [self drawInRect:CGRectMake(-x, 0, self.size.width, self.size.height) blendMode:kCGBlendModeNormal alpha:weight[x]];\n    }\n    UIImage *horizBlurredImage = UIGraphicsGetImageFromCurrentImageContext();\n    UIGraphicsEndImageContext();\n    // Blur vertically\n    UIGraphicsBeginImageContextWithOptions(self.size, NO, self.scale);\n    [horizBlurredImage drawInRect:CGRectMake(0, 0, self.size.width, self.size.height) blendMode:kCGBlendModeNormal alpha:weight[0]];\n    for (int y = 1; y &lt; 5; ++y) {\n        [horizBlurredImage drawInRect:CGRectMake(0, y, self.size.width, self.size.height) blendMode:kCGBlendModeNormal alpha:weight[y]];\n        [horizBlurredImage drawInRect:CGRectMake(0, -y, self.size.width, self.size.height) blendMode:kCGBlendModeNormal alpha:weight[y]];\n    }\n    UIImage *blurredImage = UIGraphicsGetImageFromCurrentImageContext();\n    UIGraphicsEndImageContext();\n    //\n    return blurredImage;\n}\n\n@end\n</code></pre>\n\n<p>happy coding....</p>\n', '1343688', '', '1343688', '', '2013-11-14 06:26:45', '2013-11-14 06:26:45', '', '', 0, 9, '', '', ''),
(14109036, 2, '', '14107979', '2013-01-01 08:34:56', 4, 0, '<p>Add the following Pangesture in view or imageview</p>\n\n<pre><code>UIPanGestureRecognizer *panGesture=[[UIPanGestureRecognizer alloc]initWithTarget:self action:@selector(imageTaped:)];\n[panGesture setMaximumNumberOfTouches:1];\n[self.view addGestureRecognizer:panGesture];\n</code></pre>\n\n<p>The method for blur image</p>\n\n<pre><code>- (void)imageTaped:(UIPanGestureRecognizer *)gestureRecognizer\n{\n\n    CIContext *context = [CIContext contextWithOptions:nil];\n    CGPoint touchLocation = [gestureRecognizer locationInView:self.imgviewMain];\n\n\n    CGRect temp=CGRectMake(touchLocation.x-25, ((self.imgviewMain.frame.size.height-50) - touchLocation.y)+25, 50, 50);\n\n    CIImage *inputImage0 = [[CIImage alloc] initWithImage:self.imgviewMain.image];\n\n    CIImage *inputImage = [[CIImage alloc] initWithImage:[UIImage imageWithCGImage:[context createCGImage:inputImage0 fromRect:temp]]];\n    CIFilter *blurFilter = [CIFilter filterWithName:@"CIGaussianBlur"];\n    [blurFilter setDefaults];\n    [blurFilter setValue: inputImage forKey: @"inputImage"];\n    [blurFilter setValue: [NSNumber numberWithFloat:0.1]\n                  forKey:@"inputRadius"];\n\n\n    CIImage *outputImage = [blurFilter valueForKey: @"outputImage"];\n    UIImageView *imgtest=[[UIImageView alloc]init];\n\n    imgtest.image=[UIImage imageWithCGImage:[context createCGImage:outputImage fromRect:outputImage.extent]];\n\n\n\n    UIImage *image;\n\n    UIImage *bottomImage = self.imgviewMain.image; \n          image = imgtest.image;    \n\n\n    CGSize newSize = CGSizeMake(self.imgviewMain.frame.size.width, self.imgviewMain.frame.size.height);\n    UIGraphicsBeginImageContext( newSize );\n\n    [bottomImage drawInRect:CGRectMake(0,0,768,1024)];\n\n    CGRect newRect2=CGRectMake(temp.origin.x,((self.imgviewMain.frame.size.height-50) - temp.origin.y), image.size.width, image.size.height);\n    image=[self makeRoundedImage:image radius:10];\n\n    [image drawInRect:newRect2 blendMode:kCGBlendModeNormal alpha:0.5];\n     UIImage *newImage = UIGraphicsGetImageFromCurrentImageContext();\n\n    UIGraphicsEndImageContext();\n\n    self.imgviewMain.image=newImage;\n   }\n</code></pre>\n\n<p>RoundedImage Method</p>\n\n<pre><code>-(UIImage *)makeRoundedImage:(UIImage *) image\n                      radius: (float) radius;\n{\n    CALayer *imageLayer = [CALayer layer];\n    imageLayer.frame = CGRectMake(0, 0, image.size.width, image.size.height);\n    imageLayer.contents = (id) image.CGImage;\n\n    imageLayer.masksToBounds = YES;\n    imageLayer.cornerRadius = radius;\n\n    UIGraphicsBeginImageContext(image.size);\n    [imageLayer renderInContext:UIGraphicsGetCurrentContext()];\n    UIImage *roundedImage = UIGraphicsGetImageFromCurrentImageContext();\n    UIGraphicsEndImageContext();\n\n    return roundedImage;\n}\n</code></pre>\n', '1099453', '', '', '', '', '2013-01-01 08:34:56', '', '', 0, 3, '', '', ''),
(14259396, 2, '', '14108430', '2013-01-10 13:47:15', 7, 0, '<p>This is a known issue, the feedback article <a href="https://connect.microsoft.com/VisualStudio/feedback/details/771651/cookiecontainer-subdomain-handling-issue-in-net-4-0">is here</a>.</p>\n\n<p>Not much going on right now but it was filed relatively recently.  I can only recommend voting for this bug and periodically checking back for its status.  If you can''t afford to wait then contact Microsoft Support for a possibly quicker follow-up.</p>\n', '17034', '', '', '', '', '2013-01-10 13:47:15', '', '', 0, 0, '', '', ''),
(14109166, 2, '', '14109024', '2013-01-01 09:01:52', 3, 0, '<p>Start->Run->regedit</p>\n\n<p>Go to <code>[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\CodePage]</code></p>\n\n<p>Change the "OEMCP" value to "65001"</p>\n\n<p>Requires computer restart.</p>\n', '1868397', '', '1868397', '', '2014-10-06 12:57:40', '2014-10-06 12:57:40', '', '', 0, 7, '', '', ''),
(18439832, 2, '', '14109024', '2013-08-26 08:31:20', 18, 0, '<p>After I tried algirdas'' solution, my Windows crashed (Win 7 Pro 64bit) so I decided to try a different solution:</p>\n\n<ol>\n<li>Start <code>Run</code> (Win+R)</li>\n<li>Type <code>cmd /K chcp 65001</code></li>\n</ol>\n\n<p>You will get mostly what you want. To start it from the taskbar or anywhere else, make a shortcut (you can name it <code>cmd.unicode.exe</code> or whatever you like) and change its <code>Target</code> to <code>C:\\Windows\\System32\\cmd.exe /K chcp 65001</code>.</p>\n', '2025722', '', '1042555', '', '2014-02-12 13:30:36', '2014-02-12 13:30:36', '', '', 0, 0, '', '', ''),
(24711864, 2, '', '14109024', '2014-07-12 10:08:54', 1, 0, '<p>Save the following into a file with ".reg" suffix:</p>\n\n<pre><code>Windows Registry Editor Version 5.00\n\n[HKEY_CURRENT_USER\\Console\\%SystemRoot%_system32_cmd.exe]\n"CodePage"=dword:0000fde9\n</code></pre>\n\n<p>Double click this file, and regedit will import it.</p>\n\n<p>It basically sets the key <code>HKEY_CURRENT_USER\\Console\\%SystemRoot%_system32_cmd.exe\\CodePage</code> to 0xfde9 (65001 in decimal system).</p>\n', '1378918', '', '1378918', '', '2014-07-16 13:11:03', '2014-07-16 13:11:03', '', '', 0, 1, '', '', ''),
(14109099, 2, '', '14109079', '2013-01-01 08:49:02', 4, 0, '<p>Check that downloaded eclipse/JDK/JRE is compatible with your processor/OS architecture that is are they 32bit or 64bit?</p>\n', '1173023', '', '', '', '', '2013-01-01 08:49:02', '', '', 0, 4, '', '', ''),
(14109137, 2, '', '14109079', '2013-01-01 08:55:34', 2, 0, '<p>please try to execute <code>java</code> from </p>\n\n<blockquote>\n  <p>C:\\Program Files\\Java\\jdk1.7.0_10\\bin</p>\n</blockquote>\n\n<p>i.e from the location where java is installed.</p>\n\n<p>If it is successful, it means that the error lies somewhere in the classpath.</p>\n\n<p>Also, this guy seems to have had the same problem as yours, <a href="http://geekycoder.wordpress.com/2009/07/08/java-tips-adventure-in-resolving-the-java-error-error-occurred-during-initialization-of-vm/" rel="nofollow">check it out</a></p>\n', '1871769', '', '1871769', '', '2013-01-01 09:00:53', '2013-01-01 09:00:53', '', '', 0, 2, '', '', ''),
(17695402, 2, '', '14109079', '2013-07-17 08:57:32', 4, 0, '<p>Go to c:\\eclipse folder, locate eclipse.ini file</p>\n\n<ol>\n<li>add following entries</li>\n</ol>\n\n<p>-vm\nC:\\Program Files\\Java\\jdk1.7.0_10\\bin\\javaw.exe</p>\n\n<ol>\n<li><p>Save file </p></li>\n<li><p>execute eclipse.exe </p></li>\n</ol>\n', '2590624', '', '', '', '', '2013-07-17 08:57:32', '', '', 0, 0, '', '', ''),
(14199910, 2, '', '14109187', '2013-01-07 16:23:52', 3, 0, '<p>I had some size issues with this code, and I solved it.</p>\n\n<p>Maybe this will help you, too:</p>\n\n<p>1) in the constructor store the bitmap in a local variable (e.g. private Bitmap bmp;)</p>\n\n<p>2) override two more methods:</p>\n\n<pre><code>@Override\n    public int getIntrinsicWidth() {\n    return bmp.getWidth();\n}\n\n@Override\n    public int getIntrinsicHeight() {\n    return bmp.getHeight();\n}\n</code></pre>\n\n<p>Best regards,\nDaRolla</p>\n', '855527', '', '', '', '', '2013-01-07 16:23:52', '', '', 0, 1, '', '', ''),
(17743713, 2, '', '14109187', '2013-07-19 10:19:21', 0, 0, '<p>There underlying problem is that the BitmapShader''s <code>TileMode</code> doesn''t have a scaling option. You''ll note in the source that it''s been set to <code>Shader.TileMode.CLAMP</code>, and the docs describe that as:</p>\n\n<blockquote>\n  <p>replicate the edge color if the shader draws outside of its original bounds </p>\n</blockquote>\n\n<p>To work around this, there are three solutions:</p>\n\n<ol>\n<li>Constrain the size of the view in which the drawable is used to the size of the bitmap.</li>\n<li><p>Constrain the drawing region; for instance, change:</p>\n\n<pre><code>int width = bounds.width() - mMargin;\nint height = bounds.height() - mMargin;\nmRect.set(mMargin, mMargin, width, height);\n</code></pre>\n\n<p>To:</p>\n\n<pre><code>int width = Math.min(mBitmap.getWidth(), bounds.width()) - mMargin;\nint height = Math.min(mBitmap.getHeight(), bounds.height()) - mMargin;\nmRect.set(mMargin, mMargin, width, height);\n</code></pre></li>\n<li><p>Scale the bitmap to the size of the drawable. I''ve moved creating the shader into onBoundsChange() and have opted to create a new bitmap from here:</p>\n\n<pre><code>bitmap = Bitmap.createScaledBitmap(mBitmap, width, height, true);\nmBitmapShader = new BitmapShader(bitmap,\n        Shader.TileMode.CLAMP, Shader.TileMode.CLAMP);\n</code></pre>\n\n<p>Note that this a potentially slow operation and will be running on the main thread. You might want to carefully consider how you want to implement it before you go for this last solution.</p></li>\n</ol>\n', '154306', '', '154306', '', '2013-07-19 10:28:56', '2013-07-19 10:28:56', '', '', 0, 3, '', '', ''),
(18806269, 2, '', '14109187', '2013-09-14 20:48:28', 5, 0, '<p>I think that the solution that is presented on <a href="https://github.com/vinc3m1/RoundedImageView" rel="nofollow"><strong>this website</strong></a> works well.</p>\n\n<p>unlike other solutions, it doesn''t cause memory leaks, even though it is based on Romain Guy''s solution.</p>\n\n<p>EDIT: now on the support library, you can also use <a href="https://developer.android.com/reference/android/support/v4/graphics/drawable/RoundedBitmapDrawable.html" rel="nofollow"><strong>RoundedBitmapDrawable</strong></a> (using <a href="https://developer.android.com/reference/android/support/v4/graphics/drawable/RoundedBitmapDrawableFactory.html" rel="nofollow"><strong>RoundedBitmapDrawableFactory</strong></a> ) .</p>\n', '878126', '', '878126', '', '2014-12-23 21:00:12', '2014-12-23 21:00:12', '', '', 0, 2, '', '', ''),
(14110148, 2, '', '14109474', '2013-01-01 11:48:16', 4, 0, '<p>Is your json file only contains a list of records in the <code>data</code> field? In that case, you need to re-format your json file as a list of records like the following:</p>\n\n<pre><code>     {\n     "id": "xxxxxxxxxxxxxxxxxx",\n     "from": {\n        "name": "yyyyyyyyyyy",\n        "id": "1111111111111"\n     },\n     "to": {\n        "data": [\n           {\n              "version": 1,\n              "name": "1111111111111",\n              "id": "1111111111111"\n           }\n        ]\n     },\n     ......\n     }\n     {\n     "id": "xxxxxxxxxxxxxxxxxx",\n     "from": {\n        "name": "yyyyyyyyyyy",\n        "id": "1111111111111"\n     },\n     "to": {\n        "data": [\n           {\n              "version": 1,\n              "name": "1111111111111",\n              "id": "1111111111111"\n           }\n        ]\n     },\n     ......\n     }\n</code></pre>\n\n<p>Just edit the a few leading/ending lines should be enough if your json file is well formatted.</p>\n\n<p><strong>EDIT</strong>: You may need the <code>--jsonArray</code> option to import from a valid json file. try </p>\n\n<pre><code>mongoimport --db DATABASE_NAME --collection COLLECTION_NAME --file YOUR_JSON_FILE --jsonArray\n</code></pre>\n', '693110', '', '693110', '', '2013-01-01 13:03:06', '2013-01-01 13:03:06', '', '', 0, 7, '', '', ''),
(14974123, 2, '', '14109474', '2013-02-20 07:04:52', 43, 0, '<p>instead of using mongoimport <code>-d DATABASE_NAME -c COLLECTION_NAME --file YOUR_JSON_FILE</code>, use following command mongoimport: <code>-d DATABASE_NAME -c COLLECTION_NAME --file YOUR_JSON_FILE --jsonArray</code>.</p>\n', '2050819', '', '938024', '', '2013-02-20 07:28:14', '2013-02-20 07:28:14', '', '', 0, 5, '', '', ''),
(16445213, 2, '', '14109474', '2013-05-08 16:03:32', 11, 0, '<p>In my case my file was actually not too large, so the error message was misleading.  I had to either put each document in a single line or use <code>--jsonArray</code>.</p>\n\n<p>So either change the file like:</p>\n\n<pre><code>{ "_id" : "xxxxxxxx", "foo" : "yyy", "bar" : "zzz" }\n</code></pre>\n\n<p>or change the import command to</p>\n\n<pre><code>mongoimport -d [db_name] -c [col_name] --file [file_with_multi_lined_docs] --jsonArray\n</code></pre>\n\n<p>if my file stays in the multiple-lines-per-document format</p>\n\n<pre><code>{\n    "_id" : "xxxxxxxx", \n    "foo" : "yyy", \n    "bar" : "zzz" \n}\n</code></pre>\n', '733034', '', '733034', '', '2013-05-08 16:10:23', '2013-05-08 16:10:23', '', '', 0, 0, '', '', ''),
(26482939, 2, '', '14109474', '2014-10-21 09:10:00', 0, 0, '<p>Check the version of mongo, I had the problem that I exported json from mongo 2.6.1 and tried to import on a mongo ~2.4, after installing a higher version it worked for me...</p>\n', '362123', '', '', '', '', '2014-10-21 09:10:00', '', '', 0, 1, '', '', ''),
(27505626, 2, '', '14109474', '2014-12-16 13:20:44', 0, 0, '<p>In my case, when faced with this error, I found that the problem was from copying and pasting the data from my local machine (in vim) to my remote server (also vim). When I <code>scp</code>''d it across instead it miraculously worked, so no idea what was being changed when copying it across, especially as it was copying from Mac to Centos, so no line ending issues.</p>\n\n<p>In conclusion: <strong>use the file that <code>mongoexport</code> creates, not its contents!</strong></p>\n', '1025702', '', '', '', '', '2014-12-16 13:20:44', '', '', 0, 0, '', '', ''),
(14109796, 2, '', '14109724', '2013-01-01 10:51:26', 67, 0, '<p>You need to precede the lines starting with <code>gcc</code> and <code>rm</code> with a hard tab. Commands in make rules are required to start with a tab (unless they follow a semicolon on the same line).\nThe result should look like this:</p>\n\n<pre><code>PROG = semsearch\nall: $(PROG)\n%: %.c\n        gcc -o $@ $&lt; -lpthread\n\nclean:\n        rm $(PROG)\n</code></pre>\n\n<p>Note that some editors may be configured to insert a sequence of spaces instead of a hard tab. If there are spaces at the start of these lines you''ll also see the "missing separator" error. If you do have problems inserting hard tabs, use the semicolon way:</p>\n\n<pre><code>PROG = semsearch\nall: $(PROG)\n%: %.c ; gcc -o $@ $&lt; -lpthread\n\nclean: ; rm $(PROG)\n</code></pre>\n', '648658', '', '648658', '', '2013-01-01 10:59:17', '2013-01-01 10:59:17', '', '', 0, 3, '', '', ''),
(15820481, 2, '', '14109906', '2013-04-04 19:53:41', 1, 0, '<p>lib/libuvic.a needs to be recompiled with -fPIC, not just the code that''s trying to link to it.  I can''t tell from your output samples whether you recompiled the library with -fPIC as well, or not.</p>\n', '1382828', '', '', '', '', '2013-04-04 19:53:41', '', '', 0, 0, '', '', ''),
(14110096, 2, '', '14109927', '2013-01-01 11:39:44', 44, 0, '<p>You can set http headers as explained in the <a href="http://docs.angularjs.org/api/ng.%24http">$http</a> service.</p>\n\n<p>You can set it up globally:</p>\n\n<pre><code>$httpProvider.defaults.headers.post[''My-Header'']=''value''   (or)\n$http.defaults.headers.post[''My-Header'']=''value'';\n</code></pre>\n\n<p>or for a single request:</p>\n\n<pre><code>$http({\n   headers: {\n      ''My-Header'': ''value''\n   }  \n});\n</code></pre>\n\n<p>Here is an important quote from <a href="http://docs.angularjs.org/api/ng.%24http">Angular</a>:</p>\n\n<blockquote>\n  <p>Cross Site Request Forgery (XSRF) Protection XSRF is a technique by\n  which an unauthorized site can gain your user''s private data. Angular\n  provides following mechanism to counter XSRF. When performing XHR\n  requests, the $http service reads a token from a cookie called\n  XSRF-TOKEN and sets it as the HTTP header X-XSRF-TOKEN. Since only\n  JavaScript that runs on your domain could read the cookie, your server\n  can be assured that the XHR came from JavaScript running on your\n  domain.</p>\n  \n  <p>To take advantage of this, your server needs to set a token in a\n  JavaScript readable session cookie called XSRF-TOKEN on first HTTP GET\n  request. On subsequent non-GET requests the server can verify that the\n  cookie matches X-XSRF-TOKEN HTTP header, and therefore be sure that\n  only JavaScript running on your domain could have read the token. The\n  token must be unique for each user and must be verifiable by the\n  server (to prevent the JavaScript making up its own tokens). We\n  recommend that the token is a digest of your site''s authentication\n  cookie with salt for added security.</p>\n</blockquote>\n', '1916258', '', '1916258', '', '2013-01-01 12:04:40', '2013-01-01 12:04:40', '', '', 0, 12, '', '', ''),
(19890573, 2, '', '14109927', '2013-11-10 13:59:54', 0, 0, '<p>If you''re wondering how to actually set a XSRF-TOKEN cookie value in Rails this answer has an implementation <a href="http://stackoverflow.com/questions/14734243/rails-csrf-protection-angular-js-protect-from-forgery-makes-me-to-log-out-on">Rails CSRF Protection + Angular.js: protect_from_forgery makes me to log out on POST</a></p>\n', '1476226', '', '', '', '', '2013-11-10 13:59:54', '', '', 0, 0, '', '', ''),
(14111828, 2, '', '14110532', '2013-01-01 15:53:37', 7, 0, '<p>I have to admit I do not fully understand how computation expressions work when you use <em>query expression</em> features like the <code>CustomOperation</code> attribute. But here are some remarks from some my experiments that might help....</p>\n\n<p>Firstly, I think it is not possible to freely combine standard computation expression features (<code>return!</code> etc.) with custom operations. Some combinations are apparently allowed, but not all. For example, if I define custom operation <code>left</code> and <code>return!</code> then I can only use the custom operation <em>before</em> <code>return!</code>:</p>\n\n<pre><code>// Does not compile              // Compiles and works\nmoves { return! lr               moves { left \n        left }                           return! lr }\n</code></pre>\n\n<p>As for the computations that use only custom operations, most common cusotom operations (<code>orderBy</code>, <code>reverse</code> and this kind) have a type <code>M&lt;''T&gt; -&gt; M&lt;''T&gt;</code> where <code>M&lt;''T&gt;</code> is some (possibly generic) type that represent the thing we''re building (e.g. a list).</p>\n\n<p>For example, if we want to build a value that represents a sequence of left/right moves, we can use the following <code>Commands</code> type:</p>\n\n<pre><code>type Command = Left | Right \ntype Commands = Commands of Command list\n</code></pre>\n\n<p>Custom operations like <code>left</code> and <code>right</code> can then transform <code>Commands</code> into <code>Commands</code> and append the new step to the end of the list. Something like:</p>\n\n<pre><code>type MovesBuilder() =\n  [&lt;CustomOperation("left")&gt;]\n  member x.Left(Commands c) = Commands(c @ [Left])\n  [&lt;CustomOperation("right")&gt;]\n  member x.Right(Commands c) = Commands(c @ [Right])\n</code></pre>\n\n<p>Note this is different from <code>yield</code> which returns just a single operation - or command - and so <code>yield</code> needs <code>Combine</code> to combine multiple individual steps if you use custom operations, then you never need to combine anything because the custom operations gradually build the <code>Commands</code> value as a whole. It only needs some initial <em>empty</em> <code>Commands</code> value that is used at the beginning...</p>\n\n<p>Now, I would expect to see <code>Zero</code> there, but it actually calls <code>Yield</code> with unit as an argument, so you need:</p>\n\n<pre><code>member x.Yield( () ) = \n  Commands[]\n</code></pre>\n\n<p>I''m not sure why this is the case, but <code>Zero</code> is quite often defined as <code>Yield ()</code>, so perhaps the goal is to use the default definition (but as I said, I''d also expect to use <code>Zero</code> here...)</p>\n\n<p>I think combining custom operations with computation expressions makes sense. While I have strong opinions on how standard <em>computation expressions</em> should be used, I do not really have any good intuition about computations with custom operations - I think the community still needs to figure this out :-). But for example, you can extend the above computation like this:</p>\n\n<pre><code>member x.Bind(Commands c1, f) = \n  let (Commands c2) = f () in Commands(c1 @ c2)\nmember x.For(c, f) = x.Bind(c, f)\nmember x.Return(a) = x.Yield(a)\n</code></pre>\n\n<p>(At some point, the translation will start requiring <code>For</code> and <code>Return</code>, but here they can be defined just like <code>Bind</code> and <code>Yield</code> - and I do not fully understand when is which alternative used).</p>\n\n<p>Then you can write something like:</p>\n\n<pre><code>let moves = MovesBuilder()\n\nlet lr = \n  moves { left\n          right }    \nlet res =\n  moves { left\n          do! lr\n          left \n          do! lr }\n</code></pre>\n', '33518', '', '', '', '', '2013-01-01 15:53:37', '', '', 0, 1, '', '', ''),
(14130068, 2, '', '14110532', '2013-01-02 22:13:38', 11, 0, '<p>I''m glad you liked the IL example.  The best way to understand how expressions are desugared is probably to look at the <a href="http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/spec.html#_Toc335818835">spec</a> (though it''s a bit dense...).</p>\n\n<p>There we can see that something like </p>\n\n<pre><code>C {\n    op1\n    op2\n}\n</code></pre>\n\n<p>gets desugared as follows:</p>\n\n<pre><code>T([&lt;CustomOperator&gt;]op1; [&lt;CustomOperator&gt;]op2, [], fun v -&gt; v, true) ⇒\nCL([&lt;CustomOperator&gt;]op1; [&lt;CustomOperator&gt;]op2, [], C.Yield(), false) ⇒\nCL([&lt;CustomOperator&gt;]op2, [], 〚 [&lt;CustomOperator&gt;]op1, C.Yield() |][], false) ⇒\nCL([&lt;CustomOperator&gt;]op2, [], C.Op1(C.Yield()), false) ⇒\n〚 [&lt;CustomOperator&gt;]op2, C.Op1(C.Yield()) 〛[] ⇒\nC.Op2(C.Op1(C.Yield()))\n</code></pre>\n\n<p>As to why <code>Yield()</code> is used rather than <code>Zero</code>, it''s because if there were variables in scope (e.g. because you used some <code>lets</code>, or were in a for loop, etc.), then you would get <code>Yield (v1,v2,...)</code> but <code>Zero</code> clearly can''t be used this way.  Note that this means adding a superfluous <code>let x = 1</code> into Tomas''s <code>lr</code> example will fail to compile, because <code>Yield</code> will be called with an argument of type <code>int</code> rather than <code>unit</code>.</p>\n\n<p>There''s another trick which can help understand the compiled form of computation expressions, which is to (ab)use the auto-quotation support for computation expressions in F# 3.  Just define a do-nothing <code>Quote</code> member and make <code>Run</code> just return its argument:</p>\n\n<pre><code>member __.Quote() = ()\nmember __.Run(q) = q\n</code></pre>\n\n<p>Now your computation expression will evaluate to the quotation of its desugared form.  This can be pretty handy when debugging things.</p>\n', '82959', '', '', '', '', '2013-01-02 22:13:38', '', '', 0, 3, '', '', ''),
(14111021, 2, '', '14110890', '2013-01-01 13:50:22', 4, 0, '<p>There is a lot of debate over which method is correct, so I look at it as both are acceptable so I use ever which one I like the most (Which is no repository, UoW).</p>\n\n<p>In EF UoW is implemented via DbContext and the DbSets are repositories.  </p>\n\n<p>As for how to work with the data layer I just directly work on the DbContext object, for complex queries I will make extension methods for the query that can be reused.  </p>\n\n<p>I believe Ayende also has some posts about how abstracting out CUD operations is bad.</p>\n\n<p>I always make an interface and have my context inherit from it so I can use an IoC container for DI.</p>\n', '1579698', '', '452941', '', '2013-07-09 21:56:34', '2013-07-09 21:56:34', '', '', 0, 4, '', '', ''),
(14120227, 2, '', '14110890', '2013-01-02 10:15:24', 1, 0, '<p>Linq is a nowadays ''Repository''.</p>\n\n<p>ISession+Linq already is the repository, and you need neither <code>GetXByY</code> methods nor <code>QueryData(Query q)</code> generalization. Being a little paranoid to DAL usage, I still prefer repository interface. (From maintainability point of view we also still have to have some facade over specific data access interfaces). </p>\n\n<p>Here is repository we use - it de-couples us from direct usage of nhibernate, but provides linq interface (as ISession access in exceptional cases, which are subject to refactor eventually). </p>\n\n<pre><code>class Repo\n{\n    ISession _session; //via ioc\n    IQueryable&lt;T&gt; Query()\n    {\n        return _session.Query&lt;T&gt;();\n    }\n}\n</code></pre>\n', '731115', '', '', '', '', '2013-01-02 10:15:24', '', '', 0, 7, '', '', ''),
(17449069, 2, '', '14110890', '2013-07-03 13:16:09', 1, 0, '<p>The <em>Repository</em> (or however one chooses to call it) at this time for me is mostly about abstracting away the persistence layer. </p>\n\n<p>I use it coupled with query objects so I do not have a coupling to any particular technology in my applications. And also it eases testing a lot.</p>\n\n<p>So, I tend to have</p>\n\n<pre><code>public interface IRepository : IDisposable\n{\n    void Save&lt;TEntity&gt;(TEntity entity);\n    void SaveList&lt;TEntity&gt;(IEnumerable&lt;TEntity&gt; entities);\n\n    void Delete&lt;TEntity&gt;(TEntity entity);\n    void DeleteList&lt;TEntity&gt;(IEnumerable&lt;TEntity&gt; entities);\n\n    IList&lt;TEntity&gt; GetAll&lt;TEntity&gt;() where TEntity : class;\n    int GetCount&lt;TEntity&gt;() where TEntity : class;\n\n    void StartConversation();\n    void EndConversation();\n\n    //if query objects can be self sustaining (i.e. not need additional configuration - think session), there is no need to include this method in the repository.\n    TResult ExecuteQuery&lt;TResult&gt;(IQueryObject&lt;TResult&gt; query);\n}\n</code></pre>\n\n<p>Possibly add async methods with callbacks as delegates. \nThe repo is easy to implement <strong>generically</strong>, so I am able not to touch a line of the implementation from app to app. Well, this is true at least when using NH, I did it also with EF, but made me hate EF. 4. The conversation is the start of a transaction. Very cool if a few classes share the repository instance. Also, for NH, one repo in my implementation equals one session which is opened at the first request.</p>\n\n<p>Then the Query Objects</p>\n\n<pre><code>public interface IQueryObject&lt;TResult&gt;\n{\n    /// &lt;summary&gt;Provides configuration options.&lt;/summary&gt;\n    /// &lt;remarks&gt;\n    /// If the query object is used through a repository this method might or might not be called depending on the particular implementation of a repository.\n    /// If not used through a repository, it can be useful as a configuration option.\n    /// &lt;/remarks&gt;\n    void Configure(object parameter);\n\n    /// &lt;summary&gt;Implementation of the query.&lt;/summary&gt;\n    TResult GetResult();\n}\n</code></pre>\n\n<p>For the configure I use in NH only to pass in the ISession. In EF makes no sense more or less. </p>\n\n<p>An example query would be.. (NH)</p>\n\n<pre><code>public class GetAll&lt;TEntity&gt; : AbstractQueryObject&lt;IList&lt;TEntity&gt;&gt;\n    where TEntity : class\n{\n    public override IList&lt;TEntity&gt; GetResult()\n    {\n        return this.Session.CreateCriteria&lt;TEntity&gt;().List&lt;TEntity&gt;();\n    }\n}\n</code></pre>\n\n<p>To do an EF query you would have to have the context in the Abstract base, not the session. But of course the ifc would be the same.</p>\n\n<p>In this way the queries are themselves encapsulated, and easily testable. Best of all, my code relies only on interfaces. Everything is very clean. Domain (business) objects are just that, e.g. there is no mixing of responsibilities like when using the active record pattern which is hardly testable and mixes data access (query) code in the domain object and in doing so is mixing concerns (object which fetches itself??). Everybody is still free to create POCOs for data transfer. </p>\n\n<p>All in all, much code reuse and simplicity is provided with this approach at the loss of not anything I can imagine. Any ideas?</p>\n\n<p>And thanks a lot to Ayende for his great posts and continued dedication. Its his ideas here (query object), not mine. </p>\n', '1144090', '', '1144090', '', '2013-07-03 15:42:17', '2013-07-03 15:42:17', '', '', 0, 3, '', '', '');
INSERT INTO `Posts` (`Id`, `PostTypeId`, `AcceptedAnswerId`, `ParentId`, `CreationDate`, `Score`, `ViewCount`, `Body`, `OwnerUserId`, `OwnerDisplayName`, `LastEditorUserId`, `LastEditorDisplayName`, `LastEditDate`, `LastActivityDate`, `Title`, `Tags`, `AnswerCount`, `CommentCount`, `FavoriteCount`, `ClosedDate`, `CommunityOwnedDate`) VALUES
(17449231, 2, '', '14110890', '2013-07-03 13:23:37', 15, 0, '<p>The repository pattern is an <strong><em>abstraction</em></strong>. It''s purpose is to reduce complexity and make the rest of the code persistant ignorant. As a bonus it allows you to write <em>unit</em> tests instead of <em>integration</em> tests.</p>\n\n<p>The problem is that many developers fail to understand the patterns purpose and create repositories which leak persistance specific information up to the caller (typically by exposing <code>IQueryable&lt;T&gt;</code>). By doing so they get no benefit over using the OR/M directly.</p>\n\n<h2>Update to address another answer</h2>\n\n<p><strong>Coding for the exception</strong></p>\n\n<p>Using repositories is not about being able to switch persistence technology (i.e. changing database or using a webservice etc instead). It''s about separating business logic from persistence to reduce complexity and coupling.</p>\n\n<p><strong>Unit tests vs integration tests</strong> </p>\n\n<p>You do not write unit tests for repositories. period.</p>\n\n<p>But by introducing repositories (or any other abstraction layer between persistance and business) you are able to write unit tests for the business logic. i.e. you do not have to worry about your tests failing due to an incorrectly configured database.</p>\n\n<p>As for the queries. If you use LINQ you also have to make sure that your queries work, just as you have to do with repositories. and that is done using integration tests.</p>\n\n<p>The difference is that if you have not mixed your business with LINQ statements you can be 100% sure that it''s your persistence code that are failing and not something else.</p>\n\n<p>If you analyze your tests you will also see that they are much cleaner if you have not mixed concerns (i.e. LINQ + Business logic)</p>\n\n<p><strong>Repository examples</strong></p>\n\n<p>Most examples are bullshit. that is very true. However, if you google any design pattern you will find a lot of crappy examples. That is no reason to avoid using a pattern.</p>\n\n<p>Building a correct repository implementation is very easy. In fact, you only have to follow a single rule: </p>\n\n<p><strong><em>Do not add anything into the repository class until the very moment that you need it</em></strong> </p>\n\n<p>A lot of coders are lazy and tries to make a generic repository and use a base class with a lot of methods that they <strong><em>might</em></strong> need. YAGNI. You write the repository class once and keep it as long as the application lives (can be years). Why fuck it up by being lazy. Keep it clean without any base class inheritance. It will make it much easier to read and maintain. </p>\n\n<p><em>(The above statement is a guideline and not a law. A base class can very well be motivated. Just think before you add it, so that you add it for the right reasons)</em></p>\n\n<h2>Old stuff</h2>\n\n<p><strong>Conclusion:</strong></p>\n\n<p>If you don''t mind having LINQ statements in your business code nor care about unit tests I see no reason to not use Entity Framework directly.</p>\n\n<p><strong>Update</strong></p>\n\n<p>I''ve blogged both about the repository pattern and what "abstraction" really means: <a href="http://blog.gauffin.org/2013/01/repository-pattern-done-right/">http://blog.gauffin.org/2013/01/repository-pattern-done-right/</a></p>\n\n<p><strong>Update 2</strong></p>\n\n<blockquote>\n  <p>For single entity type with 20+ fields, how will you design query method to support any permutation combination? You dont want to limit search only by name, what about searching with navigation properties, list all orders with item with specific price code, 3 level of navigation property search. The whole reason <code>IQueryable</code> was invented was to be able to compose any combination of search against database. Everything looks great in theory, but user''s need wins above theory. </p>\n</blockquote>\n\n<p>Again: An entity with 20+ fields is incorrectly modeled. It''s a GOD entity. Break it down. </p>\n\n<p>I''m not arguing that <code>IQueryable</code> wasn''t made for quering. <strong><em>I''m saying that it''s not right for an abstraction layer like Repository pattern</em></strong> since it''s leaky. There is no 100% complete LINQ To Sql provider (like EF). </p>\n\n<p>They all have implementation specific things like how to use eager/lazy loading or how to do SQL "IN" statements. Exposing <code>IQueryable</code> in the repository forces the user to know all those things. Thus the whole attempt to abstract away the data source is a complete failure. You just add complexity without getting any benefit over using the OR/M directly.</p>\n\n<p>Either implement Repository pattern correctly or just don''t use it at all.</p>\n\n<p><em>(If you really want to handle big entities you can combine the Repository pattern with the <a href="http://en.wikipedia.org/wiki/Specification_pattern">Specification pattern</a>. That gives you a complete abstraction which also is testable.)</em></p>\n', '70386', '', '70386', '', '2014-07-10 08:24:12', '2014-07-10 08:24:12', '', '', 0, 24, '', '', ''),
(17473500, 2, '', '14110890', '2013-07-04 15:04:02', 10, 0, '<p>IMO both the <code>Repository</code> abstraction and the <code>UnitOfWork</code> abstraction have a very valuable place in any meaningful development. People will argue about implementation details, but just as there are many ways to skin a cat, there are many ways to implement an abstraction.</p>\n\n<p>Your question is specifically to use or not to use and why.</p>\n\n<p>As you have no doubt realised you already have both these patterns built into Entity Framework, <code>DbContext</code> is the <code>UnitOfWork</code> and <code>DbSet</code> is the <code>Repository</code>. You don’t generally need to unit test the <code>UnitOfWork</code> or <code>Repository</code> themselves as they are simply facilitating between your classes and the underlying data access implementations. What you will find yourself needing to do, again and again, is mock these two abstractions when unit testing the logic of your services. </p>\n\n<p>You can mock, fake or whatever with external libraries adding layers of code dependencies <strong>(that you don’t control)</strong> between the logic doing the testing and the logic being tested.</p>\n\n<p>So a minor point is that <strong>having your own abstraction for <code>UnitOfWork</code> and <code>Repository</code> gives you maximum control and flexibility when mocking your unit tests.</strong></p>\n\n<p>All very well, but for me, the real power of these abstractions is they provide a simple way to apply <strong>Aspect Oriented Programming techniques and adhere to the SOLID principles</strong>.</p>\n\n<p>So you have your <code>IRepository</code>:</p>\n\n<pre><code>public interface IRepository&lt;T&gt;\n    where T : class\n{\n    T Add(T entity);\n    void Delete(T entity);\n    IQueryable&lt;T&gt; AsQueryable();\n}\n</code></pre>\n\n<p>And its implementation:</p>\n\n<pre><code>public class Repository&lt;T&gt; : IRepository&lt;T&gt;\n    where T : class\n{\n    private readonly IDbSet&lt;T&gt; _dbSet;\n    public Repository(PPContext context) \n    {\n        _dbSet = context.Set&lt;T&gt;();\n    }\n\n    public T Add(T entity)\n    { \n        return _dbSet.Add(entity); \n    }\n\n    public void Delete(T entity)\n    {\n        _dbSet.Remove(entity); \n    }\n\n    public IQueryable&lt;T&gt; AsQueryable() \n    {\n        return _dbSet.AsQueryable();\n    }\n}\n</code></pre>\n\n<p>Nothing out of the ordinary so far but now we want to add some logging - easy with a logging <em>Decorator</em>.</p>\n\n<pre><code>public class RepositoryLoggerDecorator&lt;T&gt; : IRepository&lt;T&gt;\n    where T : class\n{\n    Logger logger = LogManager.GetCurrentClassLogger();\n    private readonly IRepository&lt;T&gt; _decorated;\n    public RepositoryLoggerDecorator(IRepository&lt;T&gt; decorated)\n    {\n        _decorated = decorated;\n    }\n\n    public T Add(T entity)\n    {\n        logger.Log(LogLevel.Debug, () =&gt; DateTime.Now.ToLongTimeString() );\n        T added = _decorated.Add(entity);\n        logger.Log(LogLevel.Debug, () =&gt; DateTime.Now.ToLongTimeString());\n        return added;\n    }\n\n    public void Delete(T entity)\n    {\n        logger.Log(LogLevel.Debug, () =&gt; DateTime.Now.ToLongTimeString());\n        _decorated.Delete(entity);\n        logger.Log(LogLevel.Debug, () =&gt; DateTime.Now.ToLongTimeString());\n    }\n\n    public IQueryable&lt;T&gt; AsQueryable()\n    {\n        return _decorated.AsQueryable();\n    }\n}\n</code></pre>\n\n<p>All done and <strong>with no change to our existing code</strong>. There are numerous other cross cutting concerns we can add, such as exception handling, data caching, data validation or whatever and throughout our design and build process <strong>the most valuable thing we have that enables us to add simple features without changing any of our existing code is our <code>IRepository</code> abstraction</strong>.</p>\n\n<p>Now, many times I have seen this question on StackOverflow – “how do you make Entity Framework work in a multi tenant environment?”.</p>\n\n<p><a href="http://stackoverflow.com/search?q=%5Bentity-framework%5D+multi+tenant">http://stackoverflow.com/search?q=%5Bentity-framework%5D+multi+tenant</a></p>\n\n<p>If you have a <code>Repository</code> abstraction then the answer is “it’s easy add a decorator”</p>\n\n<pre><code>public class RepositoryTennantFilterDecorator&lt;T&gt; : IRepository&lt;T&gt;\n    where T : class\n{\n    //public for Unit Test example\n    public readonly IRepository&lt;T&gt; _decorated;\n    public RepositoryTennantFilterDecorator(IRepository&lt;T&gt; decorated)\n    {\n        _decorated = decorated;\n    }\n\n    public T Add(T entity)\n    {\n        return _decorated.Add(entity);\n    }\n\n    public void Delete(T entity)\n    {\n        _decorated.Delete(entity);\n    }\n\n    public IQueryable&lt;T&gt; AsQueryable()\n    {\n        return _decorated.AsQueryable().Where(o =&gt; true);\n    }\n}\n</code></pre>\n\n<p>IMO you should always place a simple abstraction over any 3rd party component that will be referenced in more than a handful of places. From this perspective an ORM is the perfect candidate as it is referenced in so much of our code.</p>\n\n<p>The answer that normally comes to mind when someone says “why should I have an abstraction (e.g. <code>Repository</code>) over this or that 3rd party library” is “why wouldn’t you?”</p>\n\n<p>P.S. Decorators are extremely simple to apply using an IoC Container, such as <a href="http://simpleinjector.codeplex.com/">SimpleInjector</a>.</p>\n\n<pre><code>[TestFixture]\npublic class IRepositoryTesting\n{\n    [Test]\n    public void IRepository_ContainerRegisteredWithTwoDecorators_ReturnsDecoratedRepository()\n    {\n        Container container = new Container();\n        container.RegisterLifetimeScope&lt;PPContext&gt;();\n        container.RegisterOpenGeneric(\n            typeof(IRepository&lt;&gt;), \n            typeof(Repository&lt;&gt;));\n        container.RegisterDecorator(\n            typeof(IRepository&lt;&gt;), \n            typeof(RepositoryLoggerDecorator&lt;&gt;));\n        container.RegisterDecorator(\n            typeof(IRepository&lt;&gt;), \n            typeof(RepositoryTennantFilterDecorator&lt;&gt;));\n        container.Verify();\n\n        using (container.BeginLifetimeScope())\n        {\n            var result = container.GetInstance&lt;IRepository&lt;Image&gt;&gt;();\n\n            Assert.That(\n                result, \n                Is.InstanceOf(typeof(RepositoryTennantFilterDecorator&lt;Image&gt;)));\n            Assert.That(\n                (result as RepositoryTennantFilterDecorator&lt;Image&gt;)._decorated,\n                Is.InstanceOf(typeof(RepositoryLoggerDecorator&lt;Image&gt;)));\n        }\n    }\n}\n</code></pre>\n', '1515209', '', '1515209', '', '2013-07-04 17:56:16', '2013-07-04 17:56:16', '', '', 0, 0, '', '', ''),
(17522369, 2, '', '14110890', '2013-07-08 08:46:24', 8, 0, '<p>First of all, as suggested by some answer, EF itself is a repository pattern, there is no need to create further abstraction just to name it as repository.</p>\n\n<p><strong>Mockable Repository for Unit Tests, do we really need it?</strong></p>\n\n<p>We let EF communicate to test DB in unit tests to test our business logic straight against SQL test DB. I don''t see any benefit of having mock of any repository pattern at all. What is really wrong doing unit tests against test database?</p>\n\n<p><strong>Unnecessary Abstraction</strong></p>\n\n<p>Do you want to create repository just so that in future you can easily replace EF with NHbibernate etc or anything else? Sounds great plan, but is it really cost effective?</p>\n\n<p><strong>Linq kills unit tests?</strong></p>\n\n<p>I will like to see any examples on how it can kill.</p>\n\n<p><strong>Dependency Injection, IoC</strong></p>\n\n<p>Wow these are great words, sure they look great in theory, but sometimes you have to choose trade off between great design and great solution. We did use all of that, and we ended up throwing all at trash and choosing different approach. Size vs Speed (Size of code and Speed of development) matters huge in real life. Users need flexibility, they don''t care if your code is great in design in terms of DI or IoC.</p>\n\n<p><strong>Unless you are building Visual Studio</strong></p>\n\n<p>All these great design are needed if you are building a complex program like Visual Studio or Eclipse which will be developed by many people and it needs to be highly customizable. All great development pattern came into picture after years of development these IDEs has gone through, and they have evolved at place where all these great design patterns matter so much. But if you are doing simple web based payroll, or simple business app, it is better that you evolve in your development with time, instead of spending time to build it for million users where it will be only deployed for 100s of users.</p>\n\n<p><strong>Repository as Filtered View - ISecureRepository</strong></p>\n\n<p>On other side, repository should be a filtered view of EF which guards access to data by applying necessary filler based on current user/role.</p>\n\n<p>But doing so complicates repository even more as it ends up in huge code base to maintain. People end up creating different repositories for different user types or combination of entity types. Not only this, we also end up with lots of DTOs.</p>\n\n<p>Following answer is an example implementation of Filtered Repository without creating whole set of classes and methods. It may not answer question directly but it can be useful in deriving one.</p>\n\n<p>Disclaimer: I am author of Entity REST SDK.</p>\n\n<p><a href="http://entityrestsdk.codeplex.com">http://entityrestsdk.codeplex.com</a></p>\n\n<p>Keeping above in mind, we developed a SDK which creates repository of filtered view based on SecurityContext which holds filters for CRUD operations. And only two kinds of rules simplify any complex operations. First is access to entity, and other is Read/Write rule for property.</p>\n\n<p>The advantage is, that you do not rewrite business logic or repositories for different user types, you just simply block or grant them the access. </p>\n\n<pre><code>public class DefaultSecurityContext : BaseSecurityContext {\n\n  public static DefaultSecurityContext Instance = new DefaultSecurityContext();\n\n  // UserID for currently logged in User\n  public static long UserID{\n       get{\n             return long.Parse( HttpContext.Current.User.Identity.Name );\n       }\n  }\n\n  public DefaultSecurityContext(){\n  }\n\n  protected override void OnCreate(){\n\n        // User can access his own Account only\n        var acc = CreateRules&lt;Account&gt;();\n\n        acc.SetRead( y =&gt; x=&gt; x.AccountID == UserID ) ;\n        acc.SetWrite( y =&gt; x=&gt; x.AccountID == UserID );\n\n        // User can only modify AccountName and EmailAddress fields\n        acc.SetProperties( SecurityRules.ReadWrite, \n              x =&gt; x.AccountName,\n              x =&gt; x.EmailAddress);\n\n        // User can read AccountType field\n        acc.SetProperties&lt;Account&gt;( SecurityRules.Read, \n              x =&gt; x.AccountType);\n\n        // User can access his own Orders only\n        var order = CreateRules&lt;Order&gt;();\n        order.SetRead( y =&gt; x =&gt; x.CustomerID == UserID );\n\n        // User can modify Order only if OrderStatus is not complete\n        order.SetWrite( y =&gt; x =&gt; x.CustomerID == UserID \n            &amp;&amp; x.OrderStatus != "Complete" );\n\n        // User can only modify OrderNotes and OrderStatus\n        order.SetProperties( SecurityRules.ReadWrite, \n              x =&gt; x.OrderNotes,\n              x =&gt; x.OrderStatus );\n\n        // User can not delete orders\n        order.SetDelete(order.NotSupportedRule);\n  }\n}\n</code></pre>\n\n<p>These LINQ Rules are evaluated against Database in SaveChanges method for every operation, and these Rules act as Firewall infront of Database.</p>\n', '85597', '', '85597', '', '2013-09-07 16:34:39', '2013-09-07 16:34:39', '', '', 0, 5, '', '', ''),
(20159814, 2, '', '14110890', '2013-11-23 07:31:36', 29, 0, '<p>I''ve gone down many paths and created many implementations of repositories on different projects and... I''ve thrown the towel in and given up on it, here''s why. </p>\n\n<p><strong>Coding for the exception</strong></p>\n\n<p>Do you code for the 1% chance your database is going to change from one technology to another? If you''re thinking about your business''s future state and say yes that''s a possibility then a) they must have a lot of money to afford to do a migration to another DB technology or b) you''re choosing a DB technology for fun or c) something has gone horribly wrong with the first technology you decided to use.</p>\n\n<p><strong>Why throw away the rich LINQ syntax?</strong></p>\n\n<p>LINQ and EF were developed so you could do neat stuff with it to read and traverse object graphs. Creating and maintain a repository that can give you the same flexibility to do that is a monstrous task. In my experience any time I''ve created a repository I''ve <strong>ALWAYS</strong> had business logic leak into the repository layer to either make queries more perform-ant and/or reduce the number of hits to the database.</p>\n\n<p>I don''t want to create a method for every single permutation of a query that I have to write. I might as well write stored procedures. I don''t want GetOrder, GetOrderWithOrderItem, GetOrderWithOrderItemWithOrderActivity, GetOrderByUserId, and so on... I just want to get the main entity and traverse and include the object graph as I so please.</p>\n\n<p><strong>Most examples of repositories are bullshit</strong> </p>\n\n<p>Unless you are developing something REALLY bare-bones like a blog or something your queries are never going to be as simple as 90% of the examples you find on the internet surrounding the repository pattern. I cannot stress this enough! This is something that one has to crawl through the mud to figure out. There will always be that one query that breaks your perfectly thought out repository/solution that you''ve created, and its not until that point where you 2nd guess yourself and the technical debt/erosion begins.</p>\n\n<p><strong>Don''t unit test me bro</strong></p>\n\n<p>But what about unit testing if I don''t have a repository? How will I mock? Simple you don''t. Lets look at it from both angles:</p>\n\n<p>No repository - You can mock the DbContext using an IDbContext or some other tricks but then you''re really unit testing LINQ to Objects and not LINQ to Entities because the query is determined at runtime... OK so that''s not good! So now its up to the integration test to cover this.</p>\n\n<p>With repository - You can now mock your repositories and unit test the layer(s) in between. Great right? Well not really... In the cases above where you have to leak logic into the repository layer to make queries more perform-ant and/or less hits to the database, how can your unit tests cover that? It''s now in the repo layer and you don''t want to test IQueryable right? Also lets be honest, your unit tests aren''t going to cover the queries that have a 20 line <code>.Where()</code> clause and <code>.Include()</code>''s a bunch of relationships and hits the database again to do all this other stuff, blah, blah, blah anyway''s because the query is generated at runtime. Also since you created a repository to keep the upper layers persistence ignorant, if you now you want to change your database technology, sorry your unit tests are defiantly not going to guarantee the same results at runtime, back to integration tests. So the whole point of the repository seems weird..</p>\n\n<p><strong>2 cents</strong></p>\n\n<p>We already lose a lot of functionality and syntax when using EF over plain stored procedures (bulk inserts, bulk deletes, CTE''s, etc.) but I also code in C# so I don''t have to type binary. We use EF so we can have the possibility of using different providers and to work with object graphs in a nice related way amongst many things. Certain abstractions are useful and some are not.</p>\n\n<p>I hope this helps someone on the internets somewhere...</p>\n', '386739', '', '4296', '', '2015-01-30 02:02:48', '2015-01-30 02:02:48', '', '', 0, 6, '', '', ''),
(14185426, 2, '', '14111052', '2013-01-06 18:39:17', 27, 0, '<p><a href="http://forum.xda-developers.com/showthread.php?t=1985240">This xda-developers forum post</a> contains a step-by-step guide, which I''ve paraphrased here.</p>\n\n<p>Make sure your manifest contains the following somewhere inside the <code>&lt;application&gt;</code> tag:</p>\n\n<pre><code>&lt;uses-library android:required="false" android:name="com.sec.android.app.multiwindow" /&gt;\n&lt;meta-data android:name="com.sec.android.support.multiwindow" android:value="true" /&gt;\n&lt;meta-data android:name="com.sec.android.multiwindow.DEFAULT_SIZE_W" android:resource="@dimen/app_defaultsize_w" /&gt;\n&lt;meta-data android:name="com.sec.android.multiwindow.DEFAULT_SIZE_H" android:resource="@dimen/app_defaultsize_h" /&gt;\n&lt;meta-data android:name="com.sec.android.multiwindow.MINIMUM_SIZE_W" android:resource="@dimen/app_minimumsize_w" /&gt;\n&lt;meta-data android:name="com.sec.android.multiwindow.MINIMUM_SIZE_H" android:resource="@dimen/app_minimumsize_h" /&gt;\n</code></pre>\n\n<p>For the desired activity, add to its <code>&lt;intent-filter&gt;</code> tag:</p>\n\n<pre><code>&lt;category android:name="android.intent.category.MULTIWINDOW_LAUNCHER" /&gt;\n</code></pre>\n\n<p>Be sure to define the dimensions above in a resource file.</p>\n\n<p>In the comments section of that blog post a user mentions that the minimum size was causing a problem for him and suggested removing <code>com.sec.android.multiwindow.MINIMUM_SIZE_W</code> and <code>com.sec.android.multiwindow.MINIMUM_SIZE_H</code>.</p>\n\n<p><a href="http://www.modaco.com/page/news/_/android/developers-add-support-for-samsung-multi-window-to-your-apps-r823#comment_2068483">One user pointed out</a> that specifying the dimensions through a dimension resource didn''t work for him; he instead hardcoded the value attribute:</p>\n\n<pre><code>&lt;uses-library android:required="false" android:name="com.sec.android.app.multiwindow" /&gt;\n&lt;meta-data android:name="com.sec.android.multiwindow.DEFAULT_SIZE_W" android:value="632.0dip" /&gt;\n&lt;meta-data android:name="com.sec.android.multiwindow.DEFAULT_SIZE_H" android:value="598.0dip" /&gt;\n&lt;meta-data android:name="com.sec.android.multiwindow.MINIMUM_SIZE_W" android:value="632.0dip" /&gt;\n&lt;meta-data android:name="com.sec.android.multiwindow.MINIMUM_SIZE_H" android:value="598.0dip" /&gt;\n</code></pre>\n\n<p>I''m afraid I can''t try myself as I don''t have a Galaxy Note.</p>\n', '154306', '', '154306', '', '2014-04-19 14:19:40', '2014-04-19 14:19:40', '', '', 0, 12, '', '', ''),
(19648025, 2, '', '14111052', '2013-10-29 01:19:18', 2, 0, '<p>After testing my application on Galaxy Note 3 I found out two more things:</p>\n\n<p><code>MINIMUM_SIZE</code> and <code>DEFAULT_SIZE</code> only works on MultiWindow for Samsung tablets, not in smartphones.</p>\n\n<p>Also if you want to enable Multi-Instance in your application add this line to your AndroidManifest:</p>\n\n<pre><code>&lt;meta-data\n            android:name="com.samsung.android.sdk.multiwindow.multiinstance.enable"\n            android:value="true" /&gt;\n</code></pre>\n', '710274', '', '', '', '', '2013-10-29 01:19:18', '', '', 0, 0, '', '', ''),
(26353936, 2, '', '14111052', '2014-10-14 06:22:19', 0, 0, '<p>Also worth noting is enabling Pen Window (part of the multi-window system) for your app, along side Multi-Window and Multi-Instance as noted here (<a href="http://forum.xda-developers.com/showthread.php?t=2499720" rel="nofollow">http://forum.xda-developers.com/showthread.php?t=2499720</a>):</p>\n\n<pre><code>&lt;meta-data android:name="com.samsung.android.sdk.multiwindow.penwindow.enable" android:value="true" /&gt;\n</code></pre>\n\n<p>and add the Launcher code to your activity:</p>\n\n<pre><code>&lt;category android:name="android.intent.category.PENWINDOW_LAUNCHER" /&gt;\n</code></pre>\n\n<p>As a note to the launcher code, the xda post has it listed with a <code>com.samsung</code> prefix, but I couldn''t get it to work on my N3 as described there (I used the modified code above). In the Pen Window, you''ll have to hit edit and drag your app from the bottom into the Pen Window Launcher screen before you can use it.</p>\n', '1544046', '', '', '', '', '2014-10-14 06:22:19', '', '', 0, 0, '', '', ''),
(14112752, 2, '', '14111572', '2013-01-01 17:51:21', 19, 0, '<p>great question - but unfortunately only a lame answer.  I don''t believe that it is currently possible to do what you propose because there are no initializers in UIStoryboard that allow overriding the view controller associated with the storyboard as defined in the object details in the storyboard on initialization.  It''s at initialization that all the UI elements in the stoaryboard are linked up to their properties in the view controller.</p>\n\n<p>It will by default initialize with the view controller that is specified in the storyboard definition.</p>\n\n<p>If you are trying to gain reuse of UI elements you created in the storyboard, they still must be linked or associated to properties in which ever view controller is using them for them to be able to "tell" the view controller about events.</p>\n\n<p>It''s not that much of a big deal copying over a storyboard layout especially if you only need a similar design for 3 views, however if you do, you must make sure that all the previous associations are cleared, or it will get crashes when it tries to communicate to the previous view controller.  You will be able to recognize them as KVO error messages in the log output.</p>\n\n<p>A couple of approaches you could take:</p>\n\n<ul>\n<li><p>store the UI elements in a UIView - in a xib file and instantiate it from your base class and add it as a sub view in the main view, typically self.view.  The you would simply use the storyboard layout with basically blank view controllers holding their place in the storyboard but with the correct view controller sub class assigned to them.  Since they would inherit from the base, they would get that view.</p></li>\n<li><p>create the layout in code and install it from your base view controller. Obviously this approach defeats the purpose of using the storyboard, but may be the way to go in your case.  If you have other parts of the app that would benefit from the storyboard approach, it''s ok to  deviate here and there if appropriate.  In this case, like above, you would just use bank view controllers with your subclass assigned and let the base view controller install the UI.</p></li>\n</ul>\n\n<p>It would be nice if Apple came up with a way to do what you propose, but the issue of having the graphic elements pre-linked with the controller subclass would still be an issue.</p>\n\n<p>have a great New Year!!\nbe well</p>\n', '1168440', '', '', '', '', '2013-01-01 17:51:21', '', '', 0, 6, '', '', ''),
(14111641, 2, '', '14111607', '2013-01-01 15:24:46', -2, 0, '<p><code>MappedBy</code> attribute tells hibernate that the key for the relation is on the different side.</p>\n\n<p>It means that when you link the two tables, only one of those has a foreign key constraint to the other. <code>MappedBy</code> allows you to link from the table not having the constraint to the other one.</p>\n', '1244442', '', '', '', '', '2013-01-01 15:24:46', '', '', 0, 0, '', '', ''),
(14111651, 2, '', '14111607', '2013-01-01 15:26:35', 14, 0, '<p><a href="http://docs.jboss.org/hibernate/core/3.6/reference/en-US/html_single/#collections-bidirectional">The documentation</a> says:</p>\n\n<blockquote>\n  <p>If the association is bidirectional, one side has to be the owner and one side has to be the inverse end (ie. it will be ignored when updating the relationship values in the association table):</p>\n</blockquote>\n\n<p>So, the side which has the <code>mappedBy</code> attribute is the inverse side. The side which doesn''t have the <code>mappedBy</code> attribute is the owner. </p>\n\n<p>The owner side is the side which Hibernate looks at to know which association exists. So, for example, if you add a Foo the the set of foos of a Bar, a new row whill be inserted by Hibernate in the join table. If, on the contrary, you add a Bar to the set of bars of a Foo, nothing will be modified in the database.</p>\n', '571407', '', '', '', '', '2013-01-01 15:26:35', '', '', 0, 4, '', '', ''),
(14111670, 2, '', '14111607', '2013-01-01 15:28:29', 0, 0, '<p><code>mappedBy</code> tells Hibernate which side of the relationship "owns" the link.  In <code>OneToMany</code> or <code>OneToOne</code>, using <code>mappyedBy</code> tells Hibernate that there will be a foreign key in the other table which will be used to store the link.</p>\n\n<p>When it comes to <code>ManyToMany</code>, there is a join table, so neither directly has the link to the other object.  However, hibernate still needs to know which is the "owning" side to that is knows how to cascade operations.</p>\n', '1315397', '', '', '', '', '2013-01-01 15:28:29', '', '', 0, 1, '', '', ''),
(14974234, 2, '', '14111677', '2013-02-20 07:12:54', 1, 0, '<p>That answer does not solve the problem, only makes the symptoms go away. \nTry disabling host GPU in the Emulator options, it fixed the problem for me.</p>\n', '2090107', '', '', '', '', '2013-02-20 07:12:54', '', '', 0, 1, '', '', ''),
(14111686, 2, '', '14111679', '2013-01-01 15:30:37', 24, 0, '<p>If an object method is being executed, it means someone is in possession of that reference.  So no, an object can''t be GC''d while a method is being executed.</p>\n', '37213', '', '', '', '', '2013-01-01 15:30:37', '', '', 0, 5, '', '', ''),
(14112003, 2, '', '14111679', '2013-01-01 16:17:12', 2, 0, '<p>For the most part garbage collection is transparent. It''s there to remove the unnecessary complication of manual memory management. So, it will appear not to be collected, but what actually happens is more subtle.</p>\n\n<p>Trivially, a compiler may completely elide the construction of the object. (By compiler, I mean a lower level compiler than javac. The bytecodes will be a literal transliteration of the source.) More obscurely, garbage collection typically runs in separate threads and actually remove the unaccessed object as a method on it is being run.</p>\n\n<p>How can this be observed? The usual suspect in a finaliser. It may run concurrently with a method running on the object. Typically you would get around this problem with <code>synchronized</code> blocks in both the finaliser and the normal methods, which introduces the necessary <em>happens-before</em> relationship.</p>\n', '4725', '', '', '', '', '2013-01-01 16:17:12', '', '', 0, 0, '', '', ''),
(14112585, 2, '', '14111679', '2013-01-01 17:30:43', 2, 0, '<p>m is just a variable which has reference stored. This will be used by programmer to use the same object further to write logic on same object. </p>\n\n<p>While execution, program will be converted to OP-CODES / INSTRUCTIONS .\nThese INSTRUCTION will have the reference to object(it is a memory location after all). \nIn case m is present, location of object will be accessed via INDIRECT REFERENCE.\nIf m is absent, the reference is DIRECT. </p>\n\n<p>So here, object is being used by CPU registers, irrespective of use of reference variable. </p>\n\n<p>This will be available till the flow of execution is in scope of main() function. </p>\n\n<p>Further, as per GC process, GC only removes objects from memory, once GC is sure that the object will not be used any further. </p>\n\n<p>Every object is given chance to survive a number of times(depends on situation and algorithm). Once the number of chances are over, then only object is garbage collected. </p>\n\n<p>In simpler words, objects which were used recently, will be given chance to stay in memory. \nOld objects will be removed from memory.</p>\n\n<p>So given your code: </p>\n\n<pre><code>public class Main {\n\npublic void run() {\n    // ...\n}\n\npublic static void main(String[] args) {\n    new Main().run();\n}\n}\n</code></pre>\n\n<p>the object will not be garbage collected. </p>\n\n<p>Also, for examples, try to look at anonymous class examples. Or examples from event handling in AWT / SWING. </p>\n\n<p>There, you will find a lot of usage like this. </p>\n', '1865233', '', '1865233', '', '2013-01-01 17:41:55', '2013-01-01 17:41:55', '', '', 0, 0, '', '', ''),
(14112064, 2, '', '14111831', '2013-01-01 16:25:01', -3, 0, '<p>PDF is not a lightweight format. It is basically postscript with compression on top. An existing library is <em>definitely</em> what you want to use, not write your own. It''s a huge task.</p>\n\n<p>Or get an existing PDF writer application, and start it from within your program.</p>\n\n<p>I haven''t looked at it very much, but <a href="http://www.gnupdf.org/" rel="nofollow">libgnupdf</a> looks OK.</p>\n\n<p>According to <a href="http://en.wikipedia.org/wiki/Portable_Document_Format" rel="nofollow">Wikipedia</a> PDF combines three technologies:</p>\n\n<blockquote>\n  <ul>\n  <li>A subset of the PostScript page description programming language,\n  for generating the layout and graphics.</li>\n  <li>A font-embedding/replacement system to allow fonts to travel with the documents.</li>\n  <li>A structured storage system to bundle these elements and any associated content into a single file, with data compression where appropriate.</li>\n  </ul>\n</blockquote>\n', '1919155', '', '2157640', '', '2015-01-19 22:40:03', '2015-01-19 22:40:03', '', '', 0, 10, '', '', ''),
(14115129, 2, '', '14111831', '2013-01-01 23:12:37', 9, 0, '<p>You can actually use both sources you mentioned; the confusion is historical.</p>\n\n<p>Adobe invented PDF and it invented the Acrobat product family to be used together with it. The different PDF versions were released together with major Acrobat versions (PDF 1.3 for example was released together with Acrobat 4).</p>\n\n<p>Because of the adoption of the PDF format and because a number of ISO standards were written that actually depended on the proprietary PDF file format (not an easy thing for an ISO standard), Adobe decided to hand over the PDF format to ISO.</p>\n\n<p>From that point on and until today there is an ISO committee responsible for editing the PDF specification and coming up with new versions. The ISO standard for PDF is ISO 32000.</p>\n\n<p>Also, keep in mind that, depending on where you want to use PDF, a number of other ISO standards might be very useful or indispensable. Amongst the most commonly used are PDF/X (for exchange of PDF files in the publishing community) and PDF/A (for the creation of PDF files that need to be archived in long-term storage). These specifications reference a specific version of the PDF standard and add additional requirements and restrictions.</p>\n\n<p>As far as the specification is concerned, you can get all documents from the ISO directly. However, for PDF itself you can also get it from Adobe and that document will be identical. Refer to the Adobe DevNet site on Acrobat:</p>\n\n<p><a href="http://www.adobe.com/devnet/acrobat.html">http://www.adobe.com/devnet/acrobat.html</a></p>\n\n<p>Just download the Acrobat SDK and that will give you the documentation as part of it.</p>\n\n<p>Let me add a word of caution on "targeting the PDF specification" in code. I really, really, really advise you to more clearly specify exactly what your needs are for PDF (editing, generating, quality control (preflight)) and then look for or ask about an existing library that meets those needs or can be extended to meet your needs.</p>\n\n<p>Writing something that supports "PDF" in general will be a daunting task. The PDF specification is large, intricate and full of... well... niceties. There be dragons!</p>\n\n<hr>\n\n<p><strong>Update:</strong></p>\n\n<p>Direct link to Adobe''s PDF-1.7 specification document (first edition, free to download, is here:</p>\n\n<ul>\n<li><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/PDF32000_2008.pdf"><strong>Document management — Portable document format — Part 1: PDF 1.7</strong></a></li>\n</ul>\n\n<p>The content of this document later became officially adopted as the ISO standard for general PDF, ISO 32000-1.</p>\n\n<p>Note however, that there are a few differences to the PDF file available from ISO:</p>\n\n<ul>\n<li>The page layout changed, compared to Adobe''s version.</li>\n<li>ISO documents are not available for free (this one <a href="http://www.iso.org/iso/catalogue_detail.htm?csnumber=51502">costs you in Swiss Francs CHF 238.-</a> to download).</li>\n</ul>\n\n<p>If you start developing PDF software, it is sufficient to have (free) PDF from above Adobe link around.</p>\n', '1682924', '', '359307', '', '2013-01-05 14:44:53', '2013-01-05 14:44:53', '', '', 0, 0, '', '', ''),
(14112532, 2, '', '14112515', '2013-01-01 17:25:02', 59, 0, '<h2>Why does it happen?</h2>\n\n<p><a href="http://docs.oracle.com/javase/specs/jls/se7/html/jls-14.html">Java Language Specification</a> says that:</p>\n\n<blockquote>\n  <p><strong>The Empty Statement</strong></p>\n  \n  <p>An empty statement does nothing. </p>\n\n<pre><code>EmptyStatement:\n    ;\n</code></pre>\n  \n  <p>Execution of an empty statement always completes normally</p>\n</blockquote>\n\n<p>It essentially means that you want to execute empty statement if a==b </p>\n\n<pre><code>if(a == b);\n</code></pre>\n\n<h2>What should you do:</h2>\n\n<p>There are two main solutions to this problem:</p>\n\n<ol>\n<li><p>You can avoid problems with empty statement by using code formatter\nand surrounding stuff inside <code>if</code> with <code>{</code> and <code>}</code>. By doing this\nYour empty statement will be much more readable.</p>\n\n<pre><code>if(a == b){\n  ;\n}\n</code></pre></li>\n<li><p>You can also check tools used for static code analysis such as:</p>\n\n<p><img src="http://i.stack.imgur.com/z98da.png" alt=""></p>\n\n<ul>\n<li><a href="http://findbugs.sourceforge.net/">Findbugs</a> </li>\n<li><a href="http://checkstyle.sourceforge.net/">Checkstyle</a></li>\n<li><a href="http://pmd.sourceforge.net/">Pmd</a></li>\n</ul>\n\n<p>They can instantly highlight problems such as this one.</p></li>\n</ol>\n\n<p>I would recommend to combine both solutions. </p>\n', '1911306', '', '1911306', '', '2013-06-04 10:02:23', '2013-06-04 10:02:23', '', '', 0, 5, '', '', ''),
(14112533, 2, '', '14112515', '2013-01-01 17:25:25', 4, 0, '<p>I can''t think of an occasion where it is useful.  It can be useful for loops like</p>\n\n<pre><code> while(do something);\n</code></pre>\n\n<p>or</p>\n\n<pre><code> for(init; do something; something else);\n</code></pre>\n\n<p>If you use your code formatting in your IDE regularly these sort of bugs become obvious. Some IDEs highlight this as a probable bug as well.</p>\n', '57695', '', '', '', '', '2013-01-01 17:25:25', '', '', 0, 0, '', '', ''),
(14112534, 2, '', '14112515', '2013-01-01 17:25:38', 20, 0, '<blockquote>\n  <p>Is there any situation in which this would be useful?</p>\n</blockquote>\n\n<p>Useful? As in "makes your code cleaner, clearer, faster, more maintainable"? Not at all. This is most likely <em>poor, confusing code</em>.</p>\n\n<p><em>But it''s not necessarily benign</em>. Such a statement can perform actions and/or alter state due to methods which cause side effects, and optionally evaluate those methods due to <a href="http://en.wikipedia.org/wiki/Short-circuit_evaluation">short-circuiting of operators</a>.</p>\n\n<pre><code>if( a() &amp;&amp; b() );\n</code></pre>\n\n<p>Here, <code>a()</code> or <code>b()</code> may do something, and <code>b()</code> will only execute if <code>a()</code> is true.</p>\n\n<p>As to <em>why</em>, I think the answer is simply that it would be worse to deviate from defined, expected behavior (e.g. statements like <code>while(reader.read());</code>) than the alternative of developers writing bad code. </p>\n\n<p>Writing bad code is always possible. And just to reiterate, this would be bad code in almost any case.</p>\n', '453277', '', '453277', '', '2013-01-02 16:07:06', '2013-01-02 16:07:06', '', '', 0, 9, '', '', ''),
(14112545, 2, '', '14112515', '2013-01-01 17:26:43', 0, 0, '<pre><code>if(a==b)\n    println("a equals b");\n</code></pre>\n\n<p>You can use an IF statement without <code>{}</code> if there is only a single line to be executed, so by using <code>if(a==b);</code> you are saying if they equal, execute and empty statement... So it will do nothing, and then return to your normal loop, outside of the IF block.</p>\n', '1790644', '', '1790644', '', '2013-01-01 18:20:30', '2013-01-01 18:20:30', '', '', 0, 1, '', '', ''),
(14112549, 2, '', '14112515', '2013-01-01 17:27:15', 5, 0, '<p>If you use an <code>if</code> statement, the first statement after the <code>if</code> will be executed if the condition is true. If you have a block after the <code>if</code> (with curly braces), it counts for that whole block. If there is no block it counts for only one statement. A single semicolon is an empty statement. You could also write the code from you example like this:</p>\n\n<pre><code>if(a==b) {\n    ;\n}\n</code></pre>\n', '896588', '', '', '', '', '2013-01-01 17:27:15', '', '', 0, 1, '', '', ''),
(14112555, 2, '', '14112515', '2013-01-01 17:27:41', 4, 0, '<p>I''d agree with you there''s no useful purpose to this for a human. I suspect it''s there because it simplifies the language definition; it means that the thing that comes after an <code>if</code> is e same as the thing that comes after a <code>while</code>, for instance.</p>\n', '1076640', '', '', '', '', '2013-01-01 17:27:41', '', '', 0, 0, '', '', ''),
(14112582, 2, '', '14112515', '2013-01-01 17:30:25', 15, 0, '<p>a possible use case:</p>\n\n<pre><code>if (a==b);\nelse {\n  // do something\n}\n</code></pre>\n\n<p>not good, but possible.</p>\n\n<p>Still, I do think that Java Spec should disallow empty <code>if</code></p>\n', '1180720', '', '', '', '', '2013-01-01 17:30:25', '', '', 0, 6, '', '', ''),
(14114725, 2, '', '14112515', '2013-01-01 22:13:40', 6, 0, '<p>It is an old leftover from the days when there was more syntactic sugar to differentiate expressions from statements.</p>\n\n<p>Basically, the comma was used as the list item separator, so the semicolon was used as the "list of statements" separator.  The downside is in the handling of null items in lists, and null statements in blocks.</p>\n\n<p>In a list of items, Java uses the explicit keyword <code>null</code>, but a "null statement" is just an empty line.  Allowing the existence of an empty line is a holdover from tradition inherited from C.</p>\n\n<p>Why do it?  Especially with an <code>if</code> statement when you know that no statements are being executed:  Because some if statements have side effects:</p>\n\n<pre><code> int c;\n if ((c = in.read()) != -1);\n</code></pre>\n\n<p>Yes, it is not the best example, but basically it says read a byte from the stream and do nothing.  Might be useful in some corner cases, but even if this example isn''t the best, it illustrates the intent.  We want to feel the side-effects of the expression without accidentally executing any statements.</p>\n', '302139', '', '', '', '', '2013-01-01 22:13:40', '', '', 0, 0, '', '', ''),
(14115042, 2, '', '14112515', '2013-01-01 23:02:28', 0, 0, '<p>Java allows an empty block any place a statement block is allowed.  I am sure making this a general rule for all blocks simplifies the compiler.</p>\n\n<p>I agree that this is primarily the cause of bugs that are spectacularly hard to find.  I always use braces around blocks, even when there is a single statement, but Java allows you to make a block with braces at any point, so using braces can not save you from this fate.  For example, I once wasted 4 hours trying find something like this:</p>\n\n<pre><code>while (condition);\n{\n    statement;\n    statement;\n}\n</code></pre>\n\n<p>The semicolon at the end of the first line was a typo, accidentally making the statement block for the while loop empty.  Because the syntax is valid the program compiled and ran fine, just not the way I wanted it to.  It was <em>really</em> hard to find.</p>\n\n<p>I can think of one situation where it is <em>very nice</em> that you are allowed to have empty blocks, and this is something like this:</p>\n\n<pre><code>if (condition1) {\n    do_action_1();\n}\nelse if (condition2) {\n    //nothing really to do in this case\n}\nelse if (condition3) {\n    do_action2();\n}\nelse {\n    do_action3();\n}\n</code></pre>\n\n<p>In the above example, you want to be able to separate out various conditions.  Remember, those conditions might be overlapping, so it is not always possible to rearrange the order.  If one of the conditions really does not need anything done, then it is nice that Java allows you to have an empty block.  Otherwise, the language would need some form of a "noop" method to use when you really do not want anything done.  </p>\n\n<p>I personally would prefer the explicit "noop" statement -- but that is not how Java is defined.</p>\n', '1758051', '', '', '', '', '2013-01-01 23:02:28', '', '', 0, 0, '', '', ''),
(14115300, 2, '', '14112515', '2013-01-01 23:40:36', 0, 0, '<p>Semicolon at the end of,<br>\nif(a==b);  simply finish the statement in single line which means ignore the result of condition and continue the execution from the next line<br>\nThis code is useful, on the other hand sometime introduce bug in program, for example,<br>\n <br>case 1.<br><br>\n a = 5;<br>\n b = 3;<br>\n if(a == b);<br>\nprinf("a and b are equal");<br>\n<br>case 2.<br><br>\n a = 5;<br>\n b = 5;<br>\n if(a == b);<br>\nprinf("a and b are equal");<br>\nwould print the same output on the screen...</p>\n', '1431814', '', '', '', '', '2013-01-01 23:40:36', '', '', 0, 2, '', '', ''),
(14115406, 2, '', '14112515', '2013-01-01 23:57:55', 3, 0, '<p>Why? Its because its easier for compiler writers. You don''t have to make a special case to check for semicolons after <code>if(cond)</code> and has an added usage of allowing </p>\n\n<pre><code>if (cond &amp;&amp; maybeFunc())\n    ;//code here i want to ignore\n</code></pre>\n\n<p>Even tho its actually a terrible idea to allow this. Its just easier to allow then to add a case to check this.</p>\n', '34537', '', '', '', '', '2013-01-01 23:57:55', '', '', 0, 1, '', '', ''),
(14118958, 2, '', '14112515', '2013-01-02 08:31:42', 0, 0, '<p>I can think of a scenario where an empty statement is required (not for <code>if</code> condition but for <code>while</code> loop). </p>\n\n<p>When a program just want an explicit confirmation from the user to proceed. This may be required when the work after the user confirmation depends on some other things and user want to take control of when to proceed.</p>\n\n<pre><code>    System.out.println("Enter Y to proceed. Waiting...");\n    System.out.println("");\n\n    while(!(new Scanner(System.in).next().equalsIgnoreCase("Y")));\n\n    System.out.println("Proceeding...");\n    // do the work here\n</code></pre>\n', '1780772', '', '', '', '', '2013-01-02 08:31:42', '', '', 0, 0, '', '', ''),
(14120652, 2, '', '14112515', '2013-01-02 10:44:42', 1, 0, '<p>Hey just a FYI about the usability and <strong><em>what difference it makes or can make if there is a statement like that</em></strong></p>\n\n<p>Consider a piece of code like following</p>\n\n<pre><code>int a=10;\nif((a=50)==50);\n\nSystem.out.println("Value of a = " +a);\n</code></pre>\n\n<p>Clearly in this case, the if statement does change the output. So a statement like that can make a difference. </p>\n\n<p>this is a situation where this could be useful or better to say have an impact on program</p>\n', '1423083', '', '1423083', '', '2013-01-02 10:54:50', '2013-01-02 10:54:50', '', '', 0, 0, '', '', ''),
(16429394, 2, '', '14112515', '2013-05-07 22:09:53', 4, 0, '<p>If you''re using Eclipse, you can make it warn you about those statements:</p>\n\n<p><img src="http://i.stack.imgur.com/omD3o.png" alt="Java-&gt;Compiler-&gt;Errors/Warnings"></p>\n', '2036372', '', '', '', '', '2013-05-07 22:09:53', '', '', 0, 0, '', '', '');
INSERT INTO `Posts` (`Id`, `PostTypeId`, `AcceptedAnswerId`, `ParentId`, `CreationDate`, `Score`, `ViewCount`, `Body`, `OwnerUserId`, `OwnerDisplayName`, `LastEditorUserId`, `LastEditorDisplayName`, `LastEditDate`, `LastActivityDate`, `Title`, `Tags`, `AnswerCount`, `CommentCount`, `FavoriteCount`, `ClosedDate`, `CommunityOwnedDate`) VALUES
(14112929, 2, '', '14112839', '2013-01-01 18:11:16', 16, 0, '<p>They discourage them for several reasons:</p>\n\n<ul>\n<li>they''re cumbersome to use. Each time you need to reference an object (or row), for eexample in your web application, you need to pass 3 parameters instead of just one.</li>\n<li>they''re inefficient. Instead of simply hashing an integer, the database needs to hash a composite of 3 columns.</li>\n<li>they lead to bugs: developers inevitably implement the equals and hashCode methods of the primary key class incorrectly. Or they make it mutable, and modify their value once stored i a HashSet or HashMap</li>\n<li>they pollute the schema. If another table needs to reference this 3-column table, it will need to have a 3 columns instead of just one as a foreign key. Now suppose you follow the same design and make this 3-column foreign key part of the primary key of this new table, you''ll quickly have a 4-column primary key, and then a 5-column PK in the next table, etc. etc., leading to duplication of data, and a dirty schema.</li>\n</ul>\n\n<p>The alternative is to have a single-column, auto-generated primary key, in addition to the other three columns. If you want to make the tuple of three columns unique, then use a unique constraint.</p>\n', '571407', '', '', '', '', '2013-01-01 18:11:16', '', '', 0, 8, '', '', ''),
(14113076, 2, '', '14112839', '2013-01-01 18:29:54', 8, 0, '<p>I would consider the problem from a design point of view. It''s not just if Hibernate considers them good or bad. The real question is: <em>are natural keys good candidates to be good identifiers for my data?</em></p>\n\n<p>In your business model, today it can be convenient to identify a record by some of its data, but business models evolves in time. And when this happens, you''ll find that your natural key doesn''t fit anymore to uniquely identify your data. And with referential integrity in other tables, this will make things <strong>MUCH</strong> harder to change.</p>\n\n<p>Having a surrogate PK is convenient because it doesn''t chain <em>how your data is identified in your storage</em> with <em>your business model structure</em>.</p>\n\n<p>Natural keys cannot be generated from a sequence, and the case of data which cannot be identified by its data is <em>much</em> more frequent. This is an evidence that natural keys differ from a storage key, and they cannot be taken as a general (and good) approach.</p>\n\n<p>Using surrogate keys simplifies the design of the application and database. They are easier to use, are more performant, and do a perfect job. </p>\n\n<p>Natural keys bring only disadvantages: I cannot think of a single advantage for using natural keys.</p>\n\n<p>That said, I think hibernate has no real issues with natural (composed) keys. But you''ll probably find some problems (or bugs) sometimes, and issues with the documentation or trying to get help, because the hibernate community widely acknowledges the benefits of surrogate keys. So, prepare a good answer for <em>why you did choose a composite key</em>.</p>\n', '258289', '', '217324', '', '2013-12-27 16:04:00', '2013-12-27 16:04:00', '', '', 0, 1, '', '', ''),
(20803639, 2, '', '14112839', '2013-12-27 15:56:48', 11, 0, '<p>Even if it is - maybe - too late to answer your question, I want here to give another point of view (more moderate I hope) on the need (Is it really an advise ?) of Hibernate to use surrogate keys.</p>\n\n<p><strong>First of all</strong>, I want to be clear on the fact that <strong>both</strong> surrogate keys (artificial auto-generated ones) and natural keys (composed of column(s) with domain meaning) have <strong>pros</strong> and <strong>cons</strong>. I am not trying to say that one key type is better than the other. I am tying to say that depending on your requirements, natural keys might be a better choice than surrogate ones and vice versa.</p>\n\n<h1>Myths on natural keys</h1>\n\n<ol>\n<li>Composite keys are less efficient than surrogate keys. No! It depends on the used database engine:\n<ul>\n<li><a href="http://asktom.oracle.com/pls/asktom/f?p=100:11:0%3a%3a%3a%3aP11_QUESTION_ID:6070436300346195032">Oracle</a></li>\n<li><a href="http://stackoverflow.com/questions/1460465/composite-primary-key-performance-drawback-in-mysql">MySQL</a></li>\n</ul></li>\n<li>Natural keys don''t exist in real-life. Sorry but they do exist! In aviation industry, for example, the following tuple will be always unique regarding a given <strong>scheduled</strong> flight (airline, departureDate, flightNumber, operationalSuffix). More generally, when a set of business data is guaranteed to be unique by a given <strong>standard</strong> then this set of data is a [good] natural key candidate.</li>\n<li>Natural keys "pollute the schema" of child tables. For me this is more a feeling than a real problem. Having a 4 columns primary-key of 2 bytes each might be more efficient than a single column of 11 bytes. Besides, the 4 columns can be used to query the child table directly (by using the 4 columns in a where clause) without joining to the parent table.  </li>\n</ol>\n\n<h1>Disadvantages of surrogate keys</h1>\n\n<p>Surrogate keys are:</p>\n\n<ol>\n<li>Source of performance problems:\n<ul>\n<li>They are usually implemented using auto-incremented columns which mean:\n<ul>\n<li>A round-trip to the database each time you want to get a new Id (I know that this can be improved using caching or [seq]hilo alike algorithms but still those methods have their own drawbacks).</li>\n<li>If one-day you need to move your data from one schema to another (It happens quite regularly in my company at least) then you might encounter Id collision problems. And Yes I know that you can use UUIDs but those lasts requires 32 hexadecimal digits! (If you care about database size then it can be an issue).</li>\n<li>If you are using one sequence for all your surrogate keys then - for sure - you will end up with contention on your database.</li>\n</ul></li>\n</ul></li>\n<li>Error prone. A sequence has a max_value limit so - as a developer - you have to put attention to the following facts:\n<ul>\n<li>You must cycle your sequence ( when the max-value is reached it goes back to 1,2,...).</li>\n<li>If you are using the sequence as an ordering (over time) of your data then you must handle the case of cycling (column with Id 1 might be newer than row with Id max-value - 1).</li>\n<li>Make sure that your code (and even your client interfaces which should not happen as it supposed to be an internal Id) supports 32b/64b integers that you used to store your sequence values.  </li>\n</ul></li>\n<li>They don''t guarantee non duplicated data. You can always have 2 rows with all the same column values but with a different generated value. For me this is <strong>THE</strong> problem of surrogate keys from a database design point of view.</li>\n<li><a href="http://en.wikipedia.org/wiki/Surrogate_key">More in Wikipedia...</a></li>\n</ol>\n\n<h1>Why Hibernate prefers/needs surrogate keys ?</h1>\n\n<p>As stated in <strong>Java Persistence with Hibernate</strong> reference:</p>\n\n<blockquote>\n  <p>More experienced Hibernate users use saveOrUpdate() exclusively; it’s\n  much easier to let Hibernate decide what is new and what is old,\n  especially in a more complex network of objects with mixed state. The\n  only (not really serious) disadvantage of exclusive saveOrUpdate() is\n  that it sometimes can’t guess whether an instance is old or new\n  without firing a SELECT at the database—for example, when a class is\n  mapped with a natural composite key and no version or timestamp\n  property.</p>\n</blockquote>\n\n<p>Some manifestations of the <strong>limitation</strong> (This is how, I think, we should call it) can be found <a href="http://stackoverflow.com/questions/3742897/hibernate-elementcollection-strange-delete-insert-behavior">here</a>.</p>\n\n<h1>Conclusion</h1>\n\n<p>Please don''t be too squared on your opinions. Use natural keys when it is relevant to do so and use surrogate keys when it is better to use them.</p>\n\n<p>Hope that this helped someone!</p>\n', '3094941', '', '3094941', '', '2013-12-30 08:36:04', '2013-12-30 08:36:04', '', '', 0, 4, '', '', ''),
(27153393, 2, '', '14112839', '2014-11-26 15:49:57', 0, 0, '<p>Applications developed with the database as a tool are definitely more beneficial to keep work flow on surrogate keys, using clustered indices for query optimization.</p>\n\n<p>Special care does need to be made for Data Warehousing and OLAP style systems however, that utilize a massive Fact Table to tie surrogate keys of dimensions together.  In this case the data dictates the dashboard/application that can be used to maintain records.</p>\n\n<p>So instead of one method being preferable to another, perhaps it is one directive is advantageous to another, for key construction : You won''t be developing a Hibernate app very easily to harness direct access to an SSAS system instance.</p>\n\n<p>I develop using both key mixtures, and feel to implement a solid star or snowflake pattern a surrogate with clustered index is typically my first choice.</p>\n\n<p>So, to the regards of the OP and others looking by: if you want to stay db invariant with your development (which Hibernate specializes in) -- utilize the surrogate method, and when data reads tend to slow, or you notice certain queries drain performance, revert to your specific database, and add composite, clustered indices that optimize query order.</p>\n', '2769615', '', '', '', '', '2014-11-26 15:49:57', '', '', 0, 0, '', '', ''),
(14113102, 2, '', '14113057', '2013-01-01 18:33:21', 2, 0, '<p>Please have a look <a href="http://api.rubyonrails.org/classes/ActionView/Helpers/FormOptionsHelper.html#M001593" rel="nofollow">here</a></p>\n\n<p><em>Either you can use rails tag Or use plain HTML tags</em></p>\n\n<p><strong>Rails tag</strong></p>\n\n<pre><code>&lt;%= select("Contact", "email_provider", Contact::PROVIDERS, {:include_blank =&gt; true}) %&gt;\n</code></pre>\n\n<p>*<strong>above line of code would become HTML code(HTML Tag), find it below *</strong></p>\n\n<p><strong>HTML tag</strong></p>\n\n<pre><code>&lt;select name="Contact[email_provider]"&gt;\n  &lt;option&gt;&lt;/option&gt;\n  &lt;option&gt;yahoo&lt;/option&gt;\n  &lt;option&gt;gmail&lt;/option&gt;\n  &lt;option&gt;msn&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n', '1656986', '', '1656986', '', '2013-01-02 11:06:56', '2013-01-02 11:06:56', '', '', 0, 1, '', '', ''),
(14113150, 2, '', '14113057', '2013-01-01 18:39:29', 28, 0, '<p>You can take a look at <a href="http://api.rubyonrails.org/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-collection_select">the Rails documentation</a> . Anyways , in your form :</p>\n\n<pre><code>  &lt;%= f.collection_select :provider_id, Provider.order(:name),:id,:name, include_blank: true %&gt;\n</code></pre>\n\n<p>As you can guess , you should predefine email-providers in another model -<code>Provider</code> , to have where to select them from .  </p>\n', '646198', '', '646198', '', '2013-01-21 13:00:41', '2013-01-21 13:00:41', '', '', 0, 3, '', '', ''),
(14113596, 2, '', '14113057', '2013-01-01 19:42:08', 6, 0, '<p>You create the collection in the <code>Contact</code> controller - </p>\n\n<pre><code>app/controllers/contacts_controller.erb \n</code></pre>\n\n<p>Adding</p>\n\n<pre><code>@providers = Provider.all.by_name\n</code></pre>\n\n<p>to the new, create and edit methods, using a scope for the <code>by_name</code> in the <code>Provider</code> model - <code>app/models/provider.rb</code> - for the ordering by name</p>\n\n<pre><code>scope by_name  order(:name)\n</code></pre>\n\n<p>Then in the view - <code>app/views/contacts/_form.html.erb</code> - you use </p>\n\n<pre><code>&lt;%= f.collection_select :provider_id, @providers, :id, :name, include_blank: true %&gt;\n</code></pre>\n\n<p>For rails forms, I also strongly recommend you look at a form builder like simple_form - <a href="https://github.com/plataformatec/simple_form">https://github.com/plataformatec/simple_form</a> - which will do all the heavy lifting.</p>\n', '631619', '', '631619', '', '2013-01-01 21:04:08', '2013-01-01 21:04:08', '', '', 0, 1, '', '', ''),
(26413424, 2, '', '14113057', '2014-10-16 20:33:59', 0, 0, '<p>In your model,</p>\n\n<pre><code>class Contact\n  self.email_providers = %w[Gmail Yahoo MSN]\n  validates :email_provider, :inclusion =&gt; email_providers\nend\n</code></pre>\n\n<p>In your form, </p>\n\n<pre><code>&lt;%= f.select :email_provider, \n    options_for_select(Contact.email_providers, @contact.email_provider) %&gt;\n</code></pre>\n\n<p>the second arg of the options_for_select will have any current email_provider selected.</p>\n', '1408866', '', '', '', '', '2014-10-16 20:33:59', '', '', 0, 0, '', '', ''),
(14113421, 2, '', '14113278', '2013-01-01 19:18:18', 0, 0, '<p>A few years back (not exactly the stone age), I was using a signed java applet that would query its server for syncing/updating requirements, download appropriate files from the server and save them on the user''s filesystem (not a database). That solution might work for you, although you will need someone to write the applet and sign it. For database solutions, such an applet can use the jdbc available for most databases using localhost on a suitable port (e.g., 3306 for MySQL). I believe the applet tag is deprecated in Html5 but it still works. No experience on Android tablets, so can''t comment on that part.</p>\n', '580796', '', '', '', '', '2013-01-01 19:18:18', '', '', 0, 1, '', '', ''),
(14114450, 2, '', '14113278', '2013-01-01 21:38:12', 3, 0, '<p>For your requirements I suggest that developing a new polyfill based on two others: \n<em><a href="https://github.com/ebidel/idb.filesystem.js" rel="nofollow">FileSystem API to IndexedDB</a></em> and <em>IndexedDB to WebSQL</em> — is the best option. </p>\n\n<p>The former one will enable support for storing blobs in Chrome (FileSystem API) and Firefox (IndexedDB), while the latter should provide the support for Android and iOS (<a href="http://caniuse.com/sql-storage" rel="nofollow">WebSQL</a>). What is needed is just making these polyfills work together, and I suppose it''s not hard.</p>\n\n<p><strong>NB:</strong> Since I couldn''t find any information on the web about this, you should test if storing blobs using the WebSQL polyfill will work on iOS and Android. It looks like it should work though:</p>\n\n<pre><code>var sql = ["CREATE TABLE", idbModules.util.quote(storeName), "(key BLOB", createOptions.autoIncrement ? ", inc INTEGER PRIMARY KEY AUTOINCREMENT" : "PRIMARY KEY", ", value BLOB)"].join(" ")\n</code></pre>\n\n<p><a href="https://github.com/axemclion/IndexedDBShim/blob/master/src/IDBDatabase.js" rel="nofollow">Source</a></p>\n', '1737568', '', '', '', '', '2013-01-01 21:38:12', '', '', 0, 2, '', '', ''),
(14485464, 2, '', '14113278', '2013-01-23 17:14:04', 5, 0, '<p>Results Offline blob cache for PNG slippy maps</p>\n\n<p><strong>Testing</strong></p>\n\n<ul>\n<li>171 PNG files (total of 3.2MB)</li>\n<li>Platforms tested: Chrome v24, FireFox 18, IE 10</li>\n<li>Should also work with Chrome &amp; FF for Android</li>\n</ul>\n\n<p><strong>Fetch from web server</strong></p>\n\n<ul>\n<li>using XHR2 (supported on almost all browsers) for blob download from web server</li>\n<li>I went with XHR2-Lib by Phil Parsons, which is very much like JQUERY .ajax() \n<ul>\n<li><a href="https://github.com/p-m-p/xhr2-lib">https://github.com/p-m-p/xhr2-lib</a> </li>\n</ul></li>\n</ul>\n\n<p><strong>Storage</strong></p>\n\n<ul>\n<li>IndexedDB for IE and FireFox</li>\n<li>Chrome: Polyfill (blob stored using FileSystem API, reference kept in IndexedDB) polyfill</li>\n<li>A Must read article on "How the browsers store IndexedDB data"\n<ul>\n<li><a href="http://www.aaron-powell.com/web/indexeddb-storage">http://www.aaron-powell.com/web/indexeddb-storage</a></li>\n</ul></li>\n<li>Note: FireFox uses SQLlite for the NOSQL IndexedDB. That might be the reason for the slow performance. (blobs stored separately)</li>\n<li>Note: Microsoft IE uses the extensible storage engine: \n<ul>\n<li><a href="http://en.wikipedia.org/wiki/Extensible_Storage_Engine">http://en.wikipedia.org/wiki/Extensible_Storage_Engine</a></li>\n</ul></li>\n<li>Note: Chrome uses LevelDB <a href="http://code.google.com/p/leveldb/">http://code.google.com/p/leveldb/</a></li>\n</ul>\n\n<p><strong>Display</strong></p>\n\n<ul>\n<li>I am using Leaflet <a href="http://leafletjs.com/">http://leafletjs.com/</a> to show the map tiles</li>\n<li>I used the functional tile layer plugin by Ishmael Smyrnow for fetching the tile layer from the DB\n<ul>\n<li><a href="https://github.com/ismyrnow/Leaflet.functionaltilelayer">https://github.com/ismyrnow/Leaflet.functionaltilelayer</a></li>\n</ul></li>\n<li>I compared the DB-based tiles layer with a purely local (localhost://) storage</li>\n<li><strong>There is no noticeable difference in performance! between using IndexedDB and local files!</strong></li>\n</ul>\n\n<p><strong>Results</strong></p>\n\n<ul>\n<li>Chrome: Fetch (6.551s), Store (8.247s), Total Elapsed Time: (13.714s)</li>\n<li>FireFox: Fetch (0.422s), Store (31.519s), Total Elapsed Time: (32.836s)</li>\n<li>IE 10: Fetch (0.668s), Store: (0.896s), Total Elapsed Time: (3.758s)</li>\n</ul>\n', '959460', '', '959460', '', '2013-01-24 17:37:46', '2013-01-24 17:37:46', '', '', 0, 1, '', '', ''),
(16731477, 2, '', '14113278', '2013-05-24 09:16:45', 0, 0, '<p>I have map caching examples: <a href="https://github.com/tbicr/OfflineMap" rel="nofollow">https://github.com/tbicr/OfflineMap</a> (open example, discover regions and zooms, switch offline and discovered regions will availible).\nThere are <code>map.js</code> - map layer for offline tiles, <code>storage.js</code> - storage implementation based on IndexedDb and WebSQL (but this just test implementation with poor performance).</p>\n\n<ul>\n<li>For site files (html, css, js and etc.) I prefer use application cache.</li>\n<li>For storage I prefer use Indexed DB (support blob), Web SQL (only base64), FileWriter (support blob, but only chrome). Frankly storage is big issue for this. You need the fastest key value solution that will mix them all. I think is good decision to use exist solution.</li>\n<li>For fetching I used canvas with CORS. But I thinking about WebWorkers and XHR2 and this can be better instead canvas because canvas have some troubles with CORS in different browsers and other (for example <a href="http://tile.openstreetmap.org/14/9445/5267.png" rel="nofollow">this title</a> was stored <a href="http://habrastorage.org/storage2/d7a/129/0b9/d7a1290b9987e3703ce7f4c3f10d573e.png" rel="nofollow">bad in opera</a>).</li>\n</ul>\n\n<p>Additional information about sizes for 2 billion city (<a href="http://www.openstreetmap.org/index.html?lat=53.902&amp;lon=27.555&amp;zoom=11" rel="nofollow">Minsk</a>):</p>\n\n<ul>\n<li>Zoom - 9, tiles - 2, size - 52 kb, with previous - 52 kb;</li>\n<li>Zoom - 10, tiles - 3, size - 72 kb, with previous - 124 kb;</li>\n<li>Zoom - 11, tiles - 7, size - 204 kb, with previous - 328 kb;</li>\n<li>Zoom - 12, tiles - 17, size - 348 kb, with previous - 676 kb;</li>\n<li>Zoom - 13, tiles - 48, size - 820 kb, with previous -  1.5 mb;</li>\n<li>Zoom - 14, tiles - 158, size - 2.2 mb, with previous - 3.7 mb;</li>\n<li>Zoom - 15, tiles - 586, size - 5.5 mb, with previous - 9.3 mb;</li>\n<li>Zoom - 16, tiles - 2264, size - 15 mb, with previous - 24.3 mb;</li>\n</ul>\n', '880326', '', '880326', '', '2013-05-24 09:35:41', '2013-05-24 09:35:41', '', '', 0, 6, '', '', ''),
(18988240, 2, '', '14113278', '2013-09-24 17:30:06', 1, 0, '<p>This a very interesting thread and I''ve been asking to myself to very same questions! I''ve ended up by implementing the solution I''ve described here: <a href="http://blogs.msdn.com/b/davrous/archive/2013/09/24/using-indexeddb-to-handle-your-3d-webgl-assets-sharing-feedbacks-amp-tips-of-babylon-js.aspx" rel="nofollow">http://blogs.msdn.com/b/davrous/archive/2013/09/24/using-indexeddb-to-handle-your-3d-webgl-assets-sharing-feedbacks-amp-tips-of-babylon-js.aspx</a> for storing the textures and 3d meshes of our 3D WebL engine. I''m referecing this stackoverflow thread inside this article.</p>\n\n<p>I hope that this article will be useful to some of you and I hope that Chrome will soon support storing blob into IndexedDB. I didn''t really look to the available polyfills using FileSystem API. Did anybody try such polyfills?</p>\n\n<p>Bye,</p>\n\n<p>David</p>\n', '1090402', '', '', '', '', '2013-09-24 17:30:06', '', '', 0, 0, '', '', ''),
(14113461, 2, '', '14113427', '2013-01-01 19:23:17', 265, 0, '<p>You need to do the following:</p>\n\n<pre><code>cd $(brew --prefix)\nrm Library/Formula/argp-standalone.rb\nrm Library/Formula/cocot.rb\n</code></pre>\n\n<p>And then do the</p>\n\n<pre><code>git fetch origin\ngit reset --hard origin/master\nbrew update\n</code></pre>\n\n<p>Basically, to explain a bit more:</p>\n\n<pre><code>cd $(brew --prefix)\n</code></pre>\n\n<p>tells <code>cd</code> to change the directory to whatever <code>brew --prefix</code> will output. \nIf you try executing <code>brew --prefix</code> command you should see something in lines of:</p>\n\n<pre><code>brew --prefix\n/usr/local\n</code></pre>\n\n<p>So the command would be in this case an equivalent of <code>cd /usr/local</code>.\nNewer <code>brew</code> versions have formulae under its installation prefix and <code>Library/Formula/</code>, so that''s where you need to look for those outdated/changed files.</p>\n\n<p>Note, that if you changed those formulae yourself for a particular reason (like pinning a version) this action will revert them back to default ones and may produce unwanted effects.</p>\n\n<p>@TedPennings noted in comments that this worked for him, but his sequence was:</p>\n\n<ol>\n<li>chown everything to <code>my_username:admin</code>, ie, <code>sudo chown -R ted:admin $(brew --prefix)</code></li>\n<li>run the two git commands above,<code>git fetch origin</code> and <code>git reset --hard origin/master</code></li>\n</ol>\n', '1070354', '', '950427', '', '2014-07-27 01:50:22', '2014-07-27 01:50:22', '', '', 0, 10, '', '', ''),
(15395445, 2, '', '14113427', '2013-03-13 20:08:40', 154, 0, '<pre><code>cd $(brew --prefix)\ngit reset --hard HEAD\nbrew update\n</code></pre>\n', '1339631', '', '', '', '', '2013-03-13 20:08:40', '', '', 0, 8, '', '', ''),
(16726918, 2, '', '14113427', '2013-05-24 02:42:52', 5, 0, '<p>I had a similar issue where my brew package library got downloaded as a root user and then I was not able to run brew update as git would complain about not able to merge the file.</p>\n\n<p>Solution was to do :-</p>\n\n<pre><code>sudo chown -R &lt;user&gt; /usr/local/Library\n</code></pre>\n', '1034056', '', '', '', '', '2013-05-24 02:42:52', '', '', 0, 0, '', '', ''),
(20709912, 2, '', '14113427', '2013-12-20 18:33:49', 2, 0, '<p>I was able to fix this on my machine by adding admin group write (and setgid bit) permission at these paths:</p>\n\n<pre><code>sudo chmod -R g+ws /usr/local /Library/Caches/Homebrew\n</code></pre>\n\n<p>The s sets the group id on execution so that the write permissions aren''t lost the next time a different admin user updates or upgrades Homebrew.</p>\n\n<p>This answer is somewhat incomplete because when I try to do <code>brew cleanup --force</code> there is a permissions issue when Homebrew tries to remove content in /usr/local/Cellar/. (Unfortunately I''m not able to investigate this further at the moment.)</p>\n', '965666', '', '965666', '', '2013-12-20 18:41:07', '2013-12-20 18:41:07', '', '', 0, 1, '', '', ''),
(20725647, 2, '', '14113427', '2013-12-22 02:28:43', 5, 0, '<p>Resetting the brew repository should be the most efficient way if you don''t mind to discard potential modifications on formulas you might have been applied:</p>\n\n<pre><code>$ cd `brew --prefix`\n$ git fetch origin\n$ git reset --hard origin/master\n$ brew cleanup --force\n$ brew update\n</code></pre>\n', '728804', '', '', '', '', '2013-12-22 02:28:43', '', '', 0, 0, '', '', ''),
(21105833, 2, '', '14113427', '2014-01-14 03:55:43', 28, 0, '<p>This is caused by an old bug in the <code>update</code> code that has long since been fixed. However, the nature of the bug requires that you do the following:    </p>\n\n<pre><code>cd $(brew --repository)\ngit reset --hard FETCH_HEAD\n</code></pre>\n\n<p>If <code>brew doctor</code> still complains about uncommitted modifications, also run this command:</p>\n\n<pre><code>cd $(brew --repository)    \ngit clean -fd\n</code></pre>\n', '1112757', '', '', '', '', '2014-01-14 03:55:43', '', '', 0, 2, '', '', ''),
(21977519, 2, '', '14113427', '2014-02-24 01:51:27', 1, 0, '<p>Another option is to just use <code>git stash</code>.</p>\n\n<p>The brew update command performs a <code>git pull</code>, so if there are any changed files (or even file attributes, which happened to me when I changed permissions in the directory recursively) you have to somehow fix the conflicts. Using <code>git stash</code> is one way; it takes any changes and puts them aside so you effectively revert to the last updated repo version. The Homebrew ''location'' is by default <code>/usr/local</code> and it installs as a git repository. You can look for a <code>.git</code> folder to see for yourself. I''m writing a homebrew uninstall script to be posted on my GitHub profile soon with more info.</p>\n', '1575456', '', '2074608', '', '2014-02-24 05:46:25', '2014-02-24 05:46:25', '', '', 0, 0, '', '', ''),
(23713981, 2, '', '14113427', '2014-05-17 17:01:28', 5, 0, '<pre><code>$ cd $(brew --prefix)\n$ git clean -fd\n$ git reset --hard\n$ sudo chown -R &lt;user&gt; `brew --prefix`\n$ brew update\n</code></pre>\n\n<p>Note: steps 2&amp;3 worked for me since I did step 5 before 4 before I got the error. The <em>brew update</em> before changing the owner of the folder caused the whole problem.</p>\n', '839097', '', '', '', '', '2014-05-17 17:01:28', '', '', 0, 0, '', '', ''),
(14162208, 2, '', '14113559', '2013-01-04 17:49:35', 21, 0, '<p>You can use <a href="http://jekyllrb.com/docs/frontmatter/">YAML front matter</a> to tune anything you want for any post/page. Any info you provide there would be accessible through in layouts and includes under <code>page</code> variable or under specific post in any list of them.</p>\n\n<p>This sounds like a solution for your case: you could use YAML front matter like this:</p>\n\n<pre><code>---\nextra_css:\n  - foo.css\n  - dir/bar.css\n  - /s/baz.css\n---\n</code></pre>\n\n<p>And then use this in your layout''s header like this:</p>\n\n<pre><code>{% for css_name in page.extra_css %}\n    &lt;link rel="stylesheet" href="{{ css_name }}"&gt;\n{% endfor %}\n</code></pre>\n\n<p>In such way you could add any logic based on what data you provide with a post in YAML front matter.</p>\n\n<p>If you''d like to abstract some of those logic to modules, you can use a hack around the includes, assigning a variable before that include and then using it inside. <a href="http://jekyllbootstrap.com/api/bootstrap-api.html">Here is a link</a> with a description how it''s made in Jekyll Bootstrap project (btw, the site for it have a lot of nice info on Jekyll).</p>\n\n<p>And, yes, Jekyll don''t allow the use of variables in includes, so if you''d like to include something conditionally, you would need a list of all available includes somewhere and then create all the conditions for inserting one or another when you''ll need them.</p>\n\n<hr>\n\n<p>Another solution is to divide everything in layout to includes, and make layouts with different levels of complexity — this way you could set any of those basic layouts for post and then write any extra code with includes of any blocks you''ll need from the basic layouts, so you post could look like this:</p>\n\n<pre><code>---\nlayout: custom\n---\n&lt;aside class="sidebar"&gt;\n    {% include comments.html %}\n    {% include sidebar.html %}\n&lt;/aside&gt;\n&lt;div class="content" role="main"&gt;\n    Foo bar baz\n&lt;/div&gt;\n</code></pre>\n\n<p>There you could use a custom layout that don''t include a basic layout for page and don''t include the sidebar and comments, so you could per-post decide what level of layout you want and then redefine anything that needed to be redefined.</p>\n\n<p>Also, if you''ll need to tweak different places but with an unknown content, you could use YAML front matter with blocks, like </p>\n\n<pre><code>extra_head: |\n    &lt;style&gt;\n    * {background: red}\n    &lt;/style&gt;\n</code></pre>\n\n<p>then you could call such variable from head: <code>{{ page.extra_head }}</code> and get any content you placed there. However, you can''t use any liquid tags inside YAML, but you could then use any YAML tags on such variables, so you could markdownify them or replace any strings inside with anything else by simple replace filter.</p>\n\n<p>And if nothing of those fit you, then Jekyll won''t fit you — as I wrote in a comment, Jekyll is just a blog engine and you shouldn''t wait it to be complex as XSLT.</p>\n', '885556', '', '1053103', '', '2014-03-28 05:17:30', '2014-03-28 05:17:30', '', '', 0, 2, '', '', ''),
(21370647, 2, '', '14113559', '2014-01-26 23:26:38', 0, 0, '<p>I have ever tried to create an independent page in the jekyll-bootstrap static site. For example <code>my_cv.html</code> which needs independent css style. Instead of create a new github repository with gh-pages (sorry GitHub), I just simply fill all the final html contents into the a post <code>my_cv.md</code> since <code>markdown</code> format is actually compatible with <code>html</code> I think, and luckily it works. </p>\n', '1608734', '', '', '', '', '2014-01-26 23:26:38', '', '', 0, 0, '', '', ''),
(14118242, 2, '', '14113691', '2013-01-02 07:16:48', 6, 0, '<p>Hope that this would be helpful four your house / parliament floor</p>\n\n<p>Edit: I forget to mention my <a href="http://journal.r-project.org/archive/2011-1/RJournal_2011-1_Murrell.pdf" rel="nofollow">reference</a> and I add some explanations.\n<img src="http://i.stack.imgur.com/2R7b8.png" alt="enter image description here"></p>\n\n<pre><code>library(lattice)\nlibrary(grid)\n\n\nimgs.names &lt;- c(''WNinq'',''7dqJM'',''9E3Wj'',''tStmx'')\nlibrary(png)\nimages &lt;- lapply(imgs.names, function(x) \n     readPNG(paste(mypath,x,''.png'',sep=''''),native=TRUE))\n## I generate some data because we don''t give a reproducible example\nx &lt;- c(rep(0,4),rep(10,9),rep(20,3),rep(5,8),rep(4,8),rep(15,4),rep(13,8))\nbarchart(1:4~x, origin=0, col="yellow",xlim=c(0,30),\n             xlab =''values'',ylab=''categories'',title = ''Pictorial'',\n             scales = list(\n               y = list(cex=2,col=''blue'', at = 1:4,labels = c(''Trains'',''Cars'',''Ships'',''Planes'')),\n               x = list(cex=2,col=''blue'',at=seq(0,30,by=10))\n               ),\n             panel=function(x, y, ...) {\n                panel.fill(col = rgb(1,1,205/255))    ## I had to pick up the same yellow color!!\n                panel.grid()\n                lapply(1:4,function(id){\n                grid.raster(images[[id]], x=x[which(y==id)],  y=y[which(y==id)],\n                           default.units="native",\n                           just="left",\n                           width =unit(2, "native"),\n                           height=unit(0.7, "native"))\n                }\n            )\n          }\n         )\n</code></pre>\n', '1838509', '', '1838509', '', '2013-01-02 09:19:58', '2013-01-02 09:19:58', '', '', 0, 2, '', '', ''),
(14114419, 2, '', '14114411', '2013-01-01 21:33:54', 148, 0, '<p>Easy peasy:</p>\n\n<pre><code>function clean($string) {\n   $string = str_replace('' '', ''-'', $string); // Replaces all spaces with hyphens.\n\n   return preg_replace(''/[^A-Za-z0-9\\-]/'', '''', $string); // Removes special chars.\n}\n</code></pre>\n\n<p><b>Usage:</b></p>\n\n<pre><code>echo clean(''a|"bc!@£de^&amp;$f g'');\n</code></pre>\n\n<p>Will output: <code>abcdef-g</code></p>\n\n<p><b>Edit:</b></p>\n\n<blockquote>\n  <p>Hey, just a quick question, how can I prevent multiple hyphens from being next to each other? and have them replaced with just 1? Thanks in advance!</p>\n</blockquote>\n\n<pre><code>function clean($string) {\n   $string = str_replace('' '', ''-'', $string); // Replaces all spaces with hyphens.\n   $string = preg_replace(''/[^A-Za-z0-9\\-]/'', '''', $string); // Removes special chars.\n\n   return preg_replace(''/-+/'', ''-'', $string); // Replaces multiple hyphens with single one.\n}\n</code></pre>\n', '1726801', '', '1726801', '', '2014-06-11 23:58:32', '2014-06-11 23:58:32', '', '', 0, 19, '', '', ''),
(14114430, 2, '', '14114411', '2013-01-01 21:35:38', 9, 0, '<p>Here, check out this function:</p>\n\n<pre><code>function seo_friendly_url($string){\n    $string = str_replace(array(''[\\'', \\'']''), '''', $string);\n    $string = preg_replace(''/\\[.*\\]/U'', '''', $string);\n    $string = preg_replace(''/&amp;(amp;)?#?[a-z0-9]+;/i'', ''-'', $string);\n    $string = htmlentities($string, ENT_COMPAT, ''utf-8'');\n    $string = preg_replace(''/&amp;([a-z])(acute|uml|circ|grave|ring|cedil|slash|tilde|caron|lig|quot|rsquo);/i'', ''\\\\1'', $string );\n    $string = preg_replace(array(''/[^a-z0-9]/i'', ''/[-]+/'') , ''-'', $string);\n    return strtolower(trim($string, ''-''));\n}\n</code></pre>\n', '1052743', '', '', '', '', '2013-01-01 21:35:38', '', '', 0, 2, '', '', ''),
(14114443, 2, '', '14114411', '2013-01-01 21:36:45', 19, 0, '<h1>Update</h1>\n\n<p>The solution below has a "SEO friendlier" version:</p>\n\n<pre><code>function hyphenize($string) {\n    $dict = array(\n        "I''m"      =&gt; "I am",\n        "thier"    =&gt; "their",\n    );\n    return strtolower(\n        preg_replace(\n          array( ''#[\\\\s-]+#'', ''#[^A-Za-z0-9\\. -]+#'' ),\n          array( ''-'', '''' ),\n          // the full cleanString() can be download from http://www.unexpectedit.com/php/php-clean-string-of-utf8-chars-convert-to-similar-ascii-char\n          cleanString(\n              str_replace( // preg_replace to support more complicated replacements\n                  array_keys($dict),\n                  array_values($dict),\n                  urldecode($string)\n              )\n          )\n        )\n    );\n}\n\nfunction cleanString($text) {\n    $utf8 = array(\n        ''/[áàâãªä]/u''   =&gt;   ''a'',\n        ''/[ÁÀÂÃÄ]/u''    =&gt;   ''A'',\n        ''/[ÍÌÎÏ]/u''     =&gt;   ''I'',\n        ''/[íìîï]/u''     =&gt;   ''i'',\n        ''/[éèêë]/u''     =&gt;   ''e'',\n        ''/[ÉÈÊË]/u''     =&gt;   ''E'',\n        ''/[óòôõºö]/u''   =&gt;   ''o'',\n        ''/[ÓÒÔÕÖ]/u''    =&gt;   ''O'',\n        ''/[úùûü]/u''     =&gt;   ''u'',\n        ''/[ÚÙÛÜ]/u''     =&gt;   ''U'',\n        ''/ç/''           =&gt;   ''c'',\n        ''/Ç/''           =&gt;   ''C'',\n        ''/ñ/''           =&gt;   ''n'',\n        ''/Ñ/''           =&gt;   ''N'',\n        ''/–/''           =&gt;   ''-'', // UTF-8 hyphen to "normal" hyphen\n        ''/[’‘‹›‚]/u''    =&gt;   '' '', // Literally a single quote\n        ''/[“”«»„]/u''    =&gt;   '' '', // Double quote\n        ''/ /''           =&gt;   '' '', // nonbreaking space (equiv. to 0x160)\n    );\n    return preg_replace(array_keys($utf8), array_values($utf8), $text);\n}\n</code></pre>\n\n<p>The rationale for the above functions (which I find <em>way</em> inefficient - the one below is better) is that a service that shall not be named apparently ran spelling checks and keyword recognition on the URLs.</p>\n\n<p>After losing a long time on a customer''s paranoias, I found out they were <em>not</em> imagining things after all -- their SEO experts [I am definitely not one] reported that, say, converting "Viaggi Economy Perù" to <code>viaggi-economy-peru</code> "behaved better" than <code>viaggi-economy-per</code> (the previous "cleaning" removed UTF8 characters; <strong>Bogotà</strong> became <strong>bogot</strong>, <strong>Medellìn</strong> became <strong>medelln</strong> and so on).</p>\n\n<p>There were also some common misspellings that seemed to influence the results, and the only explanation that makes sense to me is that our URL are being unpacked, the words singled out, and used to drive God knows what ranking algorithms. And those algorithms apparently have been fed with UTF8-cleaned strings, so that "Perù" becomes "Peru" instead of "Per".</p>\n\n<p>In order to both keep UTF8 characters and replace some misspellings, the faster function below became the more accurate (?) function above. <code>$dict</code> needs to be hand tailored, of course.</p>\n\n<h1>Previous answer</h1>\n\n<p>A simple approach:</p>\n\n<pre><code>// Remove all characters except A-Z, a-z, 0-9, dots, hyphens and spaces\n// Note that the hyphen must go last not to be confused with a range (A-Z)\n// and the dot, being special, is escaped with \\\n$str = preg_replace(''/[^A-Za-z0-9\\. -]/'', '''', $str);\n\n// Replace sequences of spaces with hyphen\n$str = preg_replace(''/  */'', ''-'', $str);\n\n// The above means "a space, followed by a space repeated zero or more times"\n// (should be equivalent to / +/)\n\n// You may also want to try this alternative:\n$str = preg_replace(''/\\\\s+/'', ''-'', $str);\n\n// where \\s+ means "zero or more whitespaces" (a space is not necessarily the\n// same as a whitespace) just to be sure and include everything\n</code></pre>\n\n<p>Note that you might have to first <code>urldecode()</code> the URL, since %20 and + both are actually spaces - I mean, if you have "Never%20gonna%20give%20you%20up" you want it to become Never-gonna-give-you-up, not <em>Never20gonna20give20you20up</em> . You might not need it, but I thought I''d mention the possibility.</p>\n\n<p>So the finished function along with test cases:</p>\n\n<pre><code>function hyphenize($string) {\n    return \n    ## strtolower(\n          preg_replace(\n            array(''#[\\\\s-]+#'', ''#[^A-Za-z0-9\\. -]+#''),\n            array(''-'', ''''),\n        ##     cleanString(\n              urldecode($string)\n        ##     )\n        )\n    ## )\n    ;\n}\n\nprint implode("\\n", array_map(\n    function($s) {\n            return $s . '' becomes '' . hyphenize($s);\n    },\n    array(\n    ''Never%20gonna%20give%20you%20up'',\n    "I''m not the man I was",\n    "''Légeresse'', dit sa majesté",\n    )));\n\n\nNever%20gonna%20give%20you%20up    becomes  never-gonna-give-you-up\nI''m not the man I was              becomes  im-not-the-man-I-was\n''Légeresse'', dit sa majesté        becomes  legeresse-dit-sa-majeste\n</code></pre>\n\n<p>To handle UTF-8 I used a <code>cleanString</code> implementation found <a href="http://www.unexpectedit.com/php/php-clean-string-of-utf8-chars-convert-to-similar-ascii-char" rel="nofollow">here</a>. It could be simplified and wrapped inside the function here for performance.</p>\n\n<p>The function above also implements converting to lowercase - but that''s a taste. The code to do so has been commented out.</p>\n', '1428679', '', '1428679', '', '2015-01-03 11:09:51', '2015-01-03 11:09:51', '', '', 0, 4, '', '', ''),
(14116462, 2, '', '14114480', '2013-01-02 03:11:26', 2, 0, '<p>Bouncy Castle 1.47 is using different version header. Can you try <a href="http://repo2.maven.org/maven2/org/bouncycastle/bcprov-ext-jdk15on/1.46/bcprov-ext-jdk15on-1.46.jar" rel="nofollow">1.46 version</a>, it should work.</p>\n\n<pre><code>keytool -import -alias onlinescoutmanager -file www.onlinescoutmanager.co.uk.crt -storetype BKS -storepass osmosm -keystore C:/keystore -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath bcprov-ext-jdk15on-1.46.jar\n</code></pre>\n', '183915', '', '', '', '', '2013-01-02 03:11:26', '', '', 0, 4, '', '', ''),
(14131358, 2, '', '14114480', '2013-01-03 00:22:29', 2, 0, '<p>Thanks to various people for their hints on this, there are multiple things that all needed to be correct for it to work.</p>\n\n<ol>\n<li><p>If the HTTPS site''s certificate is signed by a trusted root certificate then it will work out of the box without a custom <code>SSLSocketFactory</code>.\nThe trusted root certificates CAN be different to that used by a browser so don''t assume that if it works in the Android web browser then it will work in your app.<br>\nIf it''s not a trusted root certificate and you get exceptions like <code>javax.net.ssl.SSLHandshakeException: org.bouncycastle.jce.exception.ExtCertPathValidatorException: Could not validate certificate signature.</code>, then you need to create and load a key store as below.</p></li>\n<li><p>The key store needs to be generated using the Bouncy Castle provider (<a href="http://stackoverflow.com/a/5187509/588306">1</a>) by specifying <code>-storetype bks</code> on the <code>keytool</code> command line.<br>\nIf Bouncy Castle is not installed correctly then this will fail with various exceptions including <code>java.security.KeyStoreException: BKS not found</code>.\nIf the key store is not created with the Bouncy Castle provider then you may get the <code>java.io.IOException: Wrong version of key store.</code> exception, causing confusion with the next case.</p></li>\n<li><p>You need to use an appropriate version (<a href="http://stackoverflow.com/a/10809108/588306">1</a>, <a href="http://stackoverflow.com/a/14116462/588306">2</a>, <a href="http://stackoverflow.com/a/7002670/588306">3</a>) of the Bouncy Castle provider. In most cases, this seems to be <a href="http://repo2.maven.org/maven2/org/bouncycastle/bcprov-ext-jdk15on/1.46/bcprov-ext-jdk15on-1.46.jar" rel="nofollow">version 1.46</a>.<br>\nThis can be put into your JRE''s <code>lib/ext/</code> folder and the class name added to <code>lib/security/java.security</code>, or specified directly on the command line to <code>keytool</code>.\nIf it''s an incompatible version (or store type) you will get exceptions along the lines of <code>java.io.IOException: Wrong version of key store.</code> again.</p></li>\n<li><p>You must include all intermediary and the root certificate. If any are missing, you will get a <code>javax.net.ssl.SSLHandshakeException: java.security.cert.CertPathValidatorException: Trust anchor for certification path not found.</code> exception.</p></li>\n<li><p>The certificate chain MUST be in order for them to be validated correctly. If they aren''t you will either get <code>javax.net.ssl.SSLHandshakeException: org.bouncycastle.jce.exception.ExtCertPathValidatorException: IssuerName(CN=XYZ) does not match SubjectName(CN=ABC) of signing certificate.</code> or again, a generic <code>javax.net.ssl.SSLHandshakeException: java.security.cert.CertPathValidatorException: Trust anchor for certification path not found.</code>\nI have not found a way to order them in the key store so resorted to <a href="http://stackoverflow.com/q/4115101/588306">doing it in code at runtime</a>.</p></li>\n</ol>\n\n<p>Some people have suggested that <a href="http://stackoverflow.com/a/12528853/588306">using a keystore password longer than 7 characters</a> will also cause it to fail, but that''s not what I''ve found.</p>\n\n<p>I think this covers every pitfall I found, but feel free to expand and add linsk to related questions.</p>\n', '588306', '', '588306', '', '2013-01-03 00:39:54', '2013-01-03 00:39:54', '', '', 0, 0, '', '', ''),
(14245913, 2, '', '14114528', '2013-01-09 20:31:39', 16, 0, '<p>Just set it up in a profile in settings.xml and activate it by default:</p>\n\n<pre><code>&lt;settings&gt;\n  &lt;profiles&gt;\n    &lt;profile&gt;\n      &lt;id&gt;gpg&lt;/id&gt;\n      &lt;properties&gt;\n        &lt;gpg.executable&gt;gpg2&lt;/gpg.executable&gt;\n        &lt;gpg.passphrase&gt;mypassphrase&lt;/gpg.passphrase&gt;\n      &lt;/properties&gt;\n    &lt;/profile&gt;\n  &lt;/profiles&gt;\n  &lt;activeProfiles&gt;\n    &lt;activeProfile&gt;gpg&lt;/activeProfile&gt;\n  &lt;/activeProfiles&gt;\n&lt;/settings&gt;\n</code></pre>\n\n<p>As you can see you can do that with any property .. e.g. also other usernames and passwords for the jarsigner plugin and so on.</p>\n\n<p>This should be always active. It might depend on using a newer Maven version but you can always debug this with</p>\n\n<pre><code>mvn help:active-profiles\n</code></pre>\n', '136445', '', '136445', '', '2013-06-03 18:12:16', '2013-06-03 18:12:16', '', '', 0, 20, '', '', ''),
(25197868, 2, '', '14114528', '2014-08-08 07:13:02', 3, 0, '<p>Having your GPG pass phrase in a file in your home directory is absolutely horrible security. </p>\n\n<p>Instead, use the gpg-agent, so you only need to enter your passphrase once per session.\nOnce installed you can setup your shell to do something like:</p>\n\n<pre><code>eval $(gpg-agent --daemon --no-grab --write-env-file $HOME/.gpg-agent-info)\nexport GPG_TTY=$(tty)\nexport GPG_AGENT_INFO\n</code></pre>\n\n<p>then update your plugin to enable the agent.  You can do this either in the pom, or in a profile in your settings.xml may be better:</p>\n\n<pre><code>&lt;plugin&gt;\n  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n  &lt;artifactId&gt;maven-gpg-plugin&lt;/artifactId&gt;\n  &lt;configuration&gt;\n    &lt;useAgent&gt;true&lt;/useAgent&gt;\n  &lt;/configuration&gt;\n&lt;/plugin&gt;\n</code></pre>\n\n<p>or it is probably better and more portable to do this in your settings:</p>\n\n<pre><code>&lt;profile&gt;\n  &lt;id&gt;gpg-profile&lt;/id&gt;\n  &lt;properties&gt;\n    &lt;gpg.useagent&gt;true&lt;/gpg.useagent&gt;\n  &lt;/properties&gt;\n&lt;/profile&gt;\n</code></pre>\n\n<p>Then the first time in a session that the gpg passphrase is needed, a dialog is popped up.  Every time after that, it uses the passphrase from the agent.</p>\n', '1704917', '', '1704917', '', '2014-08-08 07:48:11', '2014-08-08 07:48:11', '', '', 0, 0, '', '', ''),
(25963755, 2, '', '14114528', '2014-09-21 20:54:21', 0, 0, '<p>GPG password in settings.xml is working solution, but it is open and this is bad.\nAlternative solution, I had used in my projects, is as follows:</p>\n\n<pre><code>stty -echo &amp;&amp; printf "GPG password: " &amp;&amp; read gpgPwd &amp;&amp; printf ''\\n'' &amp;&amp; stty echo\nmvn release:prepare -Darguments="-Dgpg.passphrase=$gpgPwd"\ngit push\ngit push --tags\nmvn release:perform -Darguments="-Dgpg.passphrase=$gpgPwd"\nunset gpgPwd\n</code></pre>\n\n<p>Additional required configurations:</p>\n\n<pre><code>export GPG_TTY=$(tty) (in the ~/.bash_profile)\nmaven-release-plugin/configuration/pushChanges=false (in the root pom.xml)\n</code></pre>\n', '2078908', '', '', '', '', '2014-09-21 20:54:21', '', '', 0, 0, '', '', ''),
(14114741, 2, '', '14114729', '2013-01-01 22:16:20', 53, 0, '<p>Oddly enough, requests doesn''t have anything simple for this. You''ll have to iterate over the response and write those chunks to a file:</p>\n\n<pre><code>with open(''output.jpg'', ''wb'') as handle:\n    response = requests.get(''http://www.example.com/image.jpg'', stream=True)\n\n    if not response.ok:\n        # Something went wrong\n\n    for block in response.iter_content(1024):\n        if not block:\n            break\n\n        handle.write(block)\n</code></pre>\n\n<p>I usually just use <code>urllib.urlretrieve()</code>. It works, but if you need to use a session or some sort of authentication, the above code works as well.</p>\n', '464744', '', '464744', '', '2014-04-15 20:22:27', '2014-04-15 20:22:27', '', '', 0, 14, '', '', ''),
(14114786, 2, '', '14114738', '2013-01-01 22:22:35', 28, 0, '<p>What you meant to say is multiple windows not buffers.</p>\n\n<p>By default vim is set not to show the <code>statusline</code> when there is only a single window. You can override this by using:</p>\n\n<pre><code>set laststatus=2\n</code></pre>\n\n<p>Numbers denote the behavior as such:</p>\n\n<pre><code>0: never\n1: only if there are at least two windows (this one is the default)\n2: always\n</code></pre>\n\n<p>See <code>:h laststatus</code> for more info..</p>\n', '1385119', '', '', '', '', '2013-01-01 22:22:35', '', '', 0, 1, '', '', ''),
(14115349, 2, '', '14115314', '2013-01-01 23:49:42', 29, 0, '<p>You need to use <a href="http://libcxx.llvm.org/">libc++</a> instead of <a href="http://gcc.gnu.org/libstdc++/">libstdc++</a>.</p>\n\n<pre><code>clang++ -std=c++11 -stdlib=libc++ foo.cc\n</code></pre>\n', '47453', '', '', '', '', '2013-01-01 23:49:42', '', '', 0, 9, '', '', '');
INSERT INTO `Posts` (`Id`, `PostTypeId`, `AcceptedAnswerId`, `ParentId`, `CreationDate`, `Score`, `ViewCount`, `Body`, `OwnerUserId`, `OwnerDisplayName`, `LastEditorUserId`, `LastEditorDisplayName`, `LastEditDate`, `LastActivityDate`, `Title`, `Tags`, `AnswerCount`, `CommentCount`, `FavoriteCount`, `ClosedDate`, `CommunityOwnedDate`) VALUES
(14115944, 2, '', '14115375', '2013-01-02 01:30:11', 14, 0, '<p>Cross-browser and legacy support.</p>\n\n<p>You can also use getElementsByClassName() if you don''t want to use Jquery. There is a response to a <a href="http://forums.devshed.com/javascript-development-115/javascript-get-all-elements-of-class-abc-24349.html">post on devshed</a> by user: KorRedDevil that may be of interest to you. </p>\n\n<p>I took your function from your post and made it return an array. After you have that array of elements, all you have to do is loop over them. You can try it out <a href="http://jsfiddle.net/tEB6G/">here</a>.</p>\n\n<p><em>Javascript</em>:</p>\n\n<pre><code>var retrieve = function(className) {\n    return document.getElementsByClassName(className);\n};\n\nvar elements = retrieve(''foo'');\nfor (var i = 0; i &lt; elements.length; i++)\n    elements[i].style.background = ''#dfd'';\n</code></pre>\n\n<p><em>Markup</em>:</p>\n\n<pre><code>&lt;p class="foo"&gt;foo&lt;/p&gt;\n&lt;p class="bar"&gt;bar&lt;/p&gt;\n&lt;p class="foo"&gt;foo&lt;/p&gt;\n&lt;p class="foo"&gt;foo&lt;/p&gt;\n&lt;p class="bar"&gt;bar&lt;/p&gt;\n&lt;p class="bar"&gt;bar&lt;/p&gt;\n</code></pre>\n', '1762224', '', '1762224', '', '2013-01-02 03:05:02', '2013-01-02 03:05:02', '', '', 0, 2, '', '', ''),
(14238131, 2, '', '14115440', '2013-01-09 15:02:06', 4, 0, '<p>If the solution from the Paul Vincent Craven''s answer gives you "Python version 3.3 required, which was not found in the registry.", you have to download and install this version from the <a href="http://www.python.org/getit/" rel="nofollow">official download site</a>:</p>\n\n<pre><code>Python 3.3.0 Windows X86-64 MSI Installer\n</code></pre>\n', '1902055', '', '63550', '', '2014-03-01 10:05:21', '2014-03-01 10:05:21', '', '', 0, 0, '', '', ''),
(14752347, 2, '', '14115440', '2013-02-07 13:32:08', 22, 0, '<p>The main Pygame page seems to be rarely updated. You can download Pygame releases direct from <a href="http://en.wikipedia.org/wiki/Bitbucket">Bitbucket</a> at <a href="https://bitbucket.org/pygame/pygame/downloads">https://bitbucket.org/pygame/pygame/downloads</a>.</p>\n', '49404', '', '63550', '', '2014-03-01 10:03:39', '2014-03-01 10:03:39', '', '', 0, 0, '', '', ''),
(16723393, 2, '', '14115440', '2013-05-23 20:33:27', 3, 0, '<p>If you are on Windows and have Python 3.3, open <a href="https://bitbucket.org/pygame/pygame/downloads" rel="nofollow">the download page on bitbucket</a>. Download: pygame-1.9.2a0.win32-py3.3.msi</p>\n\n<p>Then you can test if you have Pygame by importing <code>pygame</code>.</p>\n', '2415270', '', '63550', '', '2014-03-01 10:06:36', '2014-03-01 10:06:36', '', '', 0, 0, '', '', ''),
(16889983, 2, '', '14115440', '2013-06-03 04:23:20', 0, 0, '<p>I have had this problem also. Pygame has to be compatible with the version of Python and the type of computer you have. For example, if you have Python version 3.3.2, but downloaded Pygame version 2.7.1, the "import pygame" function will be impossible to use.</p>\n', '2446529', '', '63550', '', '2014-03-01 10:08:30', '2014-03-01 10:08:30', '', '', 0, 0, '', '', ''),
(21206851, 2, '', '14115440', '2014-01-18 16:39:25', 0, 0, '<p>You need to download the version of Pygame that is equivalent to Python 3.3 from <a href="http://en.wikipedia.org/wiki/Bitbucket" rel="nofollow">Bitbucket</a> and Pygame is only available in 32 bit, so you need to make sure that Python is 3.3 32 bit. Download from: <a href="https://bitbucket.org/pygame/pygame/downloads" rel="nofollow">https://bitbucket.org/pygame/pygame/downloads</a> </p>\n', '3100799', '', '63550', '', '2014-03-01 10:09:34', '2014-03-01 10:09:34', '', '', 0, 2, '', '', ''),
(14639815, 2, '', '14115620', '2013-02-01 04:36:47', 1, 0, '<p>This page explains how life cycle event handling in asynchronous pages differs from those of synchronous pages in ASP.NET 2.0 (Figure 2 is especially helpful):</p>\n\n<p><a href="http://msdn.microsoft.com/en-us/magazine/cc163725.aspx" rel="nofollow">Wicked Code: Asynchronous Pages in ASP.NET 2.0</a></p>\n\n<p>You may also find this SO question of use (it talks about the same error message):</p>\n\n<p><a href="http://stackoverflow.com/q/13031144/2005251">async keyword and choice of the TaskScheduler</a></p>\n', '2005251', '', '', '', '', '2013-02-01 04:36:47', '', '', 0, 1, '', '', ''),
(14792896, 2, '', '14115620', '2013-02-09 23:39:31', 17, 0, '<p>Damian Edwards from the ASP.NET team gave this answer:</p>\n\n<blockquote>\n  <p>Async void event handlers in web forms are only supported on certain\n  events, as you''ve found, but are really only intended for simplistic\n  tasks. We recommend using PageAsyncTask for any async work of any real\n  complexity.</p>\n</blockquote>\n\n<p>Levi Broderick from the ASP.NET team gave this answer:</p>\n\n<blockquote>\n  <p>Async events in web applications are inherently strange beasts.  Async\n  void is meant for a fire and forget programming model.  This works in\n  Windows UI applications since the application sticks around until the\n  OS kills it, so whenever the async callback runs there is guaranteed\n  to be a UI thread that it can interact with.  In web applications,\n  this model falls apart since requests are by definition transient.  If\n  the async callback happens to run after the request has finished,\n  there is no guarantee that the data structures the callback needs to\n  interact with are still in a good state.  Thus why fire and forget\n  (and async void) is inherently a bad idea in web applications.</p>\n  \n  <p>That\n  said, we do crazy gymnastics to try to make very simple things like\n  Page_Load work, but the code to support this is extremely complicated\n  and not well-tested for anything beyond basic scenarios.  So if you\n  need reliability I’d stick with RegisterAsyncTask.</p>\n</blockquote>\n\n<p>So I think the answer to my question is: "That''s the wrong question." </p>\n\n<p>The right question would be "How should I be async in my ASP.NET Web Forms application?" And the answer is to insert this snippet inside your aspx code-behind file:</p>\n\n<pre><code>this.RegisterAsyncTask(new PageAsyncTask(async cancellationToken =&gt; {\n    var result = await SomeOperationAsync(cancellationToken);\n    // do something with result.\n}));\n</code></pre>\n\n<p>This same trick works inside ASP.NET custom controls, just use <code>this.Page.RegisterAsyncTask</code> instead.</p>\n', '46926', '', '', '', '', '2013-02-09 23:39:31', '', '', 0, 0, '', '', ''),
(14116460, 2, '', '14115701', '2013-01-02 03:10:46', 1, 0, '<p>I wouldn''t set the ngmodel via an attribute, you can specify it right in the template:</p>\n\n<pre><code>template: ''&lt;div class="some"&gt;&lt;label&gt;{{label}}&lt;/label&gt;&lt;input data-ng-model="ngModel"&gt;&lt;/div&gt;'',\n</code></pre>\n\n<p><strong>plunker</strong>: <a href="http://plnkr.co/edit/9vtmnw?p=preview" rel="nofollow">http://plnkr.co/edit/9vtmnw?p=preview</a></p>\n', '973651', '', '', '', '', '2013-01-02 03:10:46', '', '', 0, 0, '', '', ''),
(14116498, 2, '', '14115701', '2013-01-02 03:18:15', 101, 0, '<p>It''s actually pretty good logic but you can simplify things a bit.</p>\n\n<h3>Directive</h3>\n\n<pre><code>var app = angular.module(''plunker'', []);\n\napp.controller(''MainCtrl'', function($scope) {\n  $scope.model = { name: ''World'' };\n  $scope.name = "Felipe";\n});\n\napp.directive(''myDirective'', function($compile) {\n  return {\n    restrict: ''AE'', //attribute or element\n    scope: {\n      myDirectiveVar: ''='',\n     //bindAttr: ''=''\n    },\n    template: ''&lt;div class="some"&gt;'' +\n      ''&lt;input ng-model="myDirectiveVar"&gt;&lt;/div&gt;'',\n    replace: true,\n    //require: ''ngModel'',\n    link: function($scope, elem, attr, ctrl) {\n      console.debug($scope);\n      //var textField = $(''input'', elem).attr(''ng-model'', ''myDirectiveVar'');\n      // $compile(textField)($scope.$parent);\n    }\n  };\n});\n</code></pre>\n\n<h3>Html with directive</h3>\n\n<pre><code>&lt;body ng-controller="MainCtrl"&gt;\n  This scope value &lt;input ng-model="name"&gt;\n  &lt;my-directive my-directive-var="name"&gt;&lt;/my-directive&gt;\n&lt;/body&gt;\n</code></pre>\n\n<h3>CSS</h3>\n\n<pre><code>.some {\n  border: 1px solid #cacaca;\n  padding: 10px;\n}\n</code></pre>\n\n<p>You can see it in action with this <a href="http://plnkr.co/edit/A29hl6">Plunker</a>.</p>\n\n<p>Here''s what I see:</p>\n\n<ul>\n<li>I understand why you want to use ''ng-model'' but in your case it''s not necessary.  ng-model is to link <em>existing</em> html elements with a value in the scope.  Since you''re creating a directive yourself you''re creating a ''new'' html element, so you don''t need ng-model.</li>\n</ul>\n\n<p><strong>EDIT</strong> As mentioned by Mark in his comment, there''s no reason that you <em>can''t</em> use ng-model, just to keep with convention.</p>\n\n<ul>\n<li>By explicitly creating a scope in your directive (an ''isolated'' scope), the directive''s scope cannot access the ''name'' variable on the parent scope (which is why, I think, you wanted to use ng-model).</li>\n<li>I removed ngModel from your directive and replaced it with a custom name that you can change to whatever.</li>\n<li>The thing that makes it all still work is that ''='' sign in the scope.  Checkout the docs  <a href="http://docs.angularjs.org/guide/directive">docs</a> under the ''scope'' header.</li>\n</ul>\n\n<p>In general, your directives should use the isolated scope (which you did correctly) and use the ''='' type scope if you want a value in your directive to always map to a value in the parent scope. </p>\n', '295797', '', '856468', '', '2014-02-15 19:17:37', '2014-02-15 19:17:37', '', '', 0, 7, '', '', ''),
(14117898, 2, '', '14115701', '2013-01-02 06:41:56', 15, 0, '<p>You only need ng-model when you need to access the model''s $viewValue or $modelValue. See <a href="http://docs.angularjs.org/api/ng.directive%3angModel.NgModelController">NgModelController</a>. And in that case, you would use <code>require: ''^ngModel''</code>.</p>\n\n<p>For the rest, see <a href="http://stackoverflow.com/a/14116498/1916258">Roys answer</a>.</p>\n', '1916258', '', '', '', '', '2013-01-02 06:41:56', '', '', 0, 2, '', '', ''),
(16899789, 2, '', '14115701', '2013-06-03 15:00:38', 23, 0, '<p>I took a combo of all answers, and now have two ways of doing this with the ng-model attribute:</p>\n\n<ul>\n<li>With a new scope which copies ngModel</li>\n<li>With the same scope which does a compile on link</li>\n</ul>\n\n<p>I''m not sure I like the compiling at link time. However, if you''re just replacing the element with another you don''t need to do that.</p>\n\n<p>Plunker is here: <a href="http://plnkr.co/edit/D2keMc?p=preview">http://plnkr.co/edit/D2keMc?p=preview</a></p>\n\n<p>All in all I prefer the first one. Simply set scope to <code>{ngModel:"="}</code> and set <code>ng-model="ngModel"</code> where you want it in your template.</p>\n', '124416', '', '', '', '', '2013-06-03 15:00:38', '', '', 0, 6, '', '', ''),
(22626273, 2, '', '14115701', '2014-03-25 05:40:41', 16, 0, '<p>it'' s not so complicated:\nin your dirctive, use an alias: <code>scope:{alias:''=ngModel''}</code></p>\n\n<pre><code>.directive(''dateselect'', function () {\nreturn {\n    restrict: ''E'',\n    transclude: true,\n    scope:{\n        bindModel:''=ngModel''\n    },\n    template:''&lt;input ng-model="bindModel"/&gt;''\n}\n</code></pre>\n\n<p>in your html, use as normal</p>\n\n<pre><code>&lt;dateselect ng-model="birthday"&gt;&lt;/dateselect&gt;\n</code></pre>\n', '461412', '', '', '', '', '2014-03-25 05:40:41', '', '', 0, 0, '', '', ''),
(14115911, 2, '', '14115902', '2013-01-02 01:25:03', 5, 0, '<p><code>{} != {}</code> is true because both <code>{}</code>''s are completely different objects. However, variables that are referencing the same object hold equality:</p>\n\n<pre><code>​var a = {},\n    b = a;\n\nassert( a == b )​\n</code></pre>\n', '701092', '', '', '', '', '2013-01-02 01:25:03', '', '', 0, 2, '', '', ''),
(14115913, 2, '', '14115902', '2013-01-02 01:25:12', 22, 0, '<pre><code>{} != ({})\n</code></pre>\n\n<p>This is a syntax error.</p>\n\n<blockquote>\n  <p>SyntaxError: Unexpected token !=</p>\n</blockquote>\n\n<p><code>{}</code> is ambigious like that. Is it an empty block, or an empty object literal? It''s failing because a comparison operator can not follow a block.</p>\n\n<p>Wrapping it with parenthesis makes the parser treat it as an expression. An expression can''t contain a block, so it knows it''s an object.</p>\n\n<p>However, if you wrap that comparison in an expression...</p>\n\n<pre><code>({} != ({}))\n</code></pre>\n\n<p>...it''s still true because variables which have an object assigned to them''s values are a <em>pointer</em> to them and as a consequence, they are never copied around by their contents (though this is irrelevant to your example). Because of this, their pointer is always different and the comparison fails.</p>\n\n<p>This also implies that comparing two variables which point to the same object will work as expected, as their pointers will be the same.</p>\n', '31671', '', '31671', '', '2013-01-02 01:30:38', '2013-01-02 01:30:38', '', '', 0, 2, '', '', ''),
(14116215, 2, '', '14115980', '2013-01-02 02:23:51', 43, 0, '<p>Some performance problems:</p>\n\n<ul>\n<li>The <code>(range 2 20)</code> call is creating a new lazy list of numbers for every increment of <code>i</code>. This is expensive, and is causing lots of unnecessary GC.</li>\n<li>You are doing a lot of boxing by passing through function calls. Even the <code>(iterate inc 1)</code> is doing boxing / unboxing at every increment.</li>\n<li>You are traversing a sequence of divisors. This is slower than a straight iterative loop</li>\n<li><code>mod</code> is actually not a very well optimised function in Clojure at present. You are much better off using <code>rem</code></li>\n</ul>\n\n<p>You can solve the first problem by using a <code>let</code> statement to define the range just once:</p>\n\n<pre><code>(time (let [rng (range 2 20)]\n  (prn (some (fn [^long i] (has-all-divisors rng i)) (iterate inc 1)))))\n=&gt; "Elapsed time: 48863.801522 msecs"\n</code></pre>\n\n<p>You can solve the second problem with loop/recur:</p>\n\n<pre><code>(time (let [rng (range 2 20)\n           f (fn [^long i] (has-all-divisors rng i))]\n       (prn (loop [i 1] \n              (if (f i)\n                i\n                (recur (inc i)))))))\n=&gt; "Elapsed time: 32757.594957 msecs"\n</code></pre>\n\n<p>You can solve the third problem by using an iterative loop over the possible divisors:</p>\n\n<pre><code>(defn has-all-divisors [^long num]\n  (loop [d (long 2)]\n    (if (zero? (mod num d))\n      (if (&gt;= d 20) true (recur (inc d)))\n      false)))\n\n (time (prn (loop [i (long 1)] (if (has-all-divisors i) i (recur (inc i))))))\n =&gt; "Elapsed time: 13369.525651 msecs"\n</code></pre>\n\n<p>You can solve the final problem using <code>rem</code></p>\n\n<pre><code>(defn has-all-divisors [^long num]\n  (loop [d (long 2)]\n    (if (== 0 (rem num d))\n      (if (&gt;= d 20) true (recur (inc d)))\n      false)))\n\n (time (prn (loop [i (long 1)] (if (has-all-divisors i) i (recur (inc i))))))\n=&gt; "Elapsed time: 2423.195407 msecs"\n</code></pre>\n\n<p>As you can see, it is now competitive with the Java version. </p>\n\n<p>In general, you can usually make Clojure almost as fast as Java with a bit of effort. The main tricks are usually:</p>\n\n<ul>\n<li>Avoid lazy functional features. They are nice, but add some overhead which can be problematic in low-level computation-intensive code.</li>\n<li>Use primitive / unchecked maths</li>\n<li>Use loop/recur rather than sequences</li>\n<li>Ensure you are not doing any reflection on Java objects (i.e. <code>(set! *warn-on-reflection* true)</code> and eliminate all warnings you find)</li>\n</ul>\n', '214010', '', '214010', '', '2013-01-02 10:51:52', '2013-01-02 10:51:52', '', '', 0, 4, '', '', ''),
(15980424, 2, '', '14115980', '2013-04-12 20:36:29', 0, 0, '<p>I have not been able to reproduce the 1500 ms performance.   The Clojure code seems actually twice as fast as the Java version after compilation to uberjar. </p>\n\n<pre><code>Now timing Java version\n    232792560\n"Elapsed time: 4385.205 msecs"\n\nNow timing Clojure version\n    232792560\n"Elapsed time: 2511.916 msecs"\n</code></pre>\n\n<p>I put the java class in resources/HasAllDivisors.java</p>\n\n<pre><code>public class HasAllDivisors {\n\n    public static long findMinimumWithAllDivisors() {\n        long i = 1;\n        while(!hasAllDivisors(i,2,20)) i++;\n        return i;\n    }\n\n    public static boolean hasAllDivisors(long num, int startDivisor, int stopDivisor) {\n        for(int divisor = startDivisor; divisor &lt;= stopDivisor; divisor++) {\n            if(num % divisor &gt; 0) return false;\n        }\n        return true;\n    }\n\n    public static void main(String[] args){\n        long start = System.currentTimeMillis();\n        long i = findMinimumWithAllDivisors();\n        long end = System.currentTimeMillis();\n        System.out.println(i);\n        System.out.println("Elapsed time " + (end - start));\n    }\n\n}\n</code></pre>\n\n<p>And in Clojure</p>\n\n<pre><code>(time (prn (HasAllDivisors/findMinimumWithAllDivisors)))\n\n(println "Now timing Clojure version")\n(time\n    (prn\n        (loop [i (long 1)]\n            (if (has-all-divisors i)\n                i\n                (recur (inc i))))))\n</code></pre>\n\n<p>Even on the command line the java class is not reproducing the fast speed.</p>\n\n<pre><code>$ time java HasAllDivisors\n  232792560\nElapsed time 4398\n\nreal   0m4.563s\nuser   0m4.597s\nsys    0m0.029s\n</code></pre>\n', '1698695', '', '1698695', '', '2013-04-13 16:39:20', '2013-04-13 16:39:20', '', '', 0, 1, '', '', ''),
(14116014, 2, '', '14116003', '2013-01-02 01:44:42', 10, 0, '<p><code>const</code> applies for <strong>variables</strong>, and <strong>prevents them from being modified</strong> in your code. </p>\n\n<p><code>constexpr</code> tells the compiler that this <strong>expression</strong> results in a <strong>compile time constant value</strong>, so it can be used in places like array lengths, assigning to <code>const</code> variables, etc. The <a href="http://stackoverflow.com/questions/4748083/when-should-you-use-constexpr-capability-in-c11">link</a> given by Oli has a lot of excellent examples. </p>\n\n<p>Basically they are 2 different concepts altogether, and can (and should) be used together.</p>\n', '1520364', '', '', '', '', '2013-01-02 01:44:42', '', '', 0, 0, '', '', ''),
(14117121, 2, '', '14116003', '2013-01-02 05:10:47', 49, 0, '<h2>Basic meaning and syntax</h2>\n\n<p>Both keywords can be used in the declaration of objects as well as functions. The basic difference when applied to <em>objects</em> is this:</p>\n\n<ul>\n<li><p><code>const</code> declares an object as <em>constant</em>. This implies a guarantee that, once initialized, the value of that object won''t change, and the compiler can make use of this fact for optimizations. It also helps prevent the programmer from writing code that modifies objects that were not meant to be modified after initialization.</p></li>\n<li><p><code>constexpr</code> declares an object as fit for use in what the Standard calls <em>constant expressions</em>. But note that <code>constexpr</code> is not the only way to do this.</p></li>\n</ul>\n\n<p>When applied to <em>functions</em> the basic difference is this:</p>\n\n<ul>\n<li><p><code>const</code> can only be used for non-static member functions, not functions in general. It gives a guarantee that the member function does not modify any of the non-static data members.</p></li>\n<li><p><code>constexpr</code> can be used with both member and non-member functions, as well constructors. It declares the function fit for use in <em>constant expressions</em>. The compiler will only accept it if the function meets certain criteria (7.1.5/3,4), most importantly <sup>(&dagger;)</sup>:</p>\n\n<ul>\n<li>The function body must be non-virtual and extremely simple: Apart from typedefs and static asserts, only a single <code>return</code> statement is allowed. In the case of a constructor, only an initialization list, typedefs and static assert are allowed. (<code>= default</code> and <code>= delete</code> are allowed, too, though.)</li>\n<li>The arguments and the return type must be <em>literal types</em> (i.e., generally speaking, very simple types, typically scalars or aggregates)</li>\n</ul></li>\n</ul>\n\n<h2>Constant expressions</h2>\n\n<p>As said above, <code>constexpr</code> declares both objects as well as functions as fit for use in constant expressions. A constant expression is more than merely constant:</p>\n\n<ul>\n<li><p>It can be used in places that require compile-time evaluation, for example, template parameters and array-size specifiers:</p>\n\n<pre><code>template &lt;int N&gt;\nclass fixed_size_list\n{ /*...*/ };\n\nfixed_size_list&lt;X&gt; mylist;     // &lt;-- X must be an integer constant expression\n\nint numbers[X];   // &lt;-- X must be an integer constant expression\n</code></pre></li>\n<li><p>But note:</p>\n\n<ul>\n<li><p>Declaring something as <code>constexpr</code> does not necessarily guarantee that it will be evaluated at compile time. It <em>can be used</em> for such, but it can be used in other places that are evaluated at run-time, as well.</p></li>\n<li><p>An object <em>may</em> be fit for use in constant expressions <em>without</em> being declared <code>constexpr</code>. Example:</p>\n\n<pre><code>int main() {\n  const int N = 3;\n\n  int numbers[N] = { 1 , 2, 3 };   // &lt;-- N is constant expression\n  /*...*/\n}\n</code></pre></li>\n</ul>\n\n<p>This is possible because <code>N</code>, being constant and initialized at declaration time with a literal, satisfies the criteria for a constant expression, even if it isn''t declared <code>constexpr</code>.</p></li>\n</ul>\n\n<p><strong>So when do I actually have to use <code>constexpr</code>?</strong></p>\n\n<ul>\n<li><p>An <strong>object</strong> like <code>N</code> above can be used as constant expression <em>without</em> being declared <code>constexpr</code>. This is true for all objects that are:</p>\n\n<ul>\n<li><code>const</code></li>\n<li>of integral or enumeration type <em>and</em></li>\n<li>initialized at declaration time with an expression that is itself a constant expression\n<br/><br/></li>\n</ul>\n\n<p><sub>[This is due to §5.19/2: A constant expression must not include a subexpressions that involves "an lvalue-to-rvalue modification unless [...] a glvalue of integral or enumeration type [...]". Thanks to Richard Smith for correcting my earlier claim that this was true of all literal types]</sub></p></li>\n<li><p>For a <strong>function</strong> to be fit for use in constant expressions, it <strong>must</strong> be explicitly declared <code>constexpr</code>; it is not sufficient for it merely to satisfy the criteria for constant-expression functions. Example:</p>\n\n<pre><code>template &lt;int N&gt;\nclass list\n{ };\n\nconstexpr int sqr1(int arg)\n{ return arg*arg; }\n\nint sqr2(int arg)\n{ return arg*arg; }\n\nint main()\n{\n  const int X = 2;\n\n  list&lt;sqr1(X)&gt; mylist1; // OK; sqr1 is constexpr\n  list&lt;sqr2(X)&gt; mylist2; // Wrong; sqr2 is not constexpr\n\n  return 0;\n}\n</code></pre></li>\n</ul>\n\n<p><strong>When can I / should I use both, <code>const</code> and <code>constexpr</code> <em>together?</em></strong></p>\n\n<p><strong>a) In object declarations</strong> This is never necessary when both keywords refer to the same object to be declared. <code>constexpr</code> implies <code>const</code>.</p>\n\n<pre><code>constexpr const int N = 5;\n</code></pre>\n\n<p>is the same as</p>\n\n<pre><code>constexpr int N = 5;\n</code></pre>\n\n<p>However, note that there may be situations when the keywords each refer to different parts of the declaration:</p>\n\n<pre><code>static constexpr int N = 3;\nint main()\n{\n  constexpr const int *NP = &amp;N;\n  return 0;\n}\n</code></pre>\n\n<p>Here, <code>NP</code> is declared as an address constant-expression, i.e. an pointer that is itself a constant expression. (This is possible when the address is generated by applying the address operator to a static/global constant expression.) Here, both <code>constexpr</code> and <code>const</code> are required: <code>constexpr</code> always refers to the expression being declared (here <code>NP</code>), while <code>const</code> refers to <code>int</code> (it declares a pointer-to-const). Removing the <code>const</code> would render the expression illegal (because (a) a pointer to a non-const object cannot be a constant expression and (b) <code>&amp;N</code> is in-fact a pointer-to-constant).</p>\n\n<p><strong>b) In member function declarations</strong> In C++11, <code>constexpr</code> implies <code>const</code> also for member functions. However, this is likely to change in C++14. According to the current drafts, <code>constexpr</code> will imply <code>const</code> <em>only for objects</em>, not for member functions, due to a proposed change to §7.1.5/8. Hence, a member function declared under C++11 as</p>\n\n<pre><code>constexpr void f();\n</code></pre>\n\n<p>will have to be declared as</p>\n\n<pre><code>constexpr void f() const;\n</code></pre>\n\n<p>under C++14 in order to still be usable as a <code>const</code> function. <strong>Best mark your <code>constexpr</code> member functions as <code>const</code> even now so as to avoid having to change a lot of code later on.</strong></p>\n\n<hr>\n\n<p><sup>(&dagger;)</sup> The conditions for acceptable <code>constexpr</code> functions will probably be relaxed for C++14. A <a href="http://isocpp.org/files/papers/N3652.html">proposal by Richard Smith</a> has recently been <a href="http://isocpp.org/blog/2013/04/n3652-relaxing-constraints-on-constexpr-functions">adopted into the C++14 draft</a>.</p>\n', '777186', '', '777186', '', '2013-07-21 05:17:57', '2013-07-21 05:17:57', '', '', 0, 16, '', '', ''),
(19137473, 2, '', '14116003', '2013-10-02 12:58:10', 6, 0, '<p>According to book of "The C++ Programming Language 4th Editon" by Bjarne Stroustrup<br>\n• <strong>const</strong>: meaning roughly ‘‘I promise not to change this value’’ (§7.5). This is used primarily\nto specify interfaces, so that data can be passed to functions without fear of it being modified.<br>\nThe compiler enforces the promise made by const.<br>\n• <strong>constexpr</strong>: meaning roughly ‘‘to be evaluated at compile time’’ (§10.4). This is used primarily to specify constants, to allow <br>\nFor example:<br></p>\n\n<pre><code>const int dmv = 17; // dmv is a named constant\nint var = 17; // var is not a constant\nconstexpr double max1 = 1.4*square(dmv); // OK if square(17) is a constant expression\nconstexpr double max2 = 1.4∗square(var); // error : var is not a constant expression\nconst double max3 = 1.4∗square(var); //OK, may be evaluated at run time\ndouble sum(const vector&lt;double&gt;&amp;); // sum will not modify its argument (§2.2.5)\nvector&lt;double&gt; v {1.2, 3.4, 4.5}; // v is not a constant\nconst double s1 = sum(v); // OK: evaluated at run time\nconstexpr double s2 = sum(v); // error : sum(v) not constant expression\n</code></pre>\n\n<p>For a function to be usable in a constant expression, that is, in an expression that will be evaluated\nby the compiler, it must be defined <strong>constexpr</strong>.<br> For example:</p>\n\n<pre><code>constexpr double square(double x) { return x∗x; }\n</code></pre>\n\n<p><br>\nTo be constexpr, a function must be rather simple: just a return-statement computing a value. A\nconstexpr function can be used for non-constant arguments, but when that is done the result is not a\nconstant expression. We allow a constexpr function to be called with non-constant-expression arguments\nin contexts that do not require constant expressions, so that we don’t hav e to define essentially\nthe same function twice: once for constant expressions and once for variables.<br>\nIn a few places, constant expressions are required by language rules (e.g., array bounds (§2.2.5,\n§7.3), case labels (§2.2.4, §9.4.2), some template arguments (§25.2), and constants declared using\nconstexpr). In other cases, compile-time evaluation is important for performance. Independently of\nperformance issues, the notion of immutability (of an object with an unchangeable state) is an\nimportant design concern (§10.4).</p>\n', '687817', '', '687817', '', '2013-10-02 13:29:56', '2013-10-02 13:29:56', '', '', 0, 1, '', '', ''),
(14116626, 2, '', '14116194', '2013-01-02 03:41:54', 3, 0, '<p>It turns out the reason why <code>UIImageRepresentation</code> was performing so poorly was because it was decompressing the original image <em>every time</em> even though I <em>thought</em> I was creating a new image with <code>CGImageCreateWithImageInRect</code>.</p>\n\n<p>You can see the results from Instruments here:</p>\n\n<p><img src="http://i.stack.imgur.com/cOjxq.png" alt="enter image description here"></p>\n\n<p>Notice <code>_cg_jpeg_read_scanlines</code> and <code>decompress_onepass</code>.</p>\n\n<p>I <em>was</em> force-decompressing the image with this:</p>\n\n<pre><code>UIImage *image = [UIImage imageWithContentsOfFile:path];\nUIGraphicsBeginImageContext(CGSizeMake(1, 1));\n[image drawAtPoint:CGPointZero];\nUIGraphicsEndImageContext();\n</code></pre>\n\n<p>The timing of this was about 0.10 seconds, almost equivalent to the time taken by each <code>UIImageRepresentation</code> call.</p>\n\n<p>There are numerous articles over the internet that recommend drawing as a way of force decompressing an image.</p>\n\n<p>There''s an article on Cocoanetics <a href="http://www.cocoanetics.com/2011/10/avoiding-image-decompression-sickness/" rel="nofollow">Avoiding Image Decompression Sickness</a>. The article provides an alternate way of loading the image:</p>\n\n<pre><code>NSDictionary *dict = [NSDictionary dictionaryWithObject:[NSNumber numberWithBool:YES]\n                                                 forKey:(id)kCGImageSourceShouldCache];\nCGImageSourceRef source = CGImageSourceCreateWithURL((__bridge CFURLRef)[[NSURL alloc] initFileURLWithPath:path], NULL);\nCGImageRef cgImage = CGImageSourceCreateImageAtIndex(source, 0, (__bridge CFDictionaryRef)dict);\nUIImage *image = [UIImage imageWithCGImage:cgImage];\nCGImageRelease(cgImage);\nCFRelease(source);\n</code></pre>\n\n<p>And now the same process takes about 3 seconds! Using GCD to generate tiles in parallel reduces the time more significantly.</p>\n\n<p>The <code>writeCGImage</code> function above takes about 5 seconds. Since the file sizes are smaller, I suspect the zlib compression is at a higher level.</p>\n', '867760', '', '867760', '', '2014-02-05 17:06:48', '2014-02-05 17:06:48', '', '', 0, 0, '', '', ''),
(14116513, 2, '', '14116420', '2013-01-02 03:20:58', 22, 0, '<p>Use <code>--whole-archive</code> linker option.</p>\n\n<p>Libraries that come <em>after</em> it in the command line will not have unreferenced symbols discarded. You can resume normal linking behaviour by adding <code>--no-whole-archive</code> after these libraries.</p>\n\n<p>In your example, the command will be:</p>\n\n<pre><code>g++ -o program main.o -Wl,--whole-archive /path/to/libmylib.a\n</code></pre>\n\n<p>In general, it will be:</p>\n\n<pre><code>g++ -o program main.o \\\n    -Wl,--whole-archive -lmylib \\\n    -Wl,--no-whole-archive -llib1 -llib2\n</code></pre>\n', '23643', '', '', '', '', '2013-01-02 03:20:58', '', '', 0, 0, '', '', ''),
(14116521, 2, '', '14116420', '2013-01-02 03:21:42', 4, 0, '<p>The original suggestion was "close":</p>\n\n<ul>\n<li><a href="http://stackoverflow.com/questions/4767925/how-to-force-gcc-to-link-unreferenced-static-c-objects-from-a-libraray">How to force gcc to link unreferenced, static C++ objects from a libraray</a></li>\n</ul>\n\n<p>Try this:  <code>-Wl,--whole-archive -lyourlib</code></p>\n', '421195', '', '', '', '', '2013-01-02 03:21:42', '', '', 0, 0, '', '', ''),
(14117330, 2, '', '14116420', '2013-01-02 05:38:36', 2, 0, '<p>I like the other answers better, but here is another "solution".</p>\n\n<ol>\n<li><p>Use the ar command to extract all the .o files from the archive.</p>\n\n<p>cd mylib ; ar x /path/to/libmylib.a</p></li>\n<li><p>Then add all those .o files to the linker command</p>\n\n<p>g++ -o program main.o mylib/*.o</p></li>\n</ol>\n', '1862101', '', '', '', '', '2013-01-02 05:38:36', '', '', 0, 0, '', '', ''),
(14117348, 2, '', '14116882', '2013-01-02 05:40:19', 20, 0, '<p>There is an explicit logout service i.e. <code>/auth/logout</code> as part of the <a href="https://github.com/ServiceStack/ServiceStack/wiki/Authentication-and-authorization">ServiceStack''s Authentication support</a> that you should use instead.</p>\n\n<p>You can do a GET or POST to <code>/auth/logout</code> or if you''re using C# client you can logout with:</p>\n\n<pre><code>client.Post(new Auth { provider = "logout" });\n</code></pre>\n', '85785', '', '', '', '', '2013-01-02 05:40:19', '', '', 0, 3, '', '', ''),
(19931428, 2, '', '14116882', '2013-11-12 14:11:03', 5, 0, '<p>On ServiceStack v4 you will need this line instead.</p>\n\n<pre><code>client.Post(new Authenticate { provider = AuthenticateService.LogoutAction });\n</code></pre>\n', '1195872', '', '', '', '', '2013-11-12 14:11:03', '', '', 0, 0, '', '', ''),
(14127382, 2, '', '14117114', '2013-01-02 18:43:26', 1, 0, '<p>I had a similar problem recently.</p>\n\n<p>Looks like the same problem as: <a href="http://stackoverflow.com/questions/13979550/cant-run-any-rake-command-error-rake-rdoctask-is-obsolete-and-no-longer-su">Can&#39;t run any rake command: &quot;ERROR: &#39;rake/rdoctask&#39; is obsolete and no longer supported&quot;</a></p>\n\n<p>I solved it by upgrading to Rails 3.2.9.</p>\n', '52570', '', '', '', '', '2013-01-02 18:43:26', '', '', 0, 1, '', '', ''),
(14154890, 2, '', '14117114', '2013-01-04 09:59:40', 50, 0, '<p>I had similar problem using rails 2.3.5 so as instructed in the trace message I have edited the Rakefile to require ''rdoc/task'' instead of rake/rdoctask and installed rdoc gem. </p>\n\n<p>If you are using rake version > 10.0.0 . please edit your Rakefile </p>\n\n<p>from:</p>\n\n<pre><code>require ''rake''\nrequire ''rake/testtask''\nrequire ''rake/rdoctask''\nrequire ''tasks/rails''\n</code></pre>\n\n<p>to:</p>\n\n<pre><code>require ''rake''\nrequire ''rake/testtask''\nrequire ''rdoc/task''\nrequire ''tasks/rails''\n</code></pre>\n\n<p>If you don''t want to edit the Rakefile you can switch back to older version of take like this </p>\n\n<pre><code>gem uninstall rake -v 10.0.3\ngem install rake -v 0.8.7\n</code></pre>\n', '554852', '', '554852', '', '2013-03-22 08:30:58', '2013-03-22 08:30:58', '', '', 0, 7, '', '', ''),
(14280543, 2, '', '14117114', '2013-01-11 14:48:50', 22, 0, '<p>I ran into similar problem when migrating my old app to rails 2.3.15. I solved it by installing an older version of rake, and uninstalling current 10.0.3 version:</p>\n\n<pre><code>gem install rake --version 0.8.7\ngem uninstall rake --version 10.0.3\n</code></pre>\n', '1374397', '', '', '', '', '2013-01-11 14:48:50', '', '', 0, 3, '', '', ''),
(14487079, 2, '', '14117114', '2013-01-23 18:46:59', 1, 0, '<p>This probably isn''t the right way to do this, but I went into my Gemfile.lock file and changed my rake version back from 10.0.3 to 0.8.7. I''m running Rails 3.0.5 right now, and had updated briefly to 3.0.19 before reverting back. I believe that updated some gems and also made it so that the Rails gem was looking for the newest version greater than or equal to 0.8.7:</p>\n\n<pre><code>rails (3.0.5)\n  actionmailer (= 3.0.5)\n  actionpack (= 3.0.5)\n  activerecord (= 3.0.5)\n  activeresource (= 3.0.5)\n  activesupport (= 3.0.5)\n  bundler (~&gt; 1.0)\n  railties (= 3.0.5)\nrailties (3.0.5)\n  actionpack (= 3.0.5)\n  activesupport (= 3.0.5)\n  rake (&gt;= 0.8.7)\n  thor (~&gt; 0.14.4)\nrake (0.8.7)\n</code></pre>\n\n<p>I also uninstalled 10.0.3:</p>\n\n<pre><code>gem uninstall rake --version 10.0.3\n</code></pre>\n\n<p>After that, everything is back to running as it should. </p>\n\n<p>If I didn''t roll back rails 3.0.19, then I would have kept using rake 10.0.3.</p>\n\n<p>Hope this helps someone!</p>\n', '925743', '', '925743', '', '2013-03-11 15:31:23', '2013-03-11 15:31:23', '', '', 0, 1, '', '', ''),
(14490508, 2, '', '14117114', '2013-01-23 22:23:34', 1, 0, '<p>Like the original poster, I don''t have a require of rake/rdoctask.\nUpgrading my rails is not an option.  The answer is to keep your rake at 0.9.2.2 in your Gemfile.</p>\n', '74074', '', '', '', '', '2013-01-23 22:23:34', '', '', 0, 0, '', '', ''),
(15079773, 2, '', '14117114', '2013-02-26 01:30:08', 5, 0, '<p>I had to fix this while not breaking on places that have old rake but not rdoc installed. I added a begin...rescue clause:</p>\n\n<pre><code>begin\n  require ''rake/rdoctask''\nrescue\n  require ''rdoc/task''\nend\n</code></pre>\n', '3461', '', '', '', '', '2013-02-26 01:30:08', '', '', 0, 0, '', '', ''),
(16585648, 2, '', '14117114', '2013-05-16 10:58:42', 3, 0, '<p>I came across the same issue...I did what <I>GiridharBandi</I> mentioned above: </p>\n\n<pre><code>require ''rake''\nrequire ''rake/testtask''\nrequire ''rake/rdoctask''\nrequire ''tasks/rails''\n</code></pre>\n\n<p>to:</p>\n\n<pre><code>require ''rake''\nrequire ''rake/testtask''\nrequire ''rdoc/task''\nrequire ''tasks/rails''\n</code></pre>\n\n<p>Rake version 10.0.4 was there in the gem list but when I tried to uninstall, it said that rake is not installed. So I ignored this and proceeded to install rake 0.8.7. Once its installed, I installed rdoc</p>\n\n<pre><code>gem install rdoc\n\n&lt;= 1.8.6 : unsupported\n = 1.8.7 : gem install rdoc-data; rdoc-data --install\n = 1.9.1 : gem install rdoc-data; rdoc-data --install\n&gt;= 1.9.2 : nothing to do! Yay!\n</code></pre>\n\n<p>and then everything started working just fine. </p>\n\n<p>For rails 3.0.6, with the same kind of error:</p>\n\n<pre><code>ERROR: ''rake/rdoctask'' is obsolete and no longer supported. Use ''rdoc/task'' (available in RDoc 2.4.2+) instead.\n</code></pre>\n\n<p>I installed rake 0.9.2 and also rdoc. commented out the #require ''tasks/rails'' and then everything started working. I think rake problem is resolved in rails > 3.2.9.</p>\n', '1620673', '', '1620673', '', '2013-11-09 14:28:27', '2013-11-09 14:28:27', '', '', 0, 0, '', '', ''),
(17247129, 2, '', '14117114', '2013-06-22 03:44:25', 5, 0, '<p>I got it to work by putting </p>\n\n<p>gem ''rake'', ''0.9.2.2''</p>\n\n<p>in my Gemfile and then running rake as</p>\n\n<pre><code>bundle exec rake db:migrate\n</code></pre>\n', '148635', '', '', '', '', '2013-06-22 03:44:25', '', '', 0, 1, '', '', ''),
(18167656, 2, '', '14117114', '2013-08-11 00:37:05', 0, 0, '<p>I run into this whenever I have a Bundler-based project and I''m using Ruby 1.9.<strong><em>2</em></strong>. Eventually I figure out that Bundler isn''t managing the rdoc gem, and all I have to do to fix the problem is include rdoc in the Gemfile (or the gemspec if Gemfile is already configured to use it) and run <code>bundle install</code>.</p>\n\n<p>I never seem to run into this with 1.9.3 or 2.0.0, only 1.9.2.</p>\n', '549521', '', '', '', '', '2013-08-11 00:37:05', '', '', 0, 0, '', '', ''),
(20237075, 2, '', '14117114', '2013-11-27 08:15:29', 0, 0, '<p>Oh my god, I was figting with this for almost hour and finally here is my case (may help someone :) ):\nI got myself multiple rails versions installed\nso I just uninstalled the latest one as I want to use the most edgy one (the 4.0.1 for now)</p>\n\n<p>so :</p>\n\n<pre><code>$ gem uninstall rails\n</code></pre>\n\n<p>and I got this:</p>\n\n<pre><code>Select gem to uninstall:\n 1. rails-0.9.5\n 2. rails-4.0.0\n 3. rails-4.0.1\n 4. All versions\n&gt;\n</code></pre>\n\n<p>so I selected first two and that was it :)\nnow everything is OK \nhope this helps someone who got mysteriously stuck as me :(</p>\n', '980430', '', '', '', '', '2013-11-27 08:15:29', '', '', 0, 0, '', '', ''),
(14119294, 2, '', '14119277', '2013-01-02 09:04:19', 33, 0, '<p>Use <a href="http://msdn.microsoft.com/en-us/library/ms189794.aspx">DATEDIFF</a></p>\n\n<pre><code>Select I.Fee\nFrom Item I\nWHERE  DATEDIFF(day, GETDATE(), I.DateCreated) &lt; 365\n</code></pre>\n', '961113', '', '', '', '', '2013-01-02 09:04:19', '', '', 0, 2, '', '', ''),
(14119297, 2, '', '14119277', '2013-01-02 09:04:33', 4, 0, '<p>use <code>DATE_DIFF</code></p>\n\n<pre><code>Select I.Fee\nFrom   Item I\nWHERE  DATEDIFF(day, GETDATE(), I.DateCreated)  &lt; 365\n</code></pre>\n\n<ul>\n<li><a href="http://msdn.microsoft.com/en-us/library/ms189794.aspx" rel="nofollow">DATE_DIFF</a></li>\n</ul>\n', '491243', '', '', '', '', '2013-01-02 09:04:33', '', '', 0, 1, '', '', ''),
(14119887, 2, '', '14119277', '2013-01-02 09:51:05', 4, 0, '<p>EDIT:\nIt seems I was wrong about the performance on the code example.\nThe best performer is whichever snippet runs second in the posted case.\nThis demonstrates what I was trying to explain, and the time differences are not as dramatic:</p>\n\n<pre><code>----------------------------------\n--  Monitor time differences\n----------------------------------\nCREATE CLUSTERED INDEX dtIDX ON #ArbDates (MyDate)\nDECLARE @Stopwatch DATETIME \nSET @Stopwatch = GETDATE()\n    -- SARGABLE\n    SELECT *\n    FROM #ArbDates\n    WHERE MyDate &gt; DATEADD(DAY, -364, ''2010-01-01'')\n\n\nPRINT DATEDIFF(MS, @Stopwatch, GETDATE())\nSET @Stopwatch = GETDATE()\n    -- NOT SARGABLE\n    SELECT *\n    FROM #ArbDates\n    WHERE DATEDIFF(DAY, MyDate, ''2010-01-01'') &lt; 365\nPRINT DATEDIFF(MS, @Stopwatch, GETDATE())\n</code></pre>\n\n<p>Excuse me for posting late and my crudely commented example, but I think it important to mention <a href="http://en.wikipedia.org/wiki/Sargable" rel="nofollow">SARG</a>.</p>\n\n<pre><code>SELECT I.Fee\nFROM Item I\nWHERE  I.DateCreated &gt; DATEADD(DAY, -364, GETDATE())\n</code></pre>\n\n<p>Although the temp table in the code below has no index, the performance is still enhanced by the fact that a comparison is done between an expression and a value in the table and not an expression that modifies the value in the table and a constant.\nHope this is found to be useful.</p>\n\n<pre><code>USE tempdb\nGO\n\nIF OBJECT_ID(''tempdb.dbo.#ArbDates'') IS NOT NULL DROP TABLE #ArbDates\nDECLARE @Stopwatch DATETIME \n\n----------------------------------\n--  Build test data: 100000 rows\n----------------------------------\n;WITH Base10 (n) AS\n(\n    SELECT 1 UNION ALL  SELECT 1 UNION ALL  SELECT 1 UNION ALL\n    SELECT 1 UNION ALL  SELECT 1 UNION ALL  SELECT 1 UNION ALL\n    SELECT 1 UNION ALL  SELECT 1 UNION ALL  SELECT 1 UNION ALL\n    SELECT 1\n)\n,Base100000 (n) AS\n(\n    SELECT 1\n    FROM Base10 T1, Base10 T3, Base10 T4, Base10 T5, Base10 T6\n)\nSELECT MyDate = CAST(RAND(CHECKSUM(NEWID()))*3653.0+36524.0 AS DATETIME) \nINTO #ArbDates \nFROM Base100000\n\n----------------------------------\n--  Monitor time differences\n----------------------------------\nSET @Stopwatch = GETDATE()\n\n    -- NOT SARGABLE\n    SELECT *\n    FROM #ArbDates\n    WHERE DATEDIFF(DAY, MyDate, ''2010-01-01'') &lt; 365\n\nPRINT DATEDIFF(MS, @Stopwatch, GETDATE())\nSET @Stopwatch = GETDATE()\n\n    -- SARGABLE\n    SELECT *\n    FROM #ArbDates\n    WHERE MyDate &gt; DATEADD(DAY, -364, ''2010-01-01'')\n\nPRINT DATEDIFF(MS, @Stopwatch, GETDATE())\n</code></pre>\n', '1939103', '', '1939103', '', '2013-01-02 10:10:27', '2013-01-02 10:10:27', '', '', 0, 1, '', '', ''),
(14123216, 2, '', '14119277', '2013-01-02 13:45:58', 0, 0, '<pre><code>SELECT (to_date(''02-JAN-2013'') - to_date(''02-JAN-2012'')) days_between\nFROM dual\n/\n</code></pre>\n', '1934744', '', '', '', '', '2013-01-02 13:45:58', '', '', 0, 0, '', '', ''),
(17584989, 2, '', '14119277', '2013-07-11 04:18:10', 1, 0, '<p>How about </p>\n\n<pre><code>Select I.Fee\nFrom Item I\nWHERE  (days(GETDATE()) - days(I.DateCreated) &lt; 365)\n</code></pre>\n', '2571074', '', '', '', '', '2013-07-11 04:18:10', '', '', 0, 0, '', '', ''),
(16344827, 2, '', '14120223', '2013-05-02 18:07:23', 1, 0, '<blockquote>\n  <p>Is there a real-world scenario where a derived class uses a different allocator from its base, and relies on a virtual destructor to find the correct member <code>operator delete</code>?</p>\n</blockquote>\n\n<p>I am not sure what you would consider a real-world scenario, but the obvious example that comes to my mind is an inheritance hierarchy that''s rooted in an abstract base class, with vastly different (in size) derived classes, a lot of which are created and destroyed regularly, while speed is required for those allocations/deallocations. </p>\n\n<p>You might want custom allocators for those derived classes, because allocators for memory blobs of a specific size can be lightning fast, and you might want to use different allocators for each derived class, because their sizes are so different. </p>\n\n<p>I can''t give you a concrete example for this, though, because over the years I have found that <em>avoiding</em> allocation/deallocation pays off way better than speeding it up, so in almost twenty years I have rarely ever overloaded class-specific <code>new</code>/<code>delete</code>. (Of course, as usually when we''re talking about sophisticated optimization, "gaming" comes up, so we could imagine a game that needs to create and destroy vast amounts of very different entities.)</p>\n', '140719', '', '', '', '', '2013-05-02 18:07:23', '', '', 0, 3, '', '', ''),
(16348071, 2, '', '14120223', '2013-05-02 21:31:57', 5, 0, '<p>I''ve actually never used new/delete overloads in a derived class or have I ever thought about it, but this question was interesting and I decided to perform some research and give it a shot.  I found a couple suitable references:</p>\n\n<p><strong>ARM</strong>\n<a href="http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.faqs/ka14267.html">http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.faqs/ka14267.html</a></p>\n\n<p>This reference actually has sample code of a derived class overloading its base class overloaded new.</p>\n\n<p><strong>Vanderbilt University</strong> <a href="http://www.vuse.vanderbilt.edu/~adamsja/Courses/CS251/Projects/4/memPool.pdf">http://www.vuse.vanderbilt.edu/~adamsja/Courses/CS251/Projects/4/memPool.pdf</a></p>\n\n<p>This reference doesn''t provide any material explicitly regarding overloading new in a derived class, however, it mentions some interesting reasons as why to overload new. Those reasons include:</p>\n\n<ul>\n<li>To compensate for suboptimal alignment in the default allocator</li>\n<li>To cluster related objects near one another</li>\n<li>To obtain unconventional behavior such as overwriting memory with zeros to increase the security of the application data</li>\n</ul>\n\n<p>Now based upon those two references, I''ve decided that there could be a few reasons for overloading new/delete in a derived class.  My reasons basically align with the reasons I listed from the VU presentation, but also seem relevant based upon the ARM reference implying to me an embedded or specialized scenario.</p>\n\n<ul>\n<li>Embedded systems are often very custom at the hardware level, however, are common in a standardized sense at the software level.  I could see a situation where depending on a configuration setting/hardware strap, that at run-time a certain type of object (derived class) is chosen because it needs to allocate memory in a specific manner or specific location.</li>\n<li>Clustering seems plausible because I could envision a scenario where some objects are treated the same in a high-level "workflow" but when processed, the different types of those objects are handled very differently.  It might be beneficial to locate specific types of objects near each other for process intensive tasks (ie. searching, sorting, prioritizing, etc).</li>\n<li>The last point is interesting because I could see certain cases where the allocation depends on the security classification of the information being stored.</li>\n</ul>\n\n<p>Again, I haven''t ever found a reason or actually implemented something like you have mentioned, but these are my thoughts with a little investigation.</p>\n', '1063119', '', '', '', '', '2013-05-02 21:31:57', '', '', 0, 1, '', '', '');
INSERT INTO `Posts` (`Id`, `PostTypeId`, `AcceptedAnswerId`, `ParentId`, `CreationDate`, `Score`, `ViewCount`, `Body`, `OwnerUserId`, `OwnerDisplayName`, `LastEditorUserId`, `LastEditorDisplayName`, `LastEditDate`, `LastActivityDate`, `Title`, `Tags`, `AnswerCount`, `CommentCount`, `FavoriteCount`, `ClosedDate`, `CommunityOwnedDate`) VALUES
(16350661, 2, '', '14120223', '2013-05-03 02:26:17', 0, 0, '<p>A member <code>operator new</code>/<code>delete</code> may be useful to remove undesirable custom allocation from a base class, for example if the base wasn''t intended to be extended. But the base would either need a virtual destructor, or the base object must never be the subject of <code>delete</code>.</p>\n\n<p>Actually, the virtual destructor dispatch of <code>operator delete</code> is required independently of overloading. The feature probably exists to support multiple inheritance, and dynamically finding the correct member <code>operator delete</code> is just a side effect.</p>\n\n<p>The rule is simply that a virtual destructor for a most-derived object calls <code>operator delete</code>. The main reason is to pass the correct most-derived pointer and size. That the context also enables the program to dynamically find the correct deallocation function is just a happy side effect.</p>\n\n<p>So there may or may not be a useful application for dynamic <code>delete</code> dispatch, but there absolutely isn''t a dedicated mechanism to make it work.</p>\n\n<p><a href="http://ideone.com/ubOz9o" rel="nofollow">Simple demo</a>:</p>\n\n<pre><code>struct pad {\n    int x;\n\n    virtual ~pad() {}\n};\n\nstruct b {\n    int x;\n};\n\nstruct vb {\n    int x;\n\n    virtual ~vb() {}\n};\n\nstruct d : pad, b, vb {};\n\nvoid operator delete( void *p ) {\n    std::cout &lt;&lt; "free " &lt;&lt; p &lt;&lt; ''\\n'';\n}\n\nint main() {\n    std::cout &lt;&lt; "With virtual destructor:\\n";\n    d *p = new d;\n    std::cout &lt;&lt; "allocate " &lt;&lt; p &lt;&lt; ", delete " &lt;&lt; static_cast&lt; vb * &gt;( p ) &lt;&lt; ''\\n'';\n    delete static_cast&lt; vb * &gt;( p );\n\n    std::cout &lt;&lt; "With plain destructor:\\n";\n    p = new d;\n    std::cout &lt;&lt; "allocate " &lt;&lt; p &lt;&lt; ", delete " &lt;&lt; static_cast&lt; b * &gt;( p ) &lt;&lt; ''\\n'';\n    delete static_cast&lt; b * &gt;( p );\n}\n</code></pre>\n', '153285', '', '153285', '', '2013-05-03 02:45:09', '2013-05-03 02:45:09', '', '', 0, 0, '', '', ''),
(16377459, 2, '', '14120223', '2013-05-04 18:15:04', 7, 0, '<p>I''ve actually used this in the past!  It''s useful for non-uniform memory architectures -- platforms with very small very fast memory areas without an OS, etc.</p>\n\n<p>Specifically, envision e.g. an ARM chip with a small amount of TCM (tightly coupled memory; essentially, SRAM embedded on the SoC, with e.g. 1-cycle access time).</p>\n\n<p>We then use profiler results very late in product development -- just before shipping (imagine that this is a cartridge for a popular handheld game system, for example) -- to determine that certain classes would benefit from being in this faster SRAM.</p>\n\n<p>A simple member <code>operator new</code> that takes advantage of this TCM for just derived classes now may make sense: we can''t afford to have the entire class hierarchy using this SRAM, but for certain low-instantiation-count but heavily-used derived classes, it becomes a simple and effective optimization.  We''ve gotten back 2%-10% or more of frame time in a few cases by redirecting certain allocations this way.</p>\n', '80074', '', '', '', '', '2013-05-04 18:15:04', '', '', 0, 2, '', '', ''),
(14120721, 2, '', '14120661', '2013-01-02 10:49:16', 42, 0, '<p>use <code>Date.Civil</code></p>\n\n<p>With <code>Date.civil(y, m, d)</code> or its alias <code>.new(y, m, d)</code>, you can create a new Date object. The values for day (d) and month (m) can be negative in which case they count backwards from the end of the year and the end of the month respectively.</p>\n\n<pre><code>=&gt; Date.civil(2010, 02, -1)\n=&gt; Sun, 28 Feb 2010\n&gt;&gt; Date.civil(2010, -1, -5)\n=&gt; Mon, 27 Dec 2010\n</code></pre>\n', '877819', '', '877819', '', '2013-01-02 12:01:56', '2013-01-02 12:01:56', '', '', 0, 4, '', '', ''),
(14121669, 2, '', '14120661', '2013-01-02 11:59:48', 20, 0, '<p>To get the end of the month you can also use ActiveSupport''s helper <code>end_of_month</code>.</p>\n\n<pre><code># Require extensions explicitly if you are not in a Rails environment\nrequire ''active_support/core_ext'' \n\np Time.now.utc.end_of_month # =&gt; 2013-01-31 23:59:59 UTC\np Date.today.end_of_month   # =&gt; Thu, 31 Jan 2013\n</code></pre>\n\n<p>You can find out more on <a href="http://api.rubyonrails.org/classes/Date.html#method-i-end_of_month">end_of_month</a> in the Rails API Docs.</p>\n', '1606888', '', '', '', '', '2013-01-02 11:59:48', '', '', 0, 1, '', '', ''),
(26308288, 2, '', '14120661', '2014-10-10 21:28:42', 5, 0, '<p>So I was searching in Google for the same thing here...</p>\n\n<p>I wasn''t happy with above so my solution after reading documentation \nin <a href="http://ruby-doc.org/stdlib-2.1.3/libdoc/date/rdoc/Date.html" rel="nofollow">RUBY-DOC</a> was:</p>\n\n<p>Example to get <code>10/31/2014</code></p>\n\n<p><code>Date.new(2014,10,1).next_month.prev_day</code></p>\n', '4130927', '', '3557336', '', '2014-10-10 22:10:32', '2014-10-10 22:10:32', '', '', 0, 1, '', '', ''),
(14125030, 2, '', '14120711', '2013-01-02 15:55:52', 17, 0, '<p>My guess is that you are running on ARM <em>in Thumb mode</em>, or on some other architecture that uses the bottom bit of the function pointer to indicate which mode to run in.</p>\n\n<p>If so, the answer is that your function <em>really is located at the address in the system.map</em>.</p>\n\n<p>The value you get at run time is the location <em>and the mode</em>.</p>\n\n<p>Instructions, on these kinds of architectures, always must be 2- or 4-byte aligned, which would leave the bottom bit always zero. When the architecture grew an extra mode the designers made use of the ''wasted'' bit to encode the mode. It''s clever, but confusing, and not just for you: a lot of software, like debuggers, broke in many nasty ways when this was first invented.</p>\n\n<p>The concept is particularly confusing for x86 programmers who are used to variable-length instructions with any random alignment.</p>\n', '1057909', '', '', '', '', '2013-01-02 15:55:52', '', '', 0, 5, '', '', '');

-- --------------------------------------------------------

--
-- Table structure for table `SuggestedEdits`
--

CREATE TABLE IF NOT EXISTS `SuggestedEdits` (
  `Id` int(7) DEFAULT NULL,
  `PostId` int(8) DEFAULT NULL,
  `CreationDate` varchar(19) DEFAULT NULL,
  `ApprovalDate` varchar(19) DEFAULT NULL,
  `RejectionDate` varchar(19) DEFAULT NULL,
  `OwnerUserId` int(7) DEFAULT NULL,
  `Comment` varchar(53) DEFAULT NULL,
  `Text` varchar(7168) DEFAULT NULL,
  `Title` varchar(71) DEFAULT NULL,
  `Tags` varchar(35) DEFAULT NULL,
  `RevisionGUID` varchar(36) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `SuggestedEdits`
--

INSERT INTO `SuggestedEdits` (`Id`, `PostId`, `CreationDate`, `ApprovalDate`, `RejectionDate`, `OwnerUserId`, `Comment`, `Text`, `Title`, `Tags`, `RevisionGUID`) VALUES
(523078, 14107979, '2013-01-01 05:15:08', '', '2013-01-01 05:16:12', 1538079, 'Better title', '', 'How can i make specific part Blur of an image (rectangular, circular) ?', '', 'efbc9823-3d51-471d-8431-cb4468457d28'),
(523615, 14114419, '2013-01-01 21:35:31', '2013-01-01 21:36:39', '', 1296660, 'Replace spaces with hypens', 'Easy peasy:\r\n\r\n    function clean($string) {\r\n       $string = str_replace(" ", "-", $string);\r\n       return preg_replace(''/[^A-Za-z0-9\\-]/'', '''', $string);\r\n    }\r\n\r\n<b>Usage:</b>\r\n    \r\n    echo clean(''a|"bc!@£de^&$fg'');\r\n\r\nWill output: `abcdefg`', '', '', '502a7df7-55b0-48d3-a9fb-9c123b1f3882'),
(523616, 14114411, '2013-01-01 21:37:18', '', '2013-01-01 21:38:09', 1052743, 'Added ''seo'' tag', '', '', 'php regex seo', 'dce76142-f83f-49b4-bcd5-b71dd18ba5dc'),
(555089, 14120652, '2013-01-23 23:08:49', '', '2013-01-23 23:17:49', 835145, 'Downvoted by accident; recovering my vote', 'Hey just a FYI about the usability and ___what difference it makes or can make if there is a statement like that___\r\n\r\nConsider a piece of code like following\r\n\r\n    int a=10;\r\n    if((a=50)==50);\r\n    \r\n    System.out.println("Value of a = " +a);\r\n\r\nClearly in this case, the if statement does change the output. So a statement like that can make a difference. \r\n\r\n\r\nThis is one situation where it could be useful or better to say have an impact on program.\r\n', '', '', '7ca8fadc-6dc0-41bc-8412-0fc0593c3c46'),
(592383, 14974123, '2013-02-20 07:27:47', '2013-02-20 07:28:14', '', 938024, 'improved format and corrected spelling', 'instead of using mongoimport `-d DATABASE_NAME -c COLLECTION_NAME --file YOUR_JSON_FILE`, use following command mongoimport: `-d DATABASE_NAME -c COLLECTION_NAME --file YOUR_JSON_FILE --jsonArray`.', '', '', '5893874e-61d1-4713-b447-7ff651da08a6'),
(749535, 14115701, '2013-06-07 01:39:16', '2013-06-07 01:48:51', '', 1015177, 'Add syntax hilighting', 'I am trying to create a directive that would create an input field with the same ng-model as the element that creates the directive.\r\n\r\nHere''s what I came up with so far:\r\n\r\n__HTML__\r\n\r\n<!-- language: lang-html -->\r\n\r\n    <!doctype html>\r\n    <html ng-app="plunker" >\r\n    <head>\r\n      <meta charset="utf-8">\r\n      <title>AngularJS Plunker</title>\r\n      <link rel="stylesheet" href="style.css">\r\n      <script>document.write("<base href=\\"" + document.location + "\\" />");</script>\r\n      <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>\r\n      <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.0.2/angular.js"></script>\r\n      <script src="app.js"></script>\r\n    </head>\r\n    <body ng-controller="MainCtrl">\r\n      This scope value <input ng-model="name">\r\n      <my-directive ng-model="name"></my-directive>\r\n    </body>\r\n    </html>\r\n\r\n__JavaScript__\r\n\r\n<!-- language: lang-js -->\r\n\r\n    var app = angular.module(''plunker'', []);\r\n    \r\n    app.controller(''MainCtrl'', function($scope) {\r\n      $scope.name = "Felipe";\r\n    });\r\n    \r\n    app.directive(''myDirective'', function($compile) {\r\n      return {\r\n        restrict: ''E'',\r\n        scope: {\r\n          ngModel: ''=''\r\n        },\r\n        template: ''<div class="some"><label for="{{id}}">{{label}}</label>'' +\r\n          ''<input id="{{id}}" ng-model="value"></div>'',\r\n        replace: true,\r\n        require: ''ngModel'',\r\n        link: function($scope, elem, attr, ctrl) {\r\n          $scope.label = attr.ngModel;\r\n          $scope.id = attr.ngModel;\r\n          console.debug(attr.ngModel);\r\n          console.debug($scope.$parent.$eval(attr.ngModel));\r\n          var textField = $(''input'', elem).\r\n            attr(''ng-model'', attr.ngModel).\r\n            val($scope.$parent.$eval(attr.ngModel));\r\n    \r\n          $compile(textField)($scope.$parent);\r\n        }\r\n      };\r\n    });\r\n\r\nHowever, I am not confident this is the right way to handle this scenario, and there is a bug that my control is not getting initialized with the value of the ng-model target field.\r\n\r\nHere''s a Plunker of the code above: http://plnkr.co/edit/IvrDbJ\r\n\r\nWhat''s the correct way of handling this?\r\n\r\n__EDIT__: After removing the `ng-model="value"` from the template, this seems to be working fine. However, I will keep this question open because I want to double check this is the right way of doing this.', '', '', 'c489b11e-a079-4a7d-9e85-b026d79fc877'),
(920970, 14108694, '2013-09-30 15:31:05', '2013-09-30 15:34:17', '', 1518265, 'corrected spelling, cohesiveness', '![enter image description here][1]\r\n\r\nJust set your `UIImageView` property name as "imageView" and add the following four methods with the same sequence in your implementation file. Also, set your ImageView Mode to ''Redraw''.  Add UIImage Category for the blur effect as given or use any custom class, it will work for you.\r\n\r\nMethod 1 - Cropping the Image \r\n\r\n    #pragma mark - Cropping the Image \r\n    \r\n    - (UIImage *)croppIngimageByImageName:(UIImage *)imageToCrop toRect:(CGRect)rect{\r\n        \r\n        CGImageRef imageRef = CGImageCreateWithImageInRect([imageToCrop CGImage], rect);    \r\n        UIImage *cropped = [UIImage imageWithCGImage:imageRef];\r\n        CGImageRelease(imageRef);\r\n        \r\n        return cropped;   \r\n        \r\n        \r\n    }\r\n\r\n\r\nMethod 2 - Merge the two Images \r\n\r\n\r\n    #pragma mark - Marge two Images \r\n    \r\n    - (UIImage *) addImageToImage:(UIImage *)img withImage2:(UIImage *)img2 andRect:(CGRect)cropRect{\r\n        \r\n        CGSize size = CGSizeMake(imageView.image.size.width, imageView.image.size.height);\r\n        UIGraphicsBeginImageContext(size);\r\n        \r\n        CGPoint pointImg1 = CGPointMake(0,0);\r\n        [img drawAtPoint:pointImg1]; \r\n        \r\n        CGPoint pointImg2 = cropRect.origin;\r\n        [img2 drawAtPoint: pointImg2];\r\n        \r\n        UIImage* result = UIGraphicsGetImageFromCurrentImageContext();\r\n        UIGraphicsEndImageContext();\r\n        \r\n        return result;\r\n    }\r\n\r\n\r\nMethod 3 - RoundRect the Image\r\n\r\n\r\n    #pragma mark - RoundRect the Image\r\n    \r\n    - (UIImage *)roundedRectImageFromImage:(UIImage *)image withRadious:(CGFloat)radious {\r\n        \r\n        if(radious == 0.0f)\r\n            return image;\r\n        \r\n        if( image != nil) {\r\n            \r\n            CGFloat imageWidth = image.size.width;\r\n            CGFloat imageHeight = image.size.height;\r\n            \r\n            CGRect rect = CGRectMake(0.0f, 0.0f, imageWidth, imageHeight);\r\n            UIWindow *window = [[[UIApplication sharedApplication] windows] objectAtIndex:0];\r\n            const CGFloat scale = window.screen.scale;\r\n            UIGraphicsBeginImageContextWithOptions(rect.size, NO, scale);\r\n            \r\n            CGContextRef context = UIGraphicsGetCurrentContext();\r\n            \r\n            CGContextBeginPath(context);\r\n            CGContextSaveGState(context);\r\n            CGContextTranslateCTM (context, CGRectGetMinX(rect), CGRectGetMinY(rect));\r\n            CGContextScaleCTM (context, radious, radious);\r\n            \r\n            CGFloat rectWidth = CGRectGetWidth (rect)/radious;\r\n            CGFloat rectHeight = CGRectGetHeight (rect)/radious;\r\n            \r\n            CGContextMoveToPoint(context, rectWidth, rectHeight/2.0f);\r\n            CGContextAddArcToPoint(context, rectWidth, rectHeight, rectWidth/2.0f, rectHeight, radious);\r\n            CGContextAddArcToPoint(context, 0.0f, rectHeight, 0.0f, rectHeight/2.0f, radious);\r\n            CGContextAddArcToPoint(context, 0.0f, 0.0f, rectWidth/2.0f, 0.0f, radious);\r\n            CGContextAddArcToPoint(context, rectWidth, 0.0f, rectWidth, rectHeight/2.0f, radious);\r\n            CGContextRestoreGState(context);\r\n            CGContextClosePath(context);\r\n            CGContextClip(context);\r\n            \r\n            [image drawInRect:CGRectMake(0.0f, 0.0f, imageWidth, imageHeight)];\r\n            \r\n            UIImage *newImage = UIGraphicsGetImageFromCurrentImageContext();\r\n            UIGraphicsEndImageContext();\r\n            \r\n            return newImage;\r\n        } \r\n        return nil;\r\n    }\r\n\r\nMethod 4 - Touch Move\r\n\r\n\r\n    #pragma mark - Touch Methods\r\n    \r\n    - (void)touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event {\r\n     \r\n        \r\n        UIImage *croppedImg = nil;\r\n        \r\n        UITouch *touch = [touches anyObject];\r\n        CGPoint currentPoint = [touch locationInView:self.imageView];\r\n        \r\n        double ratioW=imageView.image.size.width/imageView.frame.size.width ;\r\n        \r\n        double ratioH=imageView.image.size.height/imageView.frame.size.height;\r\n        \r\n        currentPoint.x *= ratioW;\r\n        currentPoint.y *= ratioH;\r\n        \r\n        double circleSizeW = 30 * ratioW;\r\n        double circleSizeH = 30 * ratioH;\r\n        \r\n        \r\n        currentPoint.x = (currentPoint.x - circleSizeW/2<0)? 0 : currentPoint.x - circleSizeW/2;\r\n        currentPoint.y = (currentPoint.y - circleSizeH/2<0)? 0 : currentPoint.y - circleSizeH/2;\r\n        \r\n        \r\n        CGRect cropRect = CGRectMake(currentPoint.x , currentPoint.y,   circleSizeW,  circleSizeH);\r\n        \r\n        NSLog(@"x %0.0f, y %0.0f, width %0.0f, height %0.0f", cropRect.origin.x, cropRect.origin.y,   cropRect.size.width,  cropRect.size.height );\r\n        \r\n        croppedImg = [self croppIngimageByImageName:self.imageView.image toRect:cropRect];\r\n     \r\n        // Blur Effect \r\n        croppedImg = [croppedImg imageWithGaussianBlur9];\r\n        \r\n        // Contrast Effect \r\n        // croppedImg = [croppedImg imageWithContrast:50];\r\n        \r\n        \r\n        \r\n        croppedImg = [self roundedRectImageFromImage:croppedImg withRadious:4]; \r\n        \r\n        imageView.image = [self addImageToImage:imageView.image withImage2:croppedImg andRect:cropRect];  \r\n    } \r\n\r\n\r\n\r\nUIImage Category Class\r\n\r\nUIImage+ImageBlur.h\r\n\r\n    #import <UIKit/UIKit.h>\r\n    \r\n    @interface UIImage (ImageBlur)\r\n    \r\n    - (UIImage *)imageWithGaussianBlur9;\r\n    \r\n    @end\r\n\r\nUIImage+ImageBlur.m\r\n\r\n    #import "UIImage+ImageBlur.h"\r\n    \r\n    @implementation UIImage (ImageBlur)\r\n    \r\n    - (UIImage *)imageWithGaussianBlur9 {\r\n        float weight[5] = {0.1270270270, 0.1945945946, 0.1216216216, 0.0540540541, 0.0162162162};\r\n        // Blur horizontally\r\n        UIGraphicsBeginImageContextWithOptions(self.size, NO, self.scale);\r\n        [self drawInRect:CGRectMake(0, 0, self.size.width, self.size.height) blendMode:kCGBlendModeNormal alpha:weight[0]];\r\n        for (int x = 1; x < 5; ++x) {\r\n            [self drawInRect:CGRectMake(x, 0, self.size.width, self.size.height) blendMode:kCGBlendModeNormal alpha:weight[x]];\r\n            [self drawInRect:CGRectMake(-x, 0, self.size.width, self.size.height) blendMode:kCGBlendModeNormal alpha:weight[x]];\r\n        }\r\n        UIImage *horizBlurredImage = UIGraphicsGetImageFromCurrentImageContext();\r\n        UIGraphicsEndImageContext();\r\n        // Blur vertically\r\n        UIGraphicsBeginImageContextWithOptions(self.size, NO, self.scale);\r\n        [horizBlurredImage drawInRect:CGRectMake(0, 0, self.size.width, self.size.height) blendMode:kCGBlendModeNormal alpha:weight[0]];\r\n        for (int y = 1; y < 5; ++y) {\r\n            [horizBlurredImage drawInRect:CGRectMake(0, y, self.size.width, self.size.height) blendMode:kCGBlendModeNormal alpha:weight[y]];\r\n            [horizBlurredImage drawInRect:CGRectMake(0, -y, self.size.width, self.size.height) blendMode:kCGBlendModeNormal alpha:weight[y]];\r\n        }\r\n        UIImage *blurredImage = UIGraphicsGetImageFromCurrentImageContext();\r\n        UIGraphicsEndImageContext();\r\n        //\r\n        return blurredImage;\r\n    }\r\n    \r\n    @end\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/gIwIn.png', '', '', '172d08bd-7245-45a2-8b0a-37d49614a9b6'),
(1009697, 14114419, '2013-11-28 17:34:13', '2013-11-28 17:43:22', '', 969807, 'Fix spaces to hyphens', 'Easy peasy:\r\n\r\n    function clean($string) {\r\n       $string = str_replace('' '', ''-'', $string); // Replaces all spaces with hyphens.\r\n       return preg_replace(''/[^A-Za-z0-9\\-]/'', '''', $string); // Removes special chars.\r\n    }\r\n\r\n<b>Usage:</b>\r\n    \r\n    echo clean(''a|"bc!@£de^&$f g'');\r\n\r\nWill output: `abcdef-g`\r\n\r\n<b>Edit:</b>\r\n>Hey, just a quick question, how can I prevent multiple hyphens from being next to each other? and have them replaced with just 1? Thanks in advance!\r\n\r\n    function clean($string) {\r\n       $string = str_replace('' '', ''-'', $string); // Replaces all spaces with hyphens.\r\n       $string = preg_replace(''/[^A-Za-z0-9\\-]/'', '''', $string); // Removes special chars.\r\n       \r\n       return preg_replace(''/-+/'', ''-'', $string); // Replaces multiple hyphens with single one.\r\n    }', '', '', '455e275e-4f60-4122-815c-f4d4a0d66ff2'),
(1152952, 14116498, '2014-02-15 19:11:37', '2014-02-15 19:17:37', '', 856468, 'Added A to restrict so it will work with an attribute', 'It''s actually pretty good logic but you can simplify things a bit.\r\n\r\n\r\n###Directive\r\n\r\n    var app = angular.module(''plunker'', []);\r\n    \r\n    app.controller(''MainCtrl'', function($scope) {\r\n      $scope.model = { name: ''World'' };\r\n      $scope.name = "Felipe";\r\n    });\r\n    \r\n    app.directive(''myDirective'', function($compile) {\r\n      return {\r\n        restrict: ''AE'', //attribute or element\r\n        scope: {\r\n          myDirectiveVar: ''='',\r\n         //bindAttr: ''=''\r\n        },\r\n        template: ''<div class="some">'' +\r\n          ''<input ng-model="myDirectiveVar"></div>'',\r\n        replace: true,\r\n        //require: ''ngModel'',\r\n        link: function($scope, elem, attr, ctrl) {\r\n          console.debug($scope);\r\n          //var textField = $(''input'', elem).attr(''ng-model'', ''myDirectiveVar'');\r\n          // $compile(textField)($scope.$parent);\r\n        }\r\n      };\r\n    });\r\n\r\n###Html with directive\r\n\r\n    <body ng-controller="MainCtrl">\r\n      This scope value <input ng-model="name">\r\n      <my-directive my-directive-var="name"></my-directive>\r\n    </body>\r\n\r\n###CSS\r\n\r\n    .some {\r\n      border: 1px solid #cacaca;\r\n      padding: 10px;\r\n    }\r\n\r\nYou can see it in action with this [Plunker][1].\r\n\r\n\r\nHere''s what I see:\r\n\r\n* I understand why you want to use ''ng-model'' but in your case it''s not necessary.  ng-model is to link *existing* html elements with a value in the scope.  Since you''re creating a directive yourself you''re creating a ''new'' html element, so you don''t need ng-model.\r\n\r\n**EDIT** As mentioned by Mark in his comment, there''s no reason that you *can''t* use ng-model, just to keep with convention.\r\n\r\n* By explicitly creating a scope in your directive (an ''isolated'' scope), the directive''s scope cannot access the ''name'' variable on the parent scope (which is why, I think, you wanted to use ng-model).\r\n* I removed ngModel from your directive and replaced it with a custom name that you can change to whatever.\r\n* The thing that makes it all still work is that ''='' sign in the scope.  Checkout the docs  [docs][2] under the ''scope'' header.\r\n\r\nIn general, your directives should use the isolated scope (which you did correctly) and use the ''='' type scope if you want a value in your directive to always map to a value in the parent scope. \r\n\r\n\r\n  [1]: http://plnkr.co/edit/A29hl6\r\n  [2]: http://docs.angularjs.org/guide/directive', '', '', '56aa46ac-080f-4eae-9e10-bdcd94dd429c'),
(1370806, 14111052, '2014-06-04 17:54:33', '2014-06-04 17:59:26', '', 350040, 'Added samsung-mobile tag', '', '', 'android samsung-mobile multi-window', '2ea7da80-3cf7-4efd-a968-a02697e82101'),
(1558048, 26308288, '2014-10-10 21:34:04', '2014-10-10 22:10:32', '', 3557336, 'Formmated the answer', 'So I was searching in Google for the same thing here...\r\n\r\nI wasn''t happy with above so my solution after reading documentation \r\nin [RUBY-DOC][1] was:\r\n\r\nExample to get `10/31/2014`\r\n\r\n`Date.new(2014,10,1).next_month.prev_day`\r\n\r\n\r\n\r\n  [1]: http://ruby-doc.org/stdlib-2.1.3/libdoc/date/rdoc/Date.html', '', '', '6583fa85-75d9-4c8f-afe9-8f4d41d90f0c'),
(1703387, 20159814, '2015-01-30 01:55:26', '2015-01-30 02:02:48', '', 4296, 'Clarified wording under "Most Examples..."', 'I''ve gone down many paths and created many implementations of repositories on different projects and... I''ve thrown the towel in and given up on it, here''s why. \r\n\r\n**Coding for the exception**\r\n\r\nDo you code for the 1% chance your database is going to change from one technology to another? If you''re thinking about your business''s future state and say yes that''s a possibility then a) they must have a lot of money to afford to do a migration to another DB technology or b) you''re choosing a DB technology for fun or c) something has gone horribly wrong with the first technology you decided to use.\r\n\r\n**Why throw away the rich LINQ syntax?**\r\n\r\nLINQ and EF were developed so you could do neat stuff with it to read and traverse object graphs. Creating and maintain a repository that can give you the same flexibility to do that is a monstrous task. In my experience any time I''ve created a repository I''ve **ALWAYS** had business logic leak into the repository layer to either make queries more perform-ant and/or reduce the number of hits to the database.\r\n\r\nI don''t want to create a method for every single permutation of a query that I have to write. I might as well write stored procedures. I don''t want GetOrder, GetOrderWithOrderItem, GetOrderWithOrderItemWithOrderActivity, GetOrderByUserId, and so on... I just want to get the main entity and traverse and include the object graph as I so please.\r\n\r\n**Most examples of repositories are bullshit** \r\n\r\nUnless you are developing something REALLY bare-bones like a blog or something your queries are never going to be as simple as 90% of the examples you find on the internet surrounding the repository pattern. I cannot stress this enough! This is something that one has to crawl through the mud to figure out. There will always be that one query that breaks your perfectly thought out repository/solution that you''ve created, and its not until that point where you 2nd guess yourself and the technical debt/erosion begins.\r\n\r\n**Don''t unit test me bro**\r\n\r\nBut what about unit testing if I don''t have a repository? How will I mock? Simple you don''t. Lets look at it from both angles:\r\n\r\nNo repository - You can mock the DbContext using an IDbContext or some other tricks but then you''re really unit testing LINQ to Objects and not LINQ to Entities because the query is determined at runtime... OK so that''s not good! So now its up to the integration test to cover this.\r\n\r\nWith repository - You can now mock your repositories and unit test the layer(s) in between. Great right? Well not really... In the cases above where you have to leak logic into the repository layer to make queries more perform-ant and/or less hits to the database, how can your unit tests cover that? It''s now in the repo layer and you don''t want to test IQueryable<T> right? Also lets be honest, your unit tests aren''t going to cover the queries that have a 20 line `.Where()` clause and `.Include()`''s a bunch of relationships and hits the database again to do all this other stuff, blah, blah, blah anyway''s because the query is generated at runtime. Also since you created a repository to keep the upper layers persistence ignorant, if you now you want to change your database technology, sorry your unit tests are defiantly not going to guarantee the same results at runtime, back to integration tests. So the whole point of the repository seems weird..\r\n\r\n**2 cents**\r\n\r\nWe already lose a lot of functionality and syntax when using EF over plain stored procedures (bulk inserts, bulk deletes, CTE''s, etc.) but I also code in C# so I don''t have to type binary. We use EF so we can have the possibility of using different providers and to work with object graphs in a nice related way amongst many things. Certain abstractions are useful and some are not.\r\n\r\nI hope this helps someone on the internets somewhere...', '', '', 'abce5e4c-acc8-4026-8585-58ba9bfcc2de');

-- --------------------------------------------------------

--
-- Table structure for table `Users`
--

CREATE TABLE IF NOT EXISTS `Users` (
  `Id` int(7) NOT NULL DEFAULT '0',
  `Reputation` int(6) DEFAULT NULL,
  `Views` int(6) DEFAULT NULL,
  `UpVotes` int(5) DEFAULT NULL,
  `DownVotes` int(5) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `Users`
--

INSERT INTO `Users` (`Id`, `Reputation`, `Views`, `UpVotes`, `DownVotes`) VALUES
(2541, 10338, 2975, 1659, 235),
(2874, 1273, 185, 401, 7),
(3461, 6535, 451, 281, 21),
(3586, 738, 81, 134, 4),
(4296, 1406, 504, 189, 1),
(4725, 88529, 15305, 3607, 2510),
(7345, 15878, 1386, 2323, 293),
(7656, 191, 43, 111, 0),
(10433, 5697, 967, 857, 19),
(10562, 1979, 225, 48, 4),
(11927, 2127, 122, 364, 1),
(13302, 351241, 46885, 20312, 14701),
(14540, 3852, 425, 507, 9),
(14637, 68937, 5173, 1787, 142),
(16007, 28942, 3565, 2113, 342),
(16295, 1133, 235, 194, 22),
(17034, 519502, 132997, 7747, 16876),
(23589, 1712, 195, 239, 0),
(23643, 37037, 2424, 2849, 75),
(28381, 2669, 323, 145, 6),
(31671, 204778, 21911, 17381, 1985),
(33518, 128128, 9276, 803, 93),
(34537, 31146, 6003, 3161, 125),
(37213, 198332, 18974, 6438, 2331),
(39261, 2323, 315, 100, 16),
(41403, 1517, 215, 513, 30),
(42595, 15059, 1251, 640, 13),
(43769, 988, 70, 113, 3),
(45767, 10805, 603, 362, 7),
(46281, 2602, 447, 541, 15),
(46926, 37779, 3909, 764, 77),
(47438, 3232, 177, 249, 0),
(47453, 35915, 1392, 3458, 671),
(49404, 1113, 125, 261, 1),
(50069, 647, 111, 409, 0),
(52570, 208, 39, 26, 0),
(53114, 302150, 27151, 1454, 281),
(57695, 253334, 32656, 12416, 116),
(57954, 192, 29, 95, 1),
(62544, 4536, 685, 441, 28),
(62576, 77712, 13490, 8873, 9843),
(63094, 14253, 1342, 849, 75),
(63550, 7796, 35852, 3707, 18422),
(63898, 6887, 2347, 536, 3),
(65311, 1191, 164, 763, 19),
(66372, 27017, 1987, 1628, 279),
(66613, 1506, 100, 466, 29),
(66629, 6198, 316, 42, 1),
(67707, 1176, 118, 385, 4),
(70386, 55122, 5098, 2701, 271),
(71059, 35219, 2572, 14556, 554),
(74074, 3006, 120, 648, 19),
(74975, 605, 108, 52, 14),
(80074, 6558, 368, 752, 0),
(81053, 8715, 667, 631, 49),
(82959, 36893, 1930, 10160, 291),
(85597, 19022, 2030, 1096, 29),
(85785, 64595, 5473, 4556, 54),
(86020, 25950, 1285, 626, 44),
(86328, 1851, 116, 352, 2),
(89161, 773, 160, 176, 1),
(90492, 669, 118, 866, 11),
(91945, 141, 246, 13, 0),
(96583, 1636, 156, 2942, 1),
(106261, 21945, 2469, 3187, 506),
(109942, 2429, 467, 2018, 14),
(110772, 953, 59, 156, 6),
(115182, 3860, 448, 48, 7),
(117220, 959, 153, 908, 3),
(119215, 2047, 307, 631, 4),
(120242, 1290, 193, 143, 34),
(123127, 18446, 1224, 1799, 80),
(123594, 855, 389, 253, 7),
(124416, 1569, 161, 222, 4),
(128028, 5069, 1351, 8883, 15),
(128397, 23749, 2268, 11158, 174),
(130988, 307, 68, 94, 1),
(133479, 839, 65, 133, 1),
(134583, 589, 132, 301, 4),
(136208, 32442, 1648, 908, 220),
(136445, 14820, 2004, 786, 95),
(140719, 106830, 9797, 4922, 1401),
(145406, 1, 5, 0, 0),
(146070, 1453, 188, 1732, 8),
(147192, 109999, 8990, 7296, 149),
(148423, 19286, 1820, 899, 123),
(148601, 2809, 353, 166, 70),
(148635, 1062, 201, 198, 2),
(151019, 21876, 3686, 6029, 708),
(153285, 75539, 5252, 2462, 555),
(153407, 10682, 1011, 1355, 10),
(154306, 14930, 2239, 1914, 94),
(159270, 42960, 3179, 5974, 2320),
(165656, 1175, 131, 230, 7),
(167194, 540, 30, 318, 5),
(173909, 2453, 493, 96, 4),
(175201, 9688, 1242, 562, 132),
(176646, 7247, 647, 1945, 602),
(177489, 3587, 190, 133, 2),
(177646, 6807, 190, 414, 2),
(177762, 1089, 101, 90, 4),
(180513, 410, 49, 18, 2),
(180736, 11344, 473, 1533, 51),
(181151, 1789, 235, 94, 5),
(183120, 8217, 1049, 3404, 7),
(183915, 835, 109, 60, 0),
(185346, 1724, 171, 241, 2),
(188331, 18459, 6122, 3921, 472),
(189410, 3154, 133, 165, 4),
(190277, 58863, 10944, 11768, 159),
(192217, 454, 111, 102, 2),
(194319, 945, 185, 193, 11),
(194609, 7540, 1028, 1271, 25),
(195751, 91, 30, 1175, 0),
(196561, 31061, 2133, 5418, 57),
(197606, 15111, 1607, 2045, 23),
(197663, 11887, 621, 1013, 25),
(198926, 569, 26, 196, 2),
(200291, 66249, 2460, 2349, 828),
(207421, 130300, 23583, 5303, 8306),
(207605, 1837, 81, 62, 0),
(208696, 936, 155, 349, 3),
(210905, 3514, 735, 410, 14),
(212012, 404, 46, 73, 1),
(214010, 66367, 3881, 11295, 73),
(215945, 111789, 6676, 2231, 29),
(217324, 35401, 1956, 6365, 169),
(218196, 273459, 29070, 4815, 1051),
(225767, 1080, 76, 1674, 11),
(227267, 33960, 3282, 948, 379),
(227536, 19121, 908, 134, 21),
(234932, 2419, 258, 327, 12),
(234954, 7392, 418, 280, 36),
(238704, 17137, 2699, 1787, 963),
(243557, 2778, 1090, 1951, 505),
(247013, 19115, 1567, 703, 29),
(247800, 1, 0, 0, 0),
(249230, 1502, 151, 285, 23),
(250453, 165, 54, 192, 0),
(251311, 114750, 11559, 6327, 4489),
(257550, 21525, 1935, 1379, 954),
(257948, 2515, 308, 718, 5),
(258289, 3471, 318, 141, 15),
(261581, 2259, 2823, 2115, 2388),
(262868, 735, 149, 129, 2),
(264697, 64647, 6248, 4174, 236),
(266143, 43869, 5661, 1909, 3855),
(267001, 1791, 192, 616, 3),
(271475, 31231, 965, 300, 71),
(271504, 158, 21, 21, 0),
(271996, 595, 104, 445, 3),
(275069, 563, 48, 133, 12),
(275133, 1396, 116, 362, 1),
(276648, 993, 233, 947, 7),
(280109, 424, 97, 362, 10),
(282128, 56, 5, 28, 0),
(284642, 367, 39, 33, 1),
(286629, 999, 242, 726, 4),
(295019, 563, 78, 800, 3),
(295797, 7586, 695, 725, 50),
(299583, 126, 4, 3, 1),
(300285, 312, 622, 126, 1),
(300685, 906, 90, 717, 2),
(301832, 62033, 8321, 4674, 67),
(302139, 36299, 1404, 288, 28),
(304209, 1591, 94, 2782, 1),
(309630, 1044, 131, 9, 0),
(310342, 182, 18, 191, 1),
(310394, 857, 26, 196, 13),
(321896, 300, 16, 82, 0),
(326139, 78, 7, 4, 0),
(329782, 165, 2, 25, 1),
(342978, 761, 76, 149, 3),
(344774, 1622, 159, 240, 11),
(344945, 3630, 166, 113, 4),
(345182, 46, 5, 10, 0),
(348312, 9480, 687, 621, 18),
(350040, 715, 37, 475, 21),
(351982, 4008, 547, 3184, 2),
(359035, 7789, 715, 609, 55),
(359307, 29981, 3258, 1683, 40),
(362123, 34, 11, 126, 0),
(363867, 592, 55, 58, 7),
(367273, 194219, 12221, 3645, 630),
(367456, 110154, 16855, 8708, 8516),
(370305, 49131, 4572, 754, 86),
(376839, 462, 29, 18, 2),
(379693, 52791, 19657, 4130, 920),
(381150, 503, 93, 1098, 7),
(383414, 7701, 1230, 807, 390),
(386739, 838, 235, 265, 20),
(391826, 601, 26, 158, 1),
(395573, 3993, 687, 362, 83),
(399759, 1307, 83, 3208, 2),
(399855, 651, 68, 59, 2),
(403571, 2158, 184, 166, 22),
(403872, 1153, 170, 530, 6),
(408572, 581, 19, 77, 1),
(408643, 4753, 742, 923, 9),
(411637, 62, 74, 234, 3),
(411902, 3377, 726, 3705, 17),
(411918, 9096, 1131, 3586, 1762),
(412080, 35066, 4575, 246, 224),
(413910, 13604, 1113, 335, 71),
(414415, 392, 74, 201, 19),
(418864, 1232, 255, 826, 1),
(421195, 41692, 3044, 1786, 501),
(421681, 129, 14, 2, 0),
(424002, 934, 8, 95, 5),
(427499, 2200, 216, 158, 3),
(432259, 2270, 171, 541, 7),
(435460, 2889, 295, 280, 4),
(435743, 403, 57, 246, 4),
(436415, 8, 1, 0, 0),
(441517, 395, 72, 166, 1),
(441521, 1124, 253, 160, 7),
(442117, 401, 25, 10, 0),
(443722, 2959, 349, 205, 8),
(450758, 5348, 838, 855, 1116),
(452307, 120409, 10404, 1279, 259),
(452941, 3126, 265, 1035, 32),
(453277, 33337, 3455, 8506, 2465),
(456584, 10752, 573, 3860, 15),
(456814, 32581, 4464, 2467, 2545),
(459640, 25422, 1024, 2843, 36),
(461294, 4869, 336, 729, 17),
(461412, 361, 3, 3, 0),
(462707, 1364, 146, 594, 9),
(464313, 454, 46, 1221, 0),
(464709, 130657, 10750, 9120, 7450),
(464744, 120848, 14259, 2760, 706),
(465582, 2329, 194, 152, 25),
(466871, 334, 23, 62, 1),
(467588, 2652, 286, 585, 8),
(471607, 13691, 3638, 639, 90),
(474290, 784, 277, 2993, 27),
(476716, 8083, 1079, 479, 70),
(476747, 8387, 1636, 2754, 2),
(477453, 2363, 132, 2260, 274),
(477676, 1965, 103, 47, 5),
(479863, 221885, 29342, 9070, 1239),
(486504, 4179, 638, 784, 57),
(488657, 11063, 4255, 1309, 1455),
(489741, 383, 47, 87, 18),
(491243, 137824, 21596, 2514, 1585),
(492747, 933, 95, 142, 7),
(495800, 1205, 130, 76, 4),
(497681, 186, 75, 92, 10),
(499839, 1203, 45, 238, 1),
(508681, 1642, 112, 301, 0),
(511012, 2505, 164, 680, 12),
(512334, 617, 31, 31, 7),
(517483, 3016, 372, 1109, 4),
(518169, 2728, 233, 221, 2),
(521257, 2537, 173, 650, 81),
(525179, 2738, 334, 651, 115),
(527702, 4596, 2179, 2694, 151),
(528214, 283, 33, 1053, 7),
(530967, 825, 177, 278, 9),
(531232, 1077, 116, 234, 12),
(532495, 3869, 296, 1103, 77),
(534005, 2790, 107, 1070, 10),
(535024, 197, 16, 77, 0),
(538222, 830, 91, 131, 5),
(538284, 2688, 401, 0, 0),
(538431, 617, 102, 23, 0),
(541686, 78263, 8763, 3186, 354),
(545637, 3159, 335, 733, 49),
(549521, 542, 76, 63, 4),
(551814, 71, 8, 10, 0),
(553209, 23942, 1444, 16, 6),
(553598, 1557, 78, 754, 2),
(553773, 1146, 90, 682, 3),
(554852, 742, 31, 13, 0),
(555938, 413, 37, 149, 1),
(556613, 3416, 275, 82, 8),
(557435, 57, 21, 14, 0),
(559994, 68, 6, 223, 0),
(560123, 481, 19, 458, 4),
(560648, 141599, 66015, 6652, 7289),
(563321, 69, 23, 767, 0),
(564163, 377, 27, 414, 4),
(567595, 2724, 114, 217, 45),
(567864, 17800, 1310, 6312, 1089),
(571407, 281781, 28941, 3006, 2864),
(572180, 606, 105, 363, 1),
(572954, 977, 93, 40, 9),
(576497, 473, 20, 426, 0),
(580796, 1281, 155, 35, 0),
(588306, 16250, 4674, 3455, 195),
(592323, 20683, 1360, 2806, 312),
(593612, 843, 123, 383, 6),
(595306, 338, 21, 35, 1),
(596238, 801, 20, 44, 1),
(596407, 121, 1, 84, 0),
(599926, 1989, 87, 59, 14),
(605129, 4168, 421, 400, 28),
(606355, 344, 47, 3608, 0),
(606413, 1211, 107, 113, 4),
(607569, 983, 204, 254, 12),
(610641, 1174, 154, 256, 7),
(617207, 173, 52, 310, 0),
(619869, 1, 8, 0, 0),
(620249, 6075, 959, 407, 116),
(621210, 461, 39, 73, 0),
(625407, 600, 64, 80, 10),
(625914, 10247, 504, 939, 142),
(626158, 550, 7, 50, 3),
(627985, 3961, 174, 40, 2),
(628995, 4545, 137, 377, 173),
(631351, 1, 6, 0, 0),
(631619, 34301, 4630, 2257, 120),
(633387, 674, 64, 88, 7),
(634025, 31075, 9776, 1771, 113),
(635608, 108333, 14721, 4717, 7136),
(635998, 560, 135, 748, 3),
(637283, 1023, 160, 582, 10),
(641235, 530, 151, 11, 1),
(645220, 1, 2, 0, 0),
(646198, 2692, 402, 597, 1),
(648658, 21730, 2110, 2089, 58),
(649497, 2646, 191, 444, 1),
(655857, 603, 241, 417, 9),
(656366, 2334, 206, 2409, 2),
(663941, 3406, 210, 83, 1),
(664652, 534, 25, 310, 5),
(668650, 1902, 321, 420, 1),
(671229, 48, 10, 48, 0),
(679982, 2984, 517, 1087, 68),
(680925, 43940, 4985, 6124, 682),
(684617, 99, 18, 162, 0),
(684893, 479, 32, 78, 2),
(687817, 3053, 962, 1782, 725),
(689077, 2839, 438, 1677, 0),
(689723, 3218, 184, 1566, 7),
(692622, 1228, 247, 240, 1),
(693110, 827, 44, 165, 2),
(701092, 44984, 6604, 14336, 1072),
(701745, 1233, 38, 13, 0),
(707145, 3534, 581, 1486, 2),
(710274, 483, 30, 332, 7),
(711513, 551, 12, 83, 4),
(712765, 8386, 1020, 420, 176),
(714969, 50823, 3728, 2245, 9),
(718050, 1101, 109, 782, 15),
(723722, 590, 55, 80, 1),
(728804, 71, 4, 11, 0),
(729454, 1178, 28, 55, 0),
(731115, 1295, 91, 241, 0),
(732200, 481, 57, 61, 3),
(733034, 2799, 377, 117, 4),
(734493, 418, 46, 299, 3),
(735022, 105, 11, 168, 0),
(736263, 3698, 208, 319, 2),
(737888, 1002, 49, 16, 0),
(742560, 1211, 332, 920, 9),
(742815, 937, 356, 139, 27),
(743077, 1368, 32, 12, 0),
(744015, 2762, 210, 1132, 0),
(744537, 1, 0, 0, 0),
(748876, 566, 65, 100, 6),
(750852, 11137, 1144, 274, 694),
(752976, 14910, 4365, 2058, 1307),
(757293, 1400, 76, 91, 4),
(761777, 9386, 714, 107, 5),
(765960, 457, 34, 41, 3),
(766570, 7347, 1263, 238, 1),
(772000, 4020, 279, 5026, 11),
(776084, 11253, 773, 1950, 126),
(777186, 29455, 3952, 2877, 337),
(777748, 543, 44, 511, 12),
(785494, 658, 67, 4, 1),
(788109, 2456, 147, 491, 31),
(789016, 1, 3, 0, 0),
(789657, 8962, 3053, 859, 676),
(790635, 1093, 54, 140, 8),
(791478, 1, 1, 0, 0),
(793961, 1116, 54, 205, 1),
(800817, 3861, 280, 108, 41),
(803727, 1093, 190, 104, 5),
(805057, 131, 11, 211, 0),
(807361, 503, 62, 66, 2),
(811381, 1933, 100, 170, 2),
(814564, 1027, 84, 35, 3),
(815672, 1212, 42, 31, 2),
(818004, 324, 108, 406, 1),
(818326, 640, 79, 167, 6),
(823738, 5201, 394, 1155, 139),
(824275, 4341, 365, 124, 17),
(825568, 76436, 3585, 1028, 366),
(827263, 99458, 12768, 975, 320),
(829542, 70, 17, 280, 0),
(829970, 3698, 467, 3045, 148),
(830554, 2414, 359, 631, 3),
(832546, 418, 41, 190, 22),
(835145, 1672, 344, 213, 47),
(836640, 140, 25, 59, 1),
(839097, 638, 31, 272, 2),
(839646, 51293, 2442, 691, 57),
(839952, 3731, 223, 98, 0),
(843443, 638, 136, 348, 11),
(845613, 1, 0, 0, 0),
(850764, 1386, 65, 453, 2),
(855527, 339, 45, 0, 0),
(855680, 2686, 384, 1019, 2),
(856468, 1035, 38, 21, 2),
(858405, 1, 1, 0, 0),
(859154, 38924, 7459, 3828, 75),
(859742, 3639, 291, 356, 10),
(863564, 3221, 446, 1886, 267),
(863637, 2210, 532, 226, 7),
(863701, 125, 32, 14, 0),
(867760, 4607, 261, 80, 7),
(870925, 1, 153, 495, 23),
(876814, 3769, 280, 281, 10),
(877581, 4209, 334, 425, 37),
(877819, 4548, 1130, 438, 29),
(878126, 25193, 9767, 507, 5),
(880326, 5374, 203, 158, 9),
(884372, 11506, 2012, 1590, 189),
(885556, 17334, 2104, 246, 3),
(893595, 79, 45, 6, 0),
(894671, 3583, 366, 2265, 18),
(895174, 9575, 1959, 808, 102),
(895588, 310, 13, 61, 1),
(896588, 4211, 371, 519, 153),
(900024, 739, 70, 106, 3),
(904617, 616, 73, 199, 1),
(904887, 1597, 89, 192, 6),
(907695, 16058, 697, 174, 128),
(909361, 1283, 130, 108, 6),
(923378, 87, 18, 55, 0),
(923560, 2269, 274, 1785, 27),
(924812, 1165, 96, 4, 2),
(925743, 41, 4, 97, 0),
(927034, 46269, 2708, 2016, 405),
(927589, 3518, 407, 333, 14),
(930037, 1, 0, 0, 0),
(930748, 176, 21, 38, 1),
(931485, 100, 78, 387, 0),
(935634, 4, 3, 0, 0),
(936986, 10120, 615, 575, 107),
(937822, 18964, 995, 1781, 31),
(938024, 2565, 247, 159, 88),
(938548, 1120, 112, 148, 2),
(939819, 11, 8, 0, 0),
(946224, 9651, 574, 1020, 32),
(946814, 645, 119, 225, 1),
(950349, 1061, 163, 256, 2),
(950427, 6295, 988, 2897, 0),
(959460, 1156, 141, 83, 1),
(961113, 107635, 8246, 3781, 1465),
(962089, 29555, 6675, 5185, 260),
(962845, 1165, 34, 224, 1),
(965666, 379, 26, 214, 1),
(969613, 8087, 1636, 4022, 122),
(969807, 678, 32, 49, 1),
(973543, 117, 21, 13, 0),
(973651, 8494, 285, 84, 24),
(974789, 3959, 1145, 2832, 239),
(979772, 415, 114, 284, 2),
(980430, 76, 29, 49, 0),
(985949, 9930, 1089, 2188, 63),
(989331, 1957, 147, 74, 3),
(989962, 79, 8, 10, 0),
(991863, 2378, 69, 683, 1),
(1002260, 1, 4039, 3937, 6769),
(1003545, 496, 33, 10, 0),
(1005844, 795, 46, 332, 35),
(1006439, 1179, 70, 923, 1),
(1006632, 20, 15, 4, 0),
(1007211, 849, 46, 256, 2),
(1011995, 118311, 14176, 6910, 1081),
(1012616, 1577, 75, 366, 11),
(1015177, 1009, 81, 85, 8),
(1016462, 3438, 712, 522, 30),
(1017787, 3065, 289, 401, 2),
(1017868, 7423, 902, 157, 215),
(1021725, 3230, 522, 377, 46),
(1022209, 1313, 128, 633, 0),
(1025702, 676, 162, 741, 17),
(1029890, 2171, 137, 21, 1),
(1030951, 1451, 487, 893, 48),
(1031417, 9092, 2644, 1167, 256),
(1034056, 156, 10, 3, 0),
(1037078, 1294, 282, 71, 21),
(1038250, 1, 0, 0, 0),
(1040889, 983, 116, 564, 13),
(1041090, 4507, 780, 355, 37),
(1042483, 1360, 164, 490, 0),
(1042555, 3892, 523, 375, 79),
(1043184, 218, 67, 56, 2),
(1052743, 653, 94, 48, 76),
(1053103, 3151, 410, 752, 35),
(1054469, 158, 18, 26, 0),
(1056173, 190, 10, 41, 1),
(1057909, 10721, 455, 250, 50),
(1063119, 137, 16, 42, 1),
(1070354, 11259, 439, 141, 10),
(1070732, 3873, 379, 256, 17),
(1074889, 695, 44, 192, 0),
(1075405, 3673, 289, 752, 9),
(1076640, 16061, 1117, 2104, 257),
(1085937, 671, 109, 121, 32),
(1086137, 420, 48, 83, 8),
(1090402, 41, 17, 0, 0),
(1091947, 463, 54, 454, 4),
(1094597, 42805, 3530, 1058, 223),
(1097104, 1232, 176, 706, 2),
(1099453, 2742, 1045, 909, 20),
(1104384, 27504, 3677, 434, 1871),
(1108689, 136, 32, 57, 0),
(1109326, 6, 3, 0, 0),
(1112757, 391, 18, 2, 0),
(1121833, 2688, 105, 1569, 25),
(1129408, 401, 94, 57, 1),
(1131855, 469, 110, 949, 0),
(1132615, 56, 5, 6, 0),
(1134982, 171, 41, 154, 1),
(1141160, 368, 42, 111, 2),
(1143970, 260, 40, 0, 0),
(1144090, 265, 57, 178, 3),
(1144231, 176, 13, 1, 0),
(1152066, 909, 55, 21, 2),
(1163019, 15011, 1060, 706, 408),
(1164011, 134, 4, 34, 0),
(1165643, 406, 70, 461, 1),
(1168440, 2143, 62, 62, 0),
(1168661, 2325, 233, 923, 15),
(1169172, 74, 72, 13, 0),
(1169659, 27, 9, 12, 0),
(1170461, 440, 59, 111, 4),
(1173023, 883, 77, 49, 7),
(1173620, 181, 27, 75, 1),
(1175083, 665, 262, 33, 1),
(1180720, 7564, 271, 209, 17),
(1180949, 18, 8, 255, 0),
(1183098, 601, 62, 104, 0),
(1183150, 1345, 221, 469, 3),
(1187415, 127149, 6400, 1494, 1008),
(1191614, 2044, 496, 307, 33),
(1195872, 1275, 214, 686, 9),
(1206087, 811, 209, 183, 11),
(1208233, 3857, 695, 1235, 1250),
(1208658, 72, 9, 49, 0),
(1212341, 13700, 3343, 1236, 39),
(1212922, 46, 12, 21, 0),
(1212960, 6196, 573, 1243, 367),
(1218067, 718, 229, 335, 10),
(1225434, 352, 11, 36, 0),
(1226389, 469, 16, 181, 0),
(1230594, 1194, 262, 497, 7),
(1237290, 455, 110, 63, 4),
(1243762, 3739, 473, 1777, 0),
(1243996, 4808, 372, 1443, 6),
(1244442, 3337, 473, 1463, 303),
(1246574, 2493, 133, 336, 31),
(1251169, 117, 22, 9, 0),
(1253826, 2012, 238, 221, 13),
(1255508, 122, 13, 13, 0),
(1257570, 1449, 31, 38, 2),
(1259884, 1002, 255, 1920, 15),
(1267263, 15826, 1704, 1729, 62),
(1278811, 21, 5, 13, 0),
(1280373, 23386, 3888, 630, 278),
(1284631, 1851, 113, 1395, 2),
(1288118, 121, 2, 89, 0),
(1291150, 5211, 704, 1223, 78),
(1292203, 3682, 573, 969, 74),
(1296660, 3585, 211, 299, 401),
(1300302, 6851, 207, 14, 0),
(1301750, 798, 313, 46, 1),
(1304519, 880, 87, 75, 8),
(1306067, 330, 123, 98, 56),
(1315397, 3464, 114, 490, 49),
(1317035, 1382, 95, 57, 0),
(1317221, 7201, 646, 453, 243),
(1320195, 1, 0, 0, 0),
(1327079, 210, 20, 89, 0),
(1338339, 1429, 74, 344, 0),
(1339631, 1801, 23, 34, 2),
(1342734, 1735, 178, 469, 19),
(1343688, 2019, 228, 115, 69),
(1351335, 4732, 331, 334, 25),
(1351600, 7070, 832, 789, 1470),
(1360253, 15924, 1654, 495, 280),
(1365008, 670, 82, 86, 1),
(1365289, 1552, 339, 376, 11),
(1366368, 1722, 217, 175, 18),
(1368828, 468, 74, 84, 3),
(1372543, 36, 7, 10, 0),
(1374397, 546, 9, 39, 0),
(1376135, 15, 14, 4, 0),
(1378681, 6609, 1111, 1982, 33),
(1378918, 41, 7, 3, 0),
(1381108, 12042, 2293, 966, 337),
(1382828, 564, 54, 454, 2),
(1385119, 4336, 392, 320, 20),
(1388526, 438, 46, 46, 0),
(1389219, 1192, 120, 1106, 10),
(1389394, 9017, 1920, 737, 13),
(1393289, 172, 37, 194, 1),
(1393623, 9799, 1227, 1611, 1),
(1398581, 5167, 271, 224, 34),
(1402576, 315, 72, 322, 0),
(1403990, 511, 56, 121, 13),
(1406486, 558, 73, 60, 3),
(1408866, 1310, 52, 262, 4),
(1414475, 1056, 105, 88, 13),
(1422200, 7014, 520, 2021, 1018),
(1423083, 3919, 902, 1140, 155),
(1428679, 20934, 742, 687, 70),
(1429811, 1278, 177, 284, 43),
(1431814, 1, 8, 0, 0),
(1434408, 241, 3, 20, 1),
(1435558, 34, 3, 6, 0),
(1445313, 96, 4, 65, 0),
(1448212, 5225, 475, 1027, 61),
(1450401, 2174, 511, 222, 32),
(1450967, 668, 35, 50, 1),
(1460422, 1720, 907, 1283, 2),
(1465054, 315, 27, 815, 0),
(1465919, 58, 6, 11, 0),
(1467926, 1056, 128, 436, 30),
(1468366, 23937, 1165, 1440, 210),
(1469203, 760, 100, 422, 7),
(1469621, 161, 3, 24, 0),
(1469979, 10, 4, 0, 0),
(1473663, 3033, 317, 272, 114),
(1475269, 80, 12, 42, 0),
(1476206, 490, 29, 38, 3),
(1476226, 932, 35, 121, 4),
(1494770, 1, 4, 0, 0),
(1497697, 1, 1, 0, 0),
(1499576, 1, 7, 0, 0),
(1500692, 352, 79, 160, 7),
(1502020, 150, 11, 137, 1),
(1502364, 226, 65, 66, 1),
(1506366, 885, 53, 72, 0),
(1506587, 450, 144, 47, 5),
(1511504, 664, 30, 789, 11),
(1513384, 5910, 281, 522, 774),
(1515209, 6502, 378, 543, 8),
(1516977, 35, 15, 170, 0),
(1518265, 361, 13, 103, 21),
(1520364, 19988, 1683, 639, 81),
(1531769, 773, 57, 57, 0),
(1533054, 3717, 150, 1560, 5),
(1537828, 1, 0, 0, 0),
(1538079, 2360, 454, 233, 118),
(1544046, 328, 12, 384, 1),
(1547438, 5071, 795, 56, 0),
(1554463, 785, 70, 529, 15),
(1554935, 7631, 524, 1269, 40),
(1555312, 3468, 401, 620, 7),
(1560689, 1, 1, 0, 0),
(1564528, 786, 297, 72, 2),
(1569817, 56, 17, 93, 0),
(1573014, 1, 0, 0, 0),
(1575456, 608, 61, 84, 8),
(1576085, 457, 14, 675, 1),
(1577560, 141, 2, 2, 0),
(1579262, 1134, 134, 147, 6),
(1579698, 570, 42, 24, 0),
(1579719, 26, 3, 56, 0),
(1583192, 77, 8, 50, 0),
(1585455, 400, 77, 2240, 2),
(1600336, 715, 74, 65, 2),
(1603072, 15019, 994, 522, 903),
(1603234, 5602, 1215, 380, 127),
(1606888, 4960, 307, 1411, 16),
(1606952, 104, 27, 106, 0),
(1608734, 86, 21, 33, 0),
(1620673, 989, 54, 38, 1),
(1623354, 1790, 88, 119, 8),
(1625066, 1257, 100, 77, 4),
(1634846, 8908, 553, 256, 6),
(1638005, 385, 29, 35, 6),
(1647484, 2516, 330, 78, 0),
(1649982, 36, 8, 1, 0),
(1654265, 19931, 2872, 3346, 86),
(1656733, 357, 47, 198, 23),
(1656986, 1305, 128, 94, 1),
(1659790, 1417, 100, 463, 5),
(1672778, 1713, 207, 86, 6),
(1682924, 2507, 2499, 52, 92),
(1694362, 703, 99, 194, 12),
(1695245, 1408, 61, 29, 0),
(1698695, 1296, 389, 236, 2),
(1698763, 1101, 35, 38, 10),
(1698851, 1, 2, 0, 0),
(1700479, 40, 6, 6, 0),
(1704917, 546, 19, 6, 5),
(1705804, 882, 111, 304, 7),
(1707154, 150, 17, 2, 0),
(1711598, 10637, 288, 158, 14),
(1713149, 1032, 188, 362, 15),
(1717907, 46, 5, 3137, 0),
(1723893, 25906, 9382, 3130, 1466),
(1726801, 2255, 62, 57, 59),
(1729016, 113, 31, 879, 0),
(1729265, 15703, 1896, 341, 58),
(1737568, 457, 73, 117, 7),
(1741677, 35, 6, 182, 0),
(1742814, 320, 19, 30, 2),
(1745610, 41, 1, 129, 0),
(1746194, 583, 253, 228, 4),
(1758051, 1827, 197, 100, 11),
(1761195, 1509, 127, 129, 10),
(1762224, 5001, 696, 1704, 36),
(1765519, 306, 24, 51, 0),
(1766201, 952, 75, 146, 4),
(1768690, 2971, 104, 622, 37),
(1773265, 494, 171, 1079, 23),
(1780772, 461, 37, 40, 1),
(1784834, 16682, 1414, 1392, 56),
(1786428, 8589, 974, 1785, 586),
(1790644, 5067, 523, 1659, 458),
(1797628, 203, 31, 307, 1),
(1798593, 12604, 2191, 1490, 14),
(1814189, 542, 46, 30, 0),
(1814717, 177, 14, 45, 0),
(1817185, 138, 33, 202, 0),
(1824407, 770, 133, 41, 0),
(1827257, 178, 17, 4, 0),
(1829943, 1177, 119, 218, 8),
(1833612, 13127, 678, 1391, 195),
(1837811, 137, 6, 1, 0),
(1838509, 62150, 3903, 3308, 580),
(1840231, 1271, 155, 1849, 16),
(1841161, 224, 135, 21, 3),
(1847187, 57, 19, 22, 0),
(1852470, 176, 10, 41, 0),
(1857229, 357, 28, 149, 4),
(1857292, 4493, 394, 2282, 148),
(1858241, 840, 46, 23, 13),
(1862101, 1745, 282, 214, 6),
(1865233, 726, 349, 63, 5),
(1868397, 471, 39, 842, 4),
(1871769, 4372, 197, 25, 12),
(1880763, 500, 63, 31, 6),
(1882084, 313, 15, 11, 0),
(1884546, 1280, 205, 22, 0),
(1887013, 460, 89, 64, 2),
(1888292, 3518, 112, 149, 6),
(1889210, 1, 0, 0, 0),
(1902055, 205, 26, 12, 0),
(1906892, 49, 1, 136, 0),
(1907273, 329, 68, 90, 0),
(1911306, 2324, 222, 186, 15),
(1911722, 154, 14, 34, 0),
(1916258, 16687, 726, 335, 49),
(1917390, 5643, 475, 135, 384),
(1917782, 17707, 3836, 1464, 43),
(1919155, 72393, 4447, 346, 18),
(1929959, 1897, 502, 71, 10),
(1934744, 1933, 196, 210, 12),
(1937050, 497, 78, 1295, 3),
(1939103, 2938, 174, 65, 14),
(1939277, 63, 4, 1, 0),
(1939905, 372, 117, 84, 1),
(1941681, 191, 25, 77, 1),
(1941928, 376, 37, 145, 0),
(1957448, 1452, 69, 129, 5),
(1978061, 66, 2, 381, 0),
(1984253, 1062, 75, 28, 1),
(1997092, 48, 8, 99, 0),
(1998046, 119, 11, 66, 0),
(2000801, 13, 8, 14, 0),
(2005251, 165, 46, 218, 24),
(2010915, 1, 1, 0, 0),
(2015469, 56, 1, 25, 0),
(2019689, 282, 20, 51, 0),
(2025722, 189, 5, 0, 0),
(2029172, 1, 0, 0, 0),
(2030468, 1373, 284, 346, 8),
(2036372, 1716, 68, 158, 18),
(2043536, 4435, 338, 721, 11),
(2048861, 1, 4, 1, 0),
(2049369, 42, 14, 15, 0),
(2050819, 589, 12, 2, 0),
(2052164, 1352, 88, 5474, 12),
(2074608, 8302, 4559, 756, 8633),
(2077475, 1, 1, 0, 0),
(2078685, 3102, 284, 364, 103),
(2078908, 1720, 93, 21, 19),
(2079191, 252, 5, 30, 1),
(2081502, 1, 0, 0, 0),
(2090107, 26, 2, 0, 0),
(2094386, 1, 1, 0, 0),
(2112028, 1, 795, 118, 166),
(2124430, 1, 0, 0, 0),
(2125444, 516, 96, 656, 112),
(2127383, 994, 241, 1221, 5),
(2141073, 918, 36, 315, 2),
(2157640, 3092, 369, 773, 172),
(2180879, 149, 25, 1111, 1),
(2183102, 1980, 199, 582, 26),
(2185417, 1, 13, 0, 0),
(2194152, 153, 31, 49, 0),
(2195990, 126, 11, 32, 0),
(2199136, 33, 19, 18, 0),
(2226082, 50, 11, 7, 0),
(2260924, 100, 18, 71, 0),
(2265763, 245, 73, 244, 5),
(2268846, 41, 13, 22, 0),
(2269481, 744, 53, 823, 10),
(2275421, 1479, 35, 27, 0),
(2279691, 1, 1, 0, 0),
(2282538, 1774, 165, 1330, 82),
(2296043, 51, 7, 9, 0),
(2302003, 25, 19, 1, 0),
(2318880, 25, 12, 28, 0),
(2321939, 786, 153, 224, 1),
(2334624, 581, 80, 116, 4),
(2358833, 46, 0, 17, 0),
(2376109, 385, 67, 115, 3),
(2382629, 71, 6, 72, 0),
(2415270, 31, 3, 2, 0),
(2416228, 789, 192, 217, 27),
(2420871, 201, 28, 188, 1),
(2429160, 473, 141, 88, 8),
(2446529, 1, 0, 0, 0),
(2458319, 501, 26, 26, 0),
(2509723, 1, 2, 0, 0),
(2516804, 6, 11, 0, 0),
(2523764, 570, 358, 174, 11),
(2524631, 33, 17, 384, 0),
(2533861, 77, 16, 16, 0),
(2535411, 19, 9, 9, 0),
(2571074, 11, 2, 0, 0),
(2582848, 1, 0, 0, 0),
(2590624, 56, 2, 0, 0),
(2607389, 462, 15, 680, 0),
(2666587, 109, 5, 64, 0),
(2672018, 1089, 272, 348, 6),
(2672526, 1, 4, 0, 0),
(2709868, 29, 0, 20, 0),
(2725661, 23, 1, 102, 0),
(2730725, 358, 159, 38, 0),
(2733137, 132, 38, 4, 0),
(2758139, 161, 14, 673, 0),
(2767447, 15, 7, 3, 0),
(2769615, 28, 7, 2, 0),
(2804216, 101, 4, 11, 0),
(2810918, 1764, 327, 1943, 22),
(2823146, 1468, 116, 80, 0),
(2832883, 3137, 134, 23, 5),
(2833005, 120, 23, 39, 0),
(2845260, 1281, 118, 130, 10),
(2847435, 79, 25, 1264, 0),
(2861269, 86, 10, 43, 0),
(2875073, 534, 20, 560, 3),
(2876385, 54, 8, 38, 0),
(2893034, 101, 6, 49, 0),
(2895909, 187, 37, 39, 0),
(2950946, 1, 0, 0, 0),
(2960335, 45, 24, 85, 0),
(3075942, 1681, 156, 284, 26),
(3076333, 62, 9, 35, 0),
(3094941, 199, 3, 29, 0),
(3100799, 6, 4, 0, 0),
(3124904, 9, 1, 0, 0),
(3128784, 2545, 522, 469, 22),
(3138286, 72, 5, 11, 0),
(3177763, 38, 4, 19, 0),
(3282633, 2337, 683, 370, 153),
(3289770, 1, 2, 0, 0),
(3315914, 2653, 396, 1286, 261),
(3384830, 53, 0, 6, 0),
(3405219, 139, 54, 18, 1),
(3549317, 57, 5, 37, 0),
(3557336, 911, 411, 865, 550),
(3571445, 1, 0, 0, 0),
(3742781, 8, 2, 0, 0),
(3744443, 171, 36, 29, 3),
(3906557, 1, 0, 0, 0),
(4130927, 51, 0, 1, 0),
(4172820, 1, 0, 0, 0),
(4253657, 1, 0, 0, 0),
(4329304, 1, 0, 0, 0);

-- --------------------------------------------------------

--
-- Table structure for table `Votes`
--

CREATE TABLE IF NOT EXISTS `Votes` (
  `Id` int(8) DEFAULT NULL,
  `PostId` int(8) DEFAULT NULL,
  `VoteTypeId` int(2) DEFAULT NULL,
  `UserId` varchar(7) DEFAULT NULL,
  `CreationDate` varchar(19) DEFAULT NULL,
  `BountyAmount` varchar(3) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `Votes`
--

INSERT INTO `Votes` (`Id`, `PostId`, `VoteTypeId`, `UserId`, `CreationDate`, `BountyAmount`) VALUES
(38918761, 14109036, 2, '', '2013-01-01 00:00:00', ''),
(39281333, 14125030, 2, '', '2013-01-08 00:00:00', ''),
(39281666, 14115902, 2, '', '2013-01-08 00:00:00', ''),
(39281807, 14115902, 2, '', '2013-01-08 00:00:00', ''),
(40358822, 14185426, 2, '', '2013-01-26 00:00:00', ''),
(44757100, 14114741, 2, '', '2013-04-09 00:00:00', ''),
(46617779, 16377459, 2, '', '2013-05-09 00:00:00', ''),
(50067305, 14110890, 5, '930748', '2013-07-08 00:00:00', ''),
(50067308, 14110890, 2, '', '2013-07-08 00:00:00', ''),
(50072443, 14116420, 5, '1208658', '2013-07-08 00:00:00', ''),
(50079000, 14110890, 5, '282128', '2013-07-08 00:00:00', ''),
(50079004, 14110890, 2, '', '2013-07-08 00:00:00', ''),
(50198895, 14110890, 5, '1833612', '2013-07-10 00:00:00', ''),
(50199529, 14110890, 2, '', '2013-07-10 00:00:00', ''),
(50202078, 14110890, 2, '', '2013-07-10 00:00:00', ''),
(50202086, 14110890, 5, '208696', '2013-07-10 00:00:00', ''),
(51258993, 14111651, 2, '', '2013-07-29 00:00:00', ''),
(51916219, 14185426, 2, '', '2013-08-09 00:00:00', ''),
(52919490, 14114741, 2, '', '2013-08-27 00:00:00', ''),
(53712081, 14114741, 2, '', '2013-09-11 00:00:00', ''),
(54730744, 14185426, 2, '', '2013-09-30 00:00:00', ''),
(54871232, 19137473, 11, '', '2013-10-02 00:00:00', ''),
(54998581, 14114741, 2, '', '2013-10-04 00:00:00', ''),
(56290694, 14238131, 2, '', '2013-10-28 00:00:00', ''),
(56936443, 19832359, 2, '', '2013-11-07 00:00:00', ''),
(57082457, 14109036, 2, '', '2013-11-11 00:00:00', ''),
(59448467, 14116420, 5, '930037', '2013-12-21 00:00:00', ''),
(60318629, 14114741, 2, '', '2014-01-08 00:00:00', ''),
(61770959, 14114741, 2, '', '2014-01-31 00:00:00', ''),
(62690884, 19137473, 2, '', '2014-02-15 00:00:00', ''),
(63721701, 14114741, 2, '', '2014-03-03 00:00:00', ''),
(64258430, 21105833, 2, '', '2014-03-11 00:00:00', ''),
(65680052, 19137473, 2, '', '2014-04-02 00:00:00', ''),
(66473081, 14114741, 2, '', '2014-04-15 00:00:00', ''),
(70400671, 14116513, 2, '', '2014-06-23 00:00:00', ''),
(72228294, 14114741, 2, '', '2014-07-25 00:00:00', ''),
(72605344, 14110890, 2, '', '2014-08-01 00:00:00', ''),
(73120961, 14114741, 2, '', '2014-08-11 00:00:00', ''),
(73497370, 14110890, 5, '2334624', '2014-08-18 00:00:00', ''),
(73627247, 14110890, 5, '89161', '2014-08-20 00:00:00', ''),
(73627250, 14110890, 2, '', '2014-08-20 00:00:00', ''),
(74280047, 14114741, 2, '', '2014-09-01 00:00:00', ''),
(74531854, 14185426, 2, '', '2014-09-05 00:00:00', ''),
(75682841, 14114741, 2, '', '2014-09-25 00:00:00', ''),
(77601218, 14116420, 2, '', '2014-10-30 00:00:00', ''),
(77601244, 14116513, 2, '', '2014-10-30 00:00:00', ''),
(78382151, 21105833, 2, '', '2014-11-13 00:00:00', ''),
(78496010, 23713981, 2, '', '2014-11-15 00:00:00', ''),
(78496012, 21105833, 2, '', '2014-11-15 00:00:00', ''),
(80131899, 14115620, 5, '3177763', '2014-12-15 00:00:00', ''),
(80131903, 14115620, 2, '', '2014-12-15 00:00:00', ''),
(81560125, 21105833, 2, '', '2015-01-12 00:00:00', ''),
(38925067, 14110890, 2, '', '2013-01-01 00:00:00', ''),
(38927397, 14111651, 2, '', '2013-01-01 00:00:00', ''),
(38927400, 14111651, 2, '', '2013-01-01 00:00:00', ''),
(38927782, 14111651, 2, '', '2013-01-01 00:00:00', ''),
(38928059, 14111651, 1, '', '2013-01-01 00:00:00', ''),
(38928060, 14111651, 2, '', '2013-01-01 00:00:00', ''),
(38935175, 14111651, 2, '', '2013-01-01 00:00:00', ''),
(39204687, 14115902, 2, '', '2013-01-07 00:00:00', ''),
(39204689, 14115913, 2, '', '2013-01-07 00:00:00', ''),
(43480409, 14185426, 2, '', '2013-03-19 00:00:00', ''),
(44422346, 14185426, 2, '', '2013-04-03 00:00:00', ''),
(46841639, 14114741, 2, '', '2013-05-13 00:00:00', ''),
(47653668, 14109036, 2, '', '2013-05-27 00:00:00', ''),
(50655883, 14110890, 5, '71059', '2013-07-18 00:00:00', ''),
(50655885, 14110890, 2, '', '2013-07-18 00:00:00', ''),
(54161458, 14114741, 2, '', '2013-09-19 00:00:00', ''),
(54295375, 14114741, 2, '', '2013-09-22 00:00:00', ''),
(54545958, 14118242, 1, '', '2013-09-26 00:00:00', ''),
(59412316, 14110890, 5, '1131855', '2013-12-20 00:00:00', ''),
(59412332, 14110890, 2, '', '2013-12-20 00:00:00', ''),
(60600425, 14115620, 2, '', '2014-01-13 00:00:00', ''),
(61116971, 21105833, 2, '', '2014-01-21 00:00:00', ''),
(61118785, 21105833, 2, '', '2014-01-21 00:00:00', ''),
(61124997, 14114741, 2, '', '2014-01-21 00:00:00', ''),
(64013474, 14114741, 2, '', '2014-03-07 00:00:00', ''),
(65449879, 19137473, 2, '', '2014-03-30 00:00:00', ''),
(66213330, 21105833, 2, '', '2014-04-11 00:00:00', ''),
(67410054, 21105833, 2, '', '2014-05-01 00:00:00', ''),
(68201148, 14116420, 2, '', '2014-05-15 00:00:00', ''),
(69345066, 14185426, 2, '', '2014-06-04 00:00:00', ''),
(70119407, 14110890, 2, '', '2014-06-18 00:00:00', ''),
(71672877, 21105833, 2, '', '2014-07-16 00:00:00', ''),
(73227924, 14114741, 2, '', '2014-08-12 00:00:00', ''),
(73863376, 14485464, 2, '', '2014-08-24 00:00:00', ''),
(74916402, 14114741, 2, '', '2014-09-12 00:00:00', ''),
(75177391, 14110890, 2, '', '2014-09-17 00:00:00', ''),
(75449229, 14114741, 2, '', '2014-09-22 00:00:00', ''),
(75832383, 14116420, 2, '', '2014-09-29 00:00:00', ''),
(75974175, 14114741, 2, '', '2014-10-01 00:00:00', ''),
(76323496, 14111651, 2, '', '2014-10-08 00:00:00', ''),
(79299340, 21105833, 2, '', '2014-11-30 00:00:00', ''),
(79676787, 14485464, 2, '', '2014-12-07 00:00:00', ''),
(79808918, 14114741, 2, '', '2014-12-09 00:00:00', ''),
(82130600, 14116513, 2, '', '2015-01-21 00:00:00', ''),
(38970889, 14115913, 1, '', '2013-01-02 00:00:00', ''),
(38976035, 14125030, 2, '', '2013-01-02 00:00:00', ''),
(38976124, 14125030, 2, '', '2013-01-02 00:00:00', ''),
(38976766, 14125030, 2, '', '2013-01-02 00:00:00', ''),
(38978087, 14115902, 2, '', '2013-01-02 00:00:00', ''),
(38978934, 14125030, 2, '', '2013-01-02 00:00:00', ''),
(38984557, 14125030, 2, '', '2013-01-02 00:00:00', ''),
(38984789, 14125030, 2, '', '2013-01-02 00:00:00', ''),
(38986814, 14125030, 2, '', '2013-01-02 00:00:00', ''),
(39123464, 14125030, 1, '', '2013-01-05 00:00:00', ''),
(43506873, 14110890, 2, '', '2013-03-19 00:00:00', ''),
(43506874, 14110890, 5, '605129', '2013-03-19 00:00:00', ''),
(44058630, 14185426, 2, '', '2013-03-28 00:00:00', ''),
(44463754, 14125030, 2, '', '2013-04-04 00:00:00', ''),
(46611285, 16377459, 2, '', '2013-05-09 00:00:00', ''),
(47010165, 14111651, 2, '', '2013-05-16 00:00:00', ''),
(50179046, 17449231, 2, '', '2013-07-09 00:00:00', ''),
(50179193, 14110890, 2, '', '2013-07-09 00:00:00', ''),
(50297910, 14110890, 9, '', '2013-07-11 00:00:00', ''),
(50433131, 14114741, 2, '', '2013-07-14 00:00:00', ''),
(53207779, 14115620, 2, '', '2013-09-02 00:00:00', ''),
(53338878, 14125030, 2, '', '2013-09-04 00:00:00', ''),
(54792009, 14114741, 2, '', '2013-10-01 00:00:00', ''),
(57858199, 17449231, 2, '', '2013-11-24 00:00:00', ''),
(60242145, 14110890, 2, '', '2014-01-07 00:00:00', ''),
(62349341, 21105833, 2, '', '2014-02-10 00:00:00', ''),
(63557621, 14116420, 2, '', '2014-02-28 00:00:00', ''),
(65172789, 14115620, 2, '', '2014-03-25 00:00:00', ''),
(65452773, 19137473, 2, '', '2014-03-30 00:00:00', ''),
(65871262, 21105833, 2, '', '2014-04-05 00:00:00', ''),
(66642008, 14185426, 2, '', '2014-04-18 00:00:00', ''),
(68743990, 14185426, 2, '', '2014-05-24 00:00:00', ''),
(71554075, 17449231, 2, '', '2014-07-14 00:00:00', ''),
(75483512, 14110890, 2, '', '2014-09-23 00:00:00', ''),
(75608073, 14111651, 2, '', '2014-09-24 00:00:00', ''),
(77436117, 17449231, 2, '', '2014-10-28 00:00:00', ''),
(78480649, 14485464, 2, '', '2014-11-15 00:00:00', ''),
(78879911, 14185426, 2, '', '2014-11-22 00:00:00', ''),
(80182781, 14485464, 2, '', '2014-12-16 00:00:00', ''),
(39035305, 14116513, 2, '', '2013-01-03 00:00:00', ''),
(39302031, 14125030, 2, '', '2013-01-08 00:00:00', ''),
(41385793, 14116420, 2, '', '2013-02-13 00:00:00', ''),
(41385796, 14116420, 5, '196561', '2013-02-13 00:00:00', ''),
(41386077, 14116513, 2, '', '2013-02-13 00:00:00', ''),
(41661092, 14487079, 2, '', '2013-02-18 00:00:00', ''),
(42603581, 14114741, 2, '', '2013-03-05 00:00:00', ''),
(44748705, 14115913, 2, '', '2013-04-09 00:00:00', ''),
(46381815, 14238131, 2, '', '2013-05-06 00:00:00', ''),
(46515459, 16377459, 2, '', '2013-05-08 00:00:00', ''),
(46521272, 16377459, 1, '', '2013-05-08 00:00:00', ''),
(46651525, 16377459, 9, '', '2013-05-10 00:00:00', '500'),
(48116480, 14116420, 2, '', '2013-06-04 00:00:00', ''),
(49047636, 14185426, 2, '', '2013-06-19 00:00:00', ''),
(49850010, 17449231, 2, '', '2013-07-03 00:00:00', ''),
(49850371, 17449231, 2, '', '2013-07-03 00:00:00', ''),
(50370611, 14114741, 2, '', '2013-07-12 00:00:00', ''),
(51270412, 14114741, 2, '', '2013-07-29 00:00:00', ''),
(54167790, 14114741, 2, '', '2013-09-19 00:00:00', ''),
(54450627, 14115620, 2, '', '2013-09-24 00:00:00', ''),
(39040342, 14116215, 2, '', '2013-01-03 00:00:00', ''),
(39054386, 14114528, 2, '', '2013-01-03 00:00:00', ''),
(39144064, 14111052, 8, '1301750', '2013-01-05 00:00:00', '50'),
(39279521, 14115349, 2, '', '2013-01-08 00:00:00', ''),
(40358829, 14111052, 2, '', '2013-01-26 00:00:00', ''),
(43175892, 14116215, 2, '', '2013-03-14 00:00:00', ''),
(44258834, 14115349, 2, '', '2013-04-01 00:00:00', ''),
(46097056, 14107208, 2, '', '2013-04-30 00:00:00', ''),
(46884921, 14107208, 2, '', '2013-05-14 00:00:00', ''),
(47827985, 14107208, 2, '', '2013-05-29 00:00:00', ''),
(48772949, 14114411, 5, '1852470', '2013-06-14 00:00:00', ''),
(49829514, 14107208, 2, '', '2013-07-03 00:00:00', ''),
(49830080, 14107208, 5, '895174', '2013-07-03 00:00:00', ''),
(49943757, 14117121, 2, '', '2013-07-05 00:00:00', ''),
(50078996, 17473500, 2, '', '2013-07-08 00:00:00', ''),
(50476703, 14117121, 2, '', '2013-07-15 00:00:00', ''),
(50992340, 14114411, 5, '344774', '2013-07-24 00:00:00', ''),
(52150242, 14120661, 2, '', '2013-08-13 00:00:00', ''),
(52539585, 14117121, 2, '', '2013-08-21 00:00:00', ''),
(53042304, 14114411, 2, '', '2013-08-29 00:00:00', ''),
(54730752, 14111052, 5, '1978061', '2013-09-30 00:00:00', ''),
(55894784, 18806269, 2, '', '2013-10-21 00:00:00', ''),
(58383360, 14115349, 2, '', '2013-12-03 00:00:00', ''),
(58906651, 14114411, 2, '', '2013-12-12 00:00:00', ''),
(62034759, 18806269, 2, '', '2014-02-05 00:00:00', ''),
(62164520, 14115349, 2, '', '2014-02-07 00:00:00', ''),
(62427636, 14117121, 2, '', '2014-02-11 00:00:00', ''),
(62690753, 14117121, 2, '', '2014-02-15 00:00:00', ''),
(64525026, 14107208, 2, '', '2014-03-15 00:00:00', ''),
(64525027, 14107208, 5, '742560', '2014-03-15 00:00:00', ''),
(65168202, 22626273, 2, '', '2014-03-25 00:00:00', ''),
(65168884, 14114411, 2, '', '2014-03-25 00:00:00', ''),
(66196194, 14114411, 2, '', '2014-04-10 00:00:00', ''),
(66857878, 14107208, 2, '', '2014-04-22 00:00:00', ''),
(66857879, 14107208, 5, '637283', '2014-04-22 00:00:00', ''),
(66989396, 14114411, 2, '', '2014-04-24 00:00:00', ''),
(70150456, 14114443, 2, '', '2014-06-18 00:00:00', ''),
(70150469, 14114411, 2, '', '2014-06-18 00:00:00', ''),
(70522070, 14114411, 2, '', '2014-06-25 00:00:00', ''),
(71180288, 14114528, 2, '', '2014-07-07 00:00:00', ''),
(71960976, 14107208, 2, '', '2014-07-21 00:00:00', ''),
(71960978, 14107208, 5, '3076333', '2014-07-21 00:00:00', ''),
(72474325, 14112839, 5, '1132615', '2014-07-30 00:00:00', ''),
(73002084, 25197868, 11, '', '2014-08-08 00:00:00', ''),
(73771853, 14117121, 2, '', '2014-08-22 00:00:00', ''),
(74035716, 22626273, 2, '', '2014-08-27 00:00:00', ''),
(74641647, 14114411, 2, '', '2014-09-07 00:00:00', ''),
(75429193, 14111052, 5, '1814189', '2014-09-22 00:00:00', ''),
(76824570, 14120661, 2, '', '2014-10-16 00:00:00', ''),
(76837307, 14117121, 2, '', '2014-10-17 00:00:00', ''),
(77891451, 14120661, 2, '', '2014-11-05 00:00:00', ''),
(78001254, 14107208, 5, '1649982', '2014-11-06 00:00:00', ''),
(79023639, 14112839, 2, '', '2014-11-25 00:00:00', ''),
(79023644, 14112839, 5, '1291150', '2014-11-25 00:00:00', ''),
(79879491, 14120661, 2, '', '2014-12-10 00:00:00', ''),
(80666894, 14120661, 5, '1338339', '2014-12-24 00:00:00', ''),
(80666897, 14120661, 2, '', '2014-12-24 00:00:00', ''),
(81698223, 14107208, 5, '1700479', '2015-01-14 00:00:00', ''),
(81952205, 25197868, 2, '', '2015-01-19 00:00:00', ''),
(82621232, 14117121, 2, '', '2015-01-29 00:00:00', ''),
(38919910, 14107208, 3, '', '2013-01-01 00:00:00', ''),
(38920061, 14109099, 2, '', '2013-01-01 00:00:00', ''),
(38925415, 14111052, 5, '1292203', '2013-01-01 00:00:00', ''),
(38927499, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38927501, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38927505, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38927506, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38927507, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38927508, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38927548, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38927579, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38927729, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38927755, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38927760, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38927763, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38927792, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38927898, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38928020, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38928104, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38928195, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38928554, 14111686, 1, '', '2013-01-01 00:00:00', ''),
(38929456, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38929801, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38930134, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38931497, 14112839, 2, '', '2013-01-01 00:00:00', ''),
(38931508, 14112839, 2, '', '2013-01-01 00:00:00', ''),
(38931518, 14112839, 2, '', '2013-01-01 00:00:00', ''),
(38931519, 14112839, 5, '776084', '2013-01-01 00:00:00', ''),
(38931544, 14112839, 2, '', '2013-01-01 00:00:00', ''),
(38931615, 14112839, 2, '', '2013-01-01 00:00:00', ''),
(38931695, 14112003, 2, '', '2013-01-01 00:00:00', ''),
(38931763, 14112839, 2, '', '2013-01-01 00:00:00', ''),
(38931906, 14112003, 2, '', '2013-01-01 00:00:00', ''),
(38933053, 14112839, 2, '', '2013-01-01 00:00:00', ''),
(38933205, 14112839, 5, '258289', '2013-01-01 00:00:00', ''),
(38934481, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38934490, 14112839, 2, '', '2013-01-01 00:00:00', ''),
(38935455, 14111686, 2, '', '2013-01-01 00:00:00', ''),
(38936128, 14112839, 2, '', '2013-01-01 00:00:00', ''),
(39061675, 14116215, 2, '', '2013-01-04 00:00:00', ''),
(42271091, 14111052, 2, '', '2013-02-28 00:00:00', ''),
(46971388, 14107208, 2, '', '2013-05-15 00:00:00', ''),
(46980998, 14116215, 2, '', '2013-05-15 00:00:00', ''),
(47649033, 14117121, 2, '', '2013-05-27 00:00:00', ''),
(52743580, 14115349, 2, '', '2013-08-24 00:00:00', ''),
(52885389, 17473500, 2, '', '2013-08-27 00:00:00', ''),
(53902504, 18806269, 1, '', '2013-09-14 00:00:00', ''),
(54292756, 14116215, 2, '', '2013-09-22 00:00:00', ''),
(55873834, 17473500, 2, '', '2013-10-20 00:00:00', ''),
(58339743, 14115349, 2, '', '2013-12-03 00:00:00', ''),
(60353913, 14120661, 2, '', '2014-01-09 00:00:00', ''),
(60357061, 17584989, 2, '', '2014-01-09 00:00:00', ''),
(60478936, 14115349, 2, '', '2014-01-10 00:00:00', ''),
(61379476, 14107208, 2, '', '2014-01-25 00:00:00', ''),
(62170770, 14112839, 2, '', '2014-02-07 00:00:00', ''),
(62446403, 14107208, 5, '195751', '2014-02-12 00:00:00', ''),
(62446404, 14107208, 2, '', '2014-02-12 00:00:00', ''),
(62837405, 14117121, 2, '', '2014-02-18 00:00:00', ''),
(64794632, 14107208, 2, '', '2014-03-19 00:00:00', ''),
(65059177, 14117121, 2, '', '2014-03-24 00:00:00', ''),
(65190147, 17473500, 2, '', '2014-03-26 00:00:00', ''),
(65449748, 14117121, 2, '', '2014-03-30 00:00:00', ''),
(65569126, 14114411, 2, '', '2014-04-01 00:00:00', ''),
(66618558, 14107208, 2, '', '2014-04-17 00:00:00', ''),
(68726699, 14117121, 2, '', '2014-05-23 00:00:00', ''),
(68863458, 14111052, 5, '1884546', '2014-05-27 00:00:00', ''),
(70121881, 14115349, 2, '', '2014-06-18 00:00:00', ''),
(74242398, 22626273, 2, '', '2014-08-31 00:00:00', ''),
(76979902, 14114430, 2, '', '2014-10-20 00:00:00', ''),
(77761866, 14114411, 2, '', '2014-11-03 00:00:00', ''),
(77761867, 14114411, 5, '1997092', '2014-11-03 00:00:00', ''),
(78649662, 14111052, 5, '4253657', '2014-11-18 00:00:00', ''),
(81763181, 14114411, 2, '', '2015-01-15 00:00:00', ''),
(82626367, 17473500, 3, '', '2015-01-30 00:00:00', ''),
(38972302, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(38978160, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(38979078, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(38979897, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(39253267, 14114528, 2, '', '2013-01-07 00:00:00', ''),
(43093525, 14116215, 2, '', '2013-03-13 00:00:00', ''),
(44058515, 14111052, 2, '', '2013-03-28 00:00:00', ''),
(44058516, 14111052, 5, '476747', '2013-03-28 00:00:00', ''),
(44453527, 14116215, 2, '', '2013-04-04 00:00:00', ''),
(50179140, 14107208, 2, '', '2013-07-09 00:00:00', ''),
(50306697, 14107208, 2, '', '2013-07-11 00:00:00', ''),
(50822249, 14107208, 2, '', '2013-07-21 00:00:00', ''),
(50958606, 14107208, 2, '', '2013-07-23 00:00:00', ''),
(51104150, 14114411, 2, '', '2013-07-25 00:00:00', ''),
(51621447, 14107208, 2, '', '2013-08-04 00:00:00', ''),
(51621773, 14107208, 5, '1511504', '2013-08-04 00:00:00', ''),
(51765927, 14107208, 2, '', '2013-08-06 00:00:00', ''),
(52179754, 14107208, 5, '86328', '2013-08-14 00:00:00', ''),
(52179757, 14107208, 2, '', '2013-08-14 00:00:00', ''),
(54661423, 14114411, 5, '1429811', '2013-09-28 00:00:00', ''),
(38914759, 14107804, 2, '', '2013-01-01 00:00:00', ''),
(38914774, 14107804, 2, '', '2013-01-01 00:00:00', ''),
(38914820, 14107804, 2, '', '2013-01-01 00:00:00', ''),
(38914822, 14107804, 5, '818326', '2013-01-01 00:00:00', ''),
(38914933, 14107804, 5, '23589', '2013-01-01 00:00:00', ''),
(38915099, 14107804, 10, '', '2013-01-01 00:00:00', ''),
(38915248, 14107804, 5, '1840231', '2013-01-01 00:00:00', ''),
(38918292, 14108774, 2, '', '2013-01-01 00:00:00', ''),
(44249723, 14116194, 2, '', '2013-04-01 00:00:00', ''),
(46097053, 14108774, 2, '', '2013-04-30 00:00:00', ''),
(46231930, 16344827, 2, '', '2013-05-02 00:00:00', ''),
(46376093, 14108774, 2, '', '2013-05-05 00:00:00', ''),
(46884893, 14108774, 2, '', '2013-05-14 00:00:00', ''),
(47827990, 14108774, 2, '', '2013-05-29 00:00:00', ''),
(48359816, 14121669, 2, '', '2013-06-07 00:00:00', ''),
(49560838, 14108774, 2, '', '2013-06-27 00:00:00', ''),
(49829510, 14108774, 2, '', '2013-07-03 00:00:00', ''),
(50206666, 14108774, 2, '', '2013-07-10 00:00:00', ''),
(50603171, 14108774, 2, '', '2013-07-17 00:00:00', ''),
(51258990, 14111607, 2, '', '2013-07-29 00:00:00', ''),
(51637035, 14107531, 2, '', '2013-08-04 00:00:00', ''),
(52405574, 14116498, 2, '', '2013-08-18 00:00:00', ''),
(52536764, 14116498, 2, '', '2013-08-20 00:00:00', ''),
(52908330, 14116498, 2, '', '2013-08-27 00:00:00', ''),
(53309188, 14108774, 2, '', '2013-09-04 00:00:00', ''),
(53316043, 16503127, 2, '', '2013-09-04 00:00:00', ''),
(54856198, 14108774, 2, '', '2013-10-02 00:00:00', ''),
(55771141, 14107933, 2, '', '2013-10-18 00:00:00', ''),
(56424918, 14112752, 2, '', '2013-10-30 00:00:00', ''),
(56541379, 14116498, 2, '', '2013-10-31 00:00:00', ''),
(56942936, 14112752, 2, '', '2013-11-08 00:00:00', ''),
(58123684, 14108774, 2, '', '2013-11-28 00:00:00', ''),
(58244912, 14116498, 2, '', '2013-12-01 00:00:00', ''),
(58510445, 14108774, 2, '', '2013-12-05 00:00:00', ''),
(60051897, 14116498, 2, '', '2014-01-03 00:00:00', ''),
(61629967, 14116498, 2, '', '2014-01-29 00:00:00', ''),
(62554586, 14116498, 2, '', '2014-02-13 00:00:00', ''),
(62690649, 14116498, 16, '', '2014-02-15 00:00:00', ''),
(63344735, 14112752, 2, '', '2014-02-25 00:00:00', ''),
(63857469, 16503127, 2, '', '2014-03-05 00:00:00', ''),
(64525028, 14108774, 2, '', '2014-03-15 00:00:00', ''),
(64896795, 14108774, 2, '', '2014-03-21 00:00:00', ''),
(67380240, 14116498, 2, '', '2014-05-01 00:00:00', ''),
(68830938, 14108774, 2, '', '2014-05-26 00:00:00', ''),
(70258822, 14108774, 2, '', '2014-06-20 00:00:00', ''),
(70519313, 14108774, 2, '', '2014-06-25 00:00:00', ''),
(71442171, 14116498, 2, '', '2014-07-11 00:00:00', ''),
(71444208, 14108774, 2, '', '2014-07-11 00:00:00', ''),
(71960980, 14108774, 2, '', '2014-07-21 00:00:00', ''),
(72225206, 14130068, 2, '', '2014-07-25 00:00:00', ''),
(73508749, 14108774, 2, '', '2014-08-18 00:00:00', ''),
(74035696, 14116498, 2, '', '2014-08-27 00:00:00', ''),
(75424281, 14116498, 2, '', '2014-09-22 00:00:00', ''),
(77093481, 14116498, 2, '', '2014-10-21 00:00:00', ''),
(78637836, 14107531, 5, '1698851', '2014-11-18 00:00:00', ''),
(79879488, 14121669, 2, '', '2014-12-10 00:00:00', ''),
(80290853, 14121669, 2, '', '2014-12-17 00:00:00', ''),
(81039412, 14108774, 2, '', '2015-01-02 00:00:00', ''),
(38919651, 14108774, 2, '', '2013-01-01 00:00:00', ''),
(38926701, 14108774, 2, '', '2013-01-01 00:00:00', ''),
(38926704, 14108774, 1, '', '2013-01-01 00:00:00', ''),
(38927313, 14111607, 2, '', '2013-01-01 00:00:00', ''),
(38927316, 14111607, 2, '', '2013-01-01 00:00:00', ''),
(38927406, 14111641, 3, '', '2013-01-01 00:00:00', ''),
(38927410, 14111607, 2, '', '2013-01-01 00:00:00', ''),
(38928575, 14107531, 2, '', '2013-01-01 00:00:00', ''),
(38931751, 14112752, 2, '', '2013-01-01 00:00:00', ''),
(39069123, 14112752, 1, '', '2013-01-04 00:00:00', ''),
(42270205, 14130068, 2, '', '2013-02-28 00:00:00', ''),
(42393950, 14116194, 2, '', '2013-03-02 00:00:00', ''),
(42670871, 14107531, 5, '45767', '2013-03-06 00:00:00', ''),
(42670872, 14107531, 2, '', '2013-03-06 00:00:00', ''),
(44153910, 14107531, 5, '621210', '2013-03-29 00:00:00', ''),
(44153937, 14107531, 2, '', '2013-03-29 00:00:00', ''),
(45242996, 14107531, 2, '', '2013-04-16 00:00:00', ''),
(46566006, 14108774, 2, '', '2013-05-08 00:00:00', ''),
(46573042, 14116498, 2, '', '2013-05-08 00:00:00', ''),
(46840856, 14108774, 2, '', '2013-05-13 00:00:00', ''),
(46971386, 14108774, 2, '', '2013-05-15 00:00:00', ''),
(50920602, 14108774, 2, '', '2013-07-23 00:00:00', ''),
(51300045, 14108774, 2, '', '2013-07-29 00:00:00', ''),
(51958966, 14112752, 2, '', '2013-08-09 00:00:00', ''),
(52088569, 14116498, 2, '', '2013-08-12 00:00:00', ''),
(53004550, 14116498, 2, '', '2013-08-29 00:00:00', ''),
(53412728, 14116498, 2, '', '2013-09-05 00:00:00', ''),
(54545845, 14116498, 2, '', '2013-09-26 00:00:00', ''),
(54807886, 14108774, 2, '', '2013-10-01 00:00:00', ''),
(57553517, 14116498, 2, '', '2013-11-19 00:00:00', ''),
(58610126, 14116498, 2, '', '2013-12-07 00:00:00', ''),
(60099826, 14107531, 5, '1497697', '2014-01-05 00:00:00', ''),
(60857395, 14112752, 2, '', '2014-01-17 00:00:00', ''),
(61917998, 14116194, 5, '512334', '2014-02-03 00:00:00', ''),
(62050910, 14116194, 2, '', '2014-02-05 00:00:00', ''),
(62051000, 14116194, 5, '257550', '2014-02-05 00:00:00', ''),
(62182166, 14116498, 2, '', '2014-02-07 00:00:00', ''),
(62446401, 14108774, 2, '', '2014-02-12 00:00:00', ''),
(62447525, 14116498, 2, '', '2014-02-12 00:00:00', ''),
(62832653, 14130068, 2, '', '2014-02-18 00:00:00', ''),
(64670486, 14112752, 2, '', '2014-03-18 00:00:00', ''),
(64794628, 14108774, 2, '', '2014-03-19 00:00:00', ''),
(64936820, 14116498, 2, '', '2014-03-21 00:00:00', ''),
(66617860, 14116498, 2, '', '2014-04-17 00:00:00', ''),
(66618555, 14108774, 2, '', '2014-04-17 00:00:00', ''),
(68595700, 14116498, 2, '', '2014-05-21 00:00:00', ''),
(68596477, 14111607, 2, '', '2014-05-21 00:00:00', ''),
(70901047, 14107531, 2, '', '2014-07-02 00:00:00', ''),
(71034229, 14107804, 2, '', '2014-07-04 00:00:00', ''),
(72596079, 14116498, 2, '', '2014-07-31 00:00:00', ''),
(72838537, 14116498, 2, '', '2014-08-05 00:00:00', ''),
(76323492, 14111607, 2, '', '2014-10-08 00:00:00', ''),
(76461030, 14108774, 2, '', '2014-10-10 00:00:00', ''),
(77501585, 14116498, 2, '', '2014-10-29 00:00:00', ''),
(79814000, 14107531, 2, '', '2014-12-09 00:00:00', ''),
(80467327, 14108774, 2, '', '2014-12-20 00:00:00', ''),
(80729981, 14116498, 2, '', '2014-12-26 00:00:00', ''),
(81237725, 14108774, 2, '', '2015-01-06 00:00:00', ''),
(38979435, 14116498, 1, '', '2013-01-02 00:00:00', ''),
(40614103, 14116194, 2, '', '2013-01-31 00:00:00', ''),
(42680041, 14116498, 2, '', '2013-03-06 00:00:00', ''),
(45545251, 14116498, 2, '', '2013-04-21 00:00:00', ''),
(46476177, 16348071, 2, '', '2013-05-07 00:00:00', ''),
(47010113, 14111607, 2, '', '2013-05-16 00:00:00', ''),
(50179142, 14108774, 2, '', '2013-07-09 00:00:00', ''),
(50306702, 14108774, 2, '', '2013-07-11 00:00:00', ''),
(50822248, 14108774, 2, '', '2013-07-21 00:00:00', ''),
(51621445, 14108774, 2, '', '2013-08-04 00:00:00', ''),
(51765929, 14108774, 2, '', '2013-08-06 00:00:00', ''),
(52179760, 14108774, 2, '', '2013-08-14 00:00:00', ''),
(52302362, 14108774, 2, '', '2013-08-16 00:00:00', ''),
(52422355, 14107531, 2, '', '2013-08-19 00:00:00', ''),
(56240575, 14108774, 2, '', '2013-10-26 00:00:00', ''),
(56628958, 14111607, 2, '', '2013-11-02 00:00:00', ''),
(56921076, 14108774, 2, '', '2013-11-07 00:00:00', ''),
(57588677, 14107804, 2, '', '2013-11-19 00:00:00', ''),
(57730890, 14121669, 2, '', '2013-11-21 00:00:00', ''),
(58401244, 14116498, 2, '', '2013-12-03 00:00:00', ''),
(59838174, 14119297, 2, '', '2013-12-30 00:00:00', ''),
(60494559, 14112752, 2, '', '2014-01-11 00:00:00', ''),
(63031766, 14116498, 2, '', '2014-02-20 00:00:00', ''),
(63429408, 14112752, 2, '', '2014-02-26 00:00:00', ''),
(65465258, 14116498, 2, '', '2014-03-30 00:00:00', ''),
(66011962, 14116498, 2, '', '2014-04-08 00:00:00', ''),
(67047565, 14116498, 2, '', '2014-04-25 00:00:00', ''),
(69525413, 14108774, 2, '', '2014-06-06 00:00:00', ''),
(70176622, 14130068, 2, '', '2014-06-18 00:00:00', ''),
(70583301, 14108774, 2, '', '2014-06-26 00:00:00', ''),
(70731698, 14116498, 2, '', '2014-06-29 00:00:00', ''),
(71008842, 14112752, 2, '', '2014-07-03 00:00:00', ''),
(71303987, 14119297, 2, '', '2014-07-09 00:00:00', ''),
(71565111, 14117330, 2, '', '2014-07-14 00:00:00', ''),
(72757474, 14107531, 2, '', '2014-08-04 00:00:00', ''),
(74167966, 14116498, 2, '', '2014-08-29 00:00:00', ''),
(74438978, 14116498, 2, '', '2014-09-03 00:00:00', ''),
(74570425, 14108774, 2, '', '2014-09-05 00:00:00', ''),
(74693137, 14116498, 2, '', '2014-09-08 00:00:00', ''),
(75216163, 14108774, 2, '', '2014-09-17 00:00:00', ''),
(55317226, 14107208, 5, '2582848', '2013-10-10 00:00:00', ''),
(55449678, 14109099, 2, '', '2013-10-12 00:00:00', ''),
(55591006, 14114443, 2, '', '2013-10-15 00:00:00', ''),
(56240569, 14107208, 5, '1226389', '2013-10-26 00:00:00', ''),
(56240570, 14107208, 2, '', '2013-10-26 00:00:00', ''),
(56631884, 14115349, 2, '', '2013-11-02 00:00:00', ''),
(63037334, 14114443, 2, '', '2014-02-20 00:00:00', ''),
(64114667, 14116215, 2, '', '2014-03-09 00:00:00', ''),
(65186685, 14117121, 2, '', '2014-03-25 00:00:00', ''),
(69525420, 14107208, 2, '', '2014-06-06 00:00:00', ''),
(70056524, 14117121, 2, '', '2014-06-17 00:00:00', ''),
(70583302, 14107208, 2, '', '2014-06-26 00:00:00', ''),
(70730212, 22626273, 2, '', '2014-06-29 00:00:00', ''),
(70730497, 14107208, 5, '3124904', '2014-06-29 00:00:00', ''),
(72615697, 17473500, 2, '', '2014-08-01 00:00:00', ''),
(74570424, 14107208, 2, '', '2014-09-05 00:00:00', ''),
(74956693, 14114411, 5, '1766201', '2014-09-12 00:00:00', ''),
(75216169, 14107208, 2, '', '2014-09-17 00:00:00', ''),
(77193375, 14107208, 2, '', '2014-10-23 00:00:00', ''),
(77554926, 17247129, 3, '', '2014-10-30 00:00:00', ''),
(78354046, 14114411, 2, '', '2014-11-13 00:00:00', ''),
(78354048, 14114411, 5, '2810918', '2014-11-13 00:00:00', ''),
(79532434, 14112839, 2, '', '2014-12-04 00:00:00', ''),
(79532435, 14112839, 5, '714969', '2014-12-04 00:00:00', ''),
(79662165, 14114443, 2, '', '2014-12-06 00:00:00', ''),
(80962871, 14107208, 2, '', '2014-12-31 00:00:00', ''),
(81611631, 14114443, 2, '', '2015-01-13 00:00:00', ''),
(82508506, 22626273, 2, '', '2015-01-28 00:00:00', ''),
(39175067, 14116215, 2, '', '2013-01-06 00:00:00', ''),
(40003521, 14117121, 2, '', '2013-01-21 00:00:00', ''),
(40004808, 14117121, 2, '', '2013-01-21 00:00:00', ''),
(40844768, 14116215, 2, '', '2013-02-04 00:00:00', ''),
(44485306, 14109099, 2, '', '2013-04-04 00:00:00', ''),
(44739442, 14107208, 2, '', '2013-04-08 00:00:00', ''),
(45038874, 14116215, 2, '', '2013-04-12 00:00:00', ''),
(45710587, 14117121, 2, '', '2013-04-24 00:00:00', ''),
(47061832, 14114411, 2, '', '2013-05-16 00:00:00', ''),
(47061834, 14114411, 5, '123127', '2013-05-16 00:00:00', ''),
(47320889, 14107208, 2, '', '2013-05-21 00:00:00', ''),
(48112700, 14115349, 2, '', '2013-06-04 00:00:00', ''),
(48251463, 14107208, 2, '', '2013-06-05 00:00:00', ''),
(49047633, 14111052, 5, '1741677', '2013-06-19 00:00:00', ''),
(49850456, 14120227, 2, '', '2013-07-03 00:00:00', ''),
(50107620, 14111052, 5, '2420871', '2013-07-08 00:00:00', ''),
(50497194, 14117121, 2, '', '2013-07-15 00:00:00', ''),
(50874745, 14117121, 2, '', '2013-07-22 00:00:00', ''),
(53132177, 14114411, 2, '', '2013-08-31 00:00:00', ''),
(53398077, 14114443, 2, '', '2013-09-05 00:00:00', ''),
(54310933, 14107208, 5, '2318880', '2013-09-22 00:00:00', ''),
(54982972, 17247129, 2, '', '2013-10-04 00:00:00', ''),
(55134777, 17473500, 2, '', '2013-10-07 00:00:00', ''),
(56839991, 14112839, 5, '1516977', '2013-11-06 00:00:00', ''),
(56839994, 14112839, 2, '', '2013-11-06 00:00:00', ''),
(57101501, 14117121, 2, '', '2013-11-11 00:00:00', ''),
(57496116, 17247129, 2, '', '2013-11-18 00:00:00', ''),
(58283852, 14117121, 2, '', '2013-12-02 00:00:00', ''),
(58284759, 14114443, 2, '', '2013-12-02 00:00:00', ''),
(59064249, 17247129, 2, '', '2013-12-15 00:00:00', ''),
(59318017, 14107208, 2, '', '2013-12-19 00:00:00', ''),
(61705663, 14114528, 2, '', '2014-01-30 00:00:00', ''),
(63396378, 14107208, 2, '', '2014-02-26 00:00:00', ''),
(63917988, 14120661, 2, '', '2014-03-06 00:00:00', ''),
(64300747, 14114443, 2, '', '2014-03-12 00:00:00', ''),
(64300758, 14114411, 2, '', '2014-03-12 00:00:00', ''),
(64310442, 14114430, 2, '', '2014-03-12 00:00:00', ''),
(65363930, 14115349, 2, '', '2014-03-28 00:00:00', ''),
(65755948, 14107208, 2, '', '2014-04-03 00:00:00', ''),
(69018488, 14115349, 2, '', '2014-05-29 00:00:00', ''),
(69020302, 14107208, 2, '', '2014-05-29 00:00:00', ''),
(69020306, 14107208, 5, '1797628', '2014-05-29 00:00:00', ''),
(69813985, 16723393, 2, '', '2014-06-12 00:00:00', ''),
(71994814, 14114411, 2, '', '2014-07-21 00:00:00', ''),
(72127175, 14107208, 5, '1403990', '2014-07-23 00:00:00', ''),
(72127179, 14107208, 2, '', '2014-07-23 00:00:00', ''),
(73052494, 25197868, 2, '', '2014-08-09 00:00:00', ''),
(73696153, 14107208, 2, '', '2014-08-21 00:00:00', ''),
(75244166, 14107208, 5, '3906557', '2014-09-18 00:00:00', ''),
(76028928, 22626273, 2, '', '2014-10-02 00:00:00', ''),
(76166891, 14112839, 5, '1056173', '2014-10-05 00:00:00', ''),
(77330756, 14114443, 2, '', '2014-10-26 00:00:00', ''),
(77703275, 14115349, 2, '', '2014-11-01 00:00:00', ''),
(79397761, 14114411, 2, '', '2014-12-02 00:00:00', ''),
(79645978, 14114411, 5, '3282633', '2014-12-06 00:00:00', ''),
(79645979, 14114411, 2, '', '2014-12-06 00:00:00', ''),
(79915569, 14120661, 5, '1445313', '2014-12-11 00:00:00', ''),
(82099667, 14112839, 5, '625407', '2015-01-21 00:00:00', ''),
(82609158, 17473500, 2, '', '2015-01-29 00:00:00', ''),
(39184901, 14111052, 2, '', '2013-01-06 00:00:00', ''),
(41153968, 14111052, 5, '606413', '2013-02-09 00:00:00', ''),
(42583715, 14107208, 2, '', '2013-03-05 00:00:00', ''),
(42847033, 14107208, 2, '', '2013-03-09 00:00:00', ''),
(43259573, 14111052, 2, '', '2013-03-15 00:00:00', ''),
(49802700, 14107208, 5, '1533054', '2013-07-02 00:00:00', ''),
(49802701, 14107208, 2, '', '2013-07-02 00:00:00', ''),
(52000363, 14116215, 2, '', '2013-08-11 00:00:00', ''),
(52432803, 14107208, 2, '', '2013-08-19 00:00:00', ''),
(52846160, 17473500, 2, '', '2013-08-26 00:00:00', ''),
(53628763, 14115349, 2, '', '2013-09-10 00:00:00', ''),
(53755252, 14114443, 2, '', '2013-09-12 00:00:00', ''),
(54045791, 14107208, 2, '', '2013-09-17 00:00:00', ''),
(55035410, 14116215, 2, '', '2013-10-05 00:00:00', ''),
(55813518, 14115349, 2, '', '2013-10-18 00:00:00', ''),
(58855163, 14107208, 2, '', '2013-12-11 00:00:00', ''),
(59256994, 14114528, 2, '', '2013-12-18 00:00:00', ''),
(60888865, 14107208, 2, '', '2014-01-17 00:00:00', ''),
(61035298, 14120661, 2, '', '2014-01-20 00:00:00', ''),
(61489234, 14107208, 5, '1183150', '2014-01-27 00:00:00', ''),
(61745228, 14114411, 2, '', '2014-01-31 00:00:00', ''),
(62146093, 14114411, 5, '1206087', '2014-02-06 00:00:00', ''),
(62796359, 14107208, 2, '', '2014-02-17 00:00:00', ''),
(63607053, 14107208, 2, '', '2014-03-01 00:00:00', ''),
(63810105, 14117121, 2, '', '2014-03-04 00:00:00', ''),
(65411736, 14111052, 5, '1887013', '2014-03-29 00:00:00', ''),
(66565128, 14120661, 2, '', '2014-04-17 00:00:00', ''),
(66694906, 14111052, 2, '', '2014-04-19 00:00:00', ''),
(68426919, 14117121, 2, '', '2014-05-19 00:00:00', ''),
(72706583, 14120661, 2, '', '2014-08-03 00:00:00', ''),
(74051210, 14111052, 5, '2832883', '2014-08-27 00:00:00', ''),
(74608321, 18806269, 2, '', '2014-09-06 00:00:00', ''),
(74616246, 14114430, 2, '', '2014-09-07 00:00:00', ''),
(74738657, 17473500, 2, '', '2014-09-09 00:00:00', ''),
(74749842, 22626273, 2, '', '2014-09-09 00:00:00', ''),
(75650577, 14116215, 2, '', '2014-09-25 00:00:00', ''),
(77582773, 14117121, 2, '', '2014-10-30 00:00:00', ''),
(77980226, 14109099, 2, '', '2014-11-06 00:00:00', ''),
(78368203, 14107208, 2, '', '2014-11-13 00:00:00', ''),
(79455618, 22626273, 2, '', '2014-12-03 00:00:00', ''),
(79464463, 14114411, 2, '', '2014-12-03 00:00:00', ''),
(79464465, 14114411, 5, '167194', '2014-12-03 00:00:00', ''),
(80805042, 14107208, 2, '', '2014-12-28 00:00:00', ''),
(81476594, 14120661, 2, '', '2015-01-10 00:00:00', ''),
(81598687, 14114411, 2, '', '2015-01-13 00:00:00', ''),
(82284779, 25073496, 2, '', '2015-01-24 00:00:00', ''),
(38988074, 14120661, 5, '2052164', '2013-01-02 00:00:00', ''),
(38988076, 14120661, 2, '', '2013-01-02 00:00:00', ''),
(38994725, 14117121, 2, '', '2013-01-02 00:00:00', ''),
(38994728, 14117121, 1, '', '2013-01-02 00:00:00', ''),
(39001559, 14117121, 2, '', '2013-01-03 00:00:00', ''),
(39002094, 14111052, 5, '1169659', '2013-01-03 00:00:00', ''),
(39133046, 14116215, 2, '', '2013-01-05 00:00:00', ''),
(39135251, 14111686, 2, '', '2013-01-05 00:00:00', ''),
(39976598, 14117121, 2, '', '2013-01-20 00:00:00', ''),
(42618752, 14114528, 2, '', '2013-03-06 00:00:00', ''),
(43551660, 14116215, 2, '', '2013-03-20 00:00:00', ''),
(43695576, 14116215, 2, '', '2013-03-22 00:00:00', ''),
(43962895, 14110148, 2, '', '2013-03-26 00:00:00', ''),
(48006424, 14114528, 2, '', '2013-06-02 00:00:00', ''),
(50002118, 17247129, 2, '', '2013-07-06 00:00:00', ''),
(52665780, 14107208, 2, '', '2013-08-22 00:00:00', ''),
(52800166, 14107208, 2, '', '2013-08-26 00:00:00', ''),
(54257033, 14107208, 2, '', '2013-09-20 00:00:00', ''),
(54647157, 14115349, 2, '', '2013-09-27 00:00:00', ''),
(54650428, 14114430, 2, '', '2013-09-28 00:00:00', ''),
(54786158, 14107208, 2, '', '2013-10-01 00:00:00', ''),
(38915165, 14107826, 1, '', '2013-01-01 00:00:00', ''),
(38915169, 14107826, 2, '', '2013-01-01 00:00:00', ''),
(38915289, 14107928, 2, '', '2013-01-01 00:00:00', ''),
(38915344, 14107826, 2, '', '2013-01-01 00:00:00', ''),
(38916094, 14107979, 2, '', '2013-01-01 00:00:00', ''),
(38917045, 14107979, 2, '', '2013-01-01 00:00:00', ''),
(38917530, 14107928, 2, '', '2013-01-01 00:00:00', ''),
(38917635, 14107979, 2, '', '2013-01-01 00:00:00', ''),
(38917915, 14108694, 2, '', '2013-01-01 00:00:00', ''),
(38917943, 14107979, 2, '', '2013-01-01 00:00:00', ''),
(38918733, 14107979, 2, '', '2013-01-01 00:00:00', ''),
(38918755, 14107979, 2, '', '2013-01-01 00:00:00', ''),
(38918906, 14109079, 2, '', '2013-01-01 00:00:00', ''),
(38919010, 14109079, 2, '', '2013-01-01 00:00:00', ''),
(39145606, 14112555, 2, '', '2013-01-05 00:00:00', ''),
(39403548, 14108430, 2, '', '2013-01-10 00:00:00', ''),
(39404235, 14108430, 2, '', '2013-01-10 00:00:00', ''),
(39408575, 14154890, 2, '', '2013-01-10 00:00:00', ''),
(39411026, 14108430, 2, '', '2013-01-10 00:00:00', ''),
(39411994, 14120711, 5, '893595', '2013-01-10 00:00:00', ''),
(39541204, 14131358, 2, '', '2013-01-12 00:00:00', ''),
(42784907, 14154890, 2, '', '2013-03-08 00:00:00', ''),
(42914690, 14113461, 2, '', '2013-03-11 00:00:00', ''),
(43449928, 14113461, 2, '', '2013-03-19 00:00:00', ''),
(43449931, 14113427, 2, '', '2013-03-19 00:00:00', ''),
(43589188, 14113057, 2, '', '2013-03-20 00:00:00', ''),
(43868877, 14154890, 2, '', '2013-03-25 00:00:00', ''),
(44258779, 14115314, 2, '', '2013-04-01 00:00:00', ''),
(44502154, 14154890, 2, '', '2013-04-04 00:00:00', ''),
(45423308, 14107979, 2, '', '2013-04-19 00:00:00', ''),
(45423310, 14108694, 2, '', '2013-04-19 00:00:00', ''),
(46507342, 14154890, 2, '', '2013-05-07 00:00:00', ''),
(47691770, 14108694, 2, '', '2013-05-28 00:00:00', ''),
(48898010, 14113461, 2, '', '2013-06-17 00:00:00', ''),
(48898013, 14113427, 2, '', '2013-06-17 00:00:00', ''),
(48904420, 14113461, 2, '', '2013-06-17 00:00:00', ''),
(49563598, 14162208, 2, '', '2013-06-27 00:00:00', ''),
(49563612, 14113559, 5, '938548', '2013-06-27 00:00:00', ''),
(51262904, 14107928, 2, '', '2013-07-29 00:00:00', ''),
(51776313, 14154890, 2, '', '2013-08-07 00:00:00', ''),
(53039374, 14113461, 2, '', '2013-08-29 00:00:00', ''),
(53172436, 14113461, 2, '', '2013-09-01 00:00:00', ''),
(55377548, 14113427, 5, '815672', '2013-10-11 00:00:00', ''),
(55771475, 14113076, 2, '', '2013-10-18 00:00:00', ''),
(56296679, 14162208, 2, '', '2013-10-28 00:00:00', ''),
(56296682, 14113559, 2, '', '2013-10-28 00:00:00', ''),
(56296684, 14113559, 5, '1006439', '2013-10-28 00:00:00', ''),
(56425272, 14111572, 2, '', '2013-10-30 00:00:00', ''),
(56941123, 14113461, 2, '', '2013-11-08 00:00:00', ''),
(56944760, 14113461, 2, '', '2013-11-08 00:00:00', ''),
(57066828, 14113461, 2, '', '2013-11-10 00:00:00', ''),
(57066829, 14113427, 2, '', '2013-11-10 00:00:00', ''),
(57080744, 14108694, 2, '', '2013-11-11 00:00:00', ''),
(57082451, 14107979, 5, '86020', '2013-11-11 00:00:00', ''),
(57082453, 14108694, 2, '', '2013-11-11 00:00:00', ''),
(57082454, 14107979, 2, '', '2013-11-11 00:00:00', ''),
(57466117, 14113461, 2, '', '2013-11-17 00:00:00', ''),
(57475082, 14113427, 2, '', '2013-11-17 00:00:00', ''),
(57475205, 14113461, 2, '', '2013-11-17 00:00:00', ''),
(57475986, 14113427, 2, '', '2013-11-17 00:00:00', ''),
(57477392, 14113461, 2, '', '2013-11-17 00:00:00', ''),
(57844676, 14113461, 2, '', '2013-11-23 00:00:00', ''),
(58251452, 14113461, 2, '', '2013-12-01 00:00:00', ''),
(58774340, 14113461, 2, '', '2013-12-10 00:00:00', ''),
(58774345, 14113427, 2, '', '2013-12-10 00:00:00', ''),
(59039006, 14115314, 2, '', '2013-12-14 00:00:00', ''),
(59043646, 14113461, 2, '', '2013-12-14 00:00:00', ''),
(59434534, 14113461, 2, '', '2013-12-20 00:00:00', ''),
(59434538, 14113427, 2, '', '2013-12-20 00:00:00', ''),
(59434539, 14113427, 5, '2725661', '2013-12-20 00:00:00', ''),
(59565241, 14113461, 2, '', '2013-12-24 00:00:00', ''),
(59822219, 14113461, 2, '', '2013-12-30 00:00:00', ''),
(60059060, 14154890, 2, '', '2014-01-04 00:00:00', ''),
(60317905, 14114729, 2, '', '2014-01-08 00:00:00', ''),
(60576878, 14113057, 5, '1494770', '2014-01-13 00:00:00', ''),
(60840020, 14113461, 2, '', '2014-01-17 00:00:00', ''),
(61496385, 14113461, 2, '', '2014-01-28 00:00:00', ''),
(61496389, 14113427, 2, '', '2014-01-28 00:00:00', ''),
(61499955, 14113461, 2, '', '2014-01-28 00:00:00', ''),
(61757789, 14113461, 2, '', '2014-01-31 00:00:00', ''),
(61772656, 14113461, 2, '', '2014-01-31 00:00:00', ''),
(62021681, 14113461, 2, '', '2014-02-05 00:00:00', ''),
(62416260, 14162208, 2, '', '2014-02-11 00:00:00', ''),
(62690788, 14116014, 2, '', '2014-02-15 00:00:00', ''),
(62694925, 14113461, 2, '', '2014-02-15 00:00:00', ''),
(62943415, 14154890, 2, '', '2014-02-19 00:00:00', ''),
(62947039, 14107928, 2, '', '2014-02-19 00:00:00', ''),
(63206616, 14113461, 2, '', '2014-02-24 00:00:00', ''),
(63342868, 14113427, 5, '965666', '2014-02-25 00:00:00', ''),
(63344737, 14111572, 2, '', '2014-02-25 00:00:00', ''),
(63721713, 14114729, 2, '', '2014-03-03 00:00:00', ''),
(64001737, 14113461, 2, '', '2014-03-07 00:00:00', ''),
(65165561, 20725647, 2, '', '2014-03-25 00:00:00', ''),
(65564664, 14113427, 2, '', '2014-04-01 00:00:00', ''),
(65941374, 14113427, 5, '1317035', '2014-04-07 00:00:00', ''),
(66340875, 14113057, 5, '631351', '2014-04-13 00:00:00', ''),
(66862890, 14113427, 5, '2226082', '2014-04-22 00:00:00', ''),
(67643279, 14107928, 2, '', '2014-05-06 00:00:00', ''),
(68838764, 20159814, 2, '', '2014-05-26 00:00:00', ''),
(68975523, 14154890, 2, '', '2014-05-28 00:00:00', ''),
(69097825, 19648025, 2, '', '2014-05-30 00:00:00', ''),
(69489300, 14113461, 2, '', '2014-06-06 00:00:00', ''),
(69492890, 14107928, 2, '', '2014-06-06 00:00:00', ''),
(70019898, 14162208, 2, '', '2014-06-16 00:00:00', ''),
(70391069, 14113461, 2, '', '2014-06-23 00:00:00', ''),
(70790663, 14113076, 2, '', '2014-06-30 00:00:00', ''),
(71189141, 14113461, 2, '', '2014-07-07 00:00:00', ''),
(72228242, 14114729, 2, '', '2014-07-25 00:00:00', ''),
(72605044, 20159814, 2, '', '2014-08-01 00:00:00', ''),
(73001716, 14108694, 2, '', '2014-08-08 00:00:00', ''),
(73511997, 14113427, 2, '', '2014-08-18 00:00:00', ''),
(73627287, 20159814, 2, '', '2014-08-20 00:00:00', ''),
(73762474, 14162208, 2, '', '2014-08-22 00:00:00', ''),
(74280043, 14114729, 2, '', '2014-09-01 00:00:00', ''),
(74900976, 14113461, 2, '', '2014-09-11 00:00:00', ''),
(74909328, 20159814, 2, '', '2014-09-12 00:00:00', ''),
(75167405, 14154890, 2, '', '2014-09-17 00:00:00', ''),
(75565102, 14113427, 2, '', '2014-09-24 00:00:00', ''),
(75930331, 14113461, 2, '', '2014-09-30 00:00:00', ''),
(75942841, 14107928, 2, '', '2014-10-01 00:00:00', ''),
(76070914, 14114729, 5, '850764', '2014-10-03 00:00:00', ''),
(76180659, 20159814, 2, '', '2014-10-05 00:00:00', ''),
(76827864, 14113057, 2, '', '2014-10-16 00:00:00', ''),
(78256369, 14154890, 2, '', '2014-11-11 00:00:00', ''),
(78495946, 14113427, 2, '', '2014-11-15 00:00:00', ''),
(78495982, 14113461, 2, '', '2014-11-15 00:00:00', ''),
(80405454, 14113427, 2, '', '2014-12-19 00:00:00', ''),
(80405455, 14113427, 5, '50069', '2014-12-19 00:00:00', ''),
(80406900, 14113461, 2, '', '2014-12-19 00:00:00', ''),
(80541802, 14107979, 2, '', '2014-12-22 00:00:00', ''),
(81172377, 14113057, 2, '', '2015-01-05 00:00:00', ''),
(82079036, 14113427, 2, '', '2015-01-21 00:00:00', ''),
(82079038, 14113427, 5, '1342734', '2015-01-21 00:00:00', ''),
(82079046, 14113461, 2, '', '2015-01-21 00:00:00', ''),
(82613784, 14113427, 2, '', '2015-01-29 00:00:00', ''),
(38919149, 14107928, 1, '', '2013-01-01 00:00:00', ''),
(38919155, 14107928, 2, '', '2013-01-01 00:00:00', ''),
(38921099, 14107979, 5, '1422200', '2013-01-01 00:00:00', ''),
(38923571, 14108694, 1, '', '2013-01-01 00:00:00', ''),
(38924490, 14108694, 2, '', '2013-01-01 00:00:00', ''),
(38924492, 14108694, 2, '', '2013-01-01 00:00:00', ''),
(38927566, 14111670, 2, '', '2013-01-01 00:00:00', ''),
(38927809, 14111670, 3, '', '2013-01-01 00:00:00', ''),
(38930816, 14112555, 2, '', '2013-01-01 00:00:00', ''),
(38932534, 14113057, 2, '', '2013-01-01 00:00:00', ''),
(38932842, 14113076, 2, '', '2013-01-01 00:00:00', ''),
(38933813, 14113461, 2, '', '2013-01-01 00:00:00', ''),
(38933817, 14113461, 2, '', '2013-01-01 00:00:00', ''),
(38933818, 14113427, 2, '', '2013-01-01 00:00:00', ''),
(38933820, 14113427, 2, '', '2013-01-01 00:00:00', ''),
(38933881, 14113427, 2, '', '2013-01-01 00:00:00', ''),
(38933884, 14113461, 2, '', '2013-01-01 00:00:00', ''),
(38934420, 14113559, 2, '', '2013-01-01 00:00:00', ''),
(38934534, 14112555, 2, '', '2013-01-01 00:00:00', ''),
(38934706, 14113057, 2, '', '2013-01-01 00:00:00', ''),
(38913243, 14107354, 2, '', '2013-01-01 00:00:00', ''),
(38913244, 14107354, 5, '631619', '2013-01-01 00:00:00', ''),
(38913681, 14107354, 2, '', '2013-01-01 00:00:00', ''),
(38913995, 14107354, 2, '', '2013-01-01 00:00:00', ''),
(38918706, 14109024, 2, '', '2013-01-01 00:00:00', ''),
(39040296, 14115980, 2, '', '2013-01-03 00:00:00', ''),
(39145594, 14112534, 2, '', '2013-01-05 00:00:00', ''),
(39154734, 14112534, 2, '', '2013-01-05 00:00:00', ''),
(39964618, 14110532, 2, '', '2013-01-20 00:00:00', ''),
(40369814, 14115980, 2, '', '2013-01-27 00:00:00', ''),
(40770713, 14110096, 2, '', '2013-02-03 00:00:00', ''),
(41698488, 14110096, 2, '', '2013-02-19 00:00:00', ''),
(43868882, 14117114, 5, '198926', '2013-03-25 00:00:00', ''),
(44257266, 14117348, 2, '', '2013-04-01 00:00:00', ''),
(48903438, 14109796, 2, '', '2013-06-17 00:00:00', ''),
(49425884, 14115701, 2, '', '2013-06-25 00:00:00', ''),
(50476699, 14116003, 2, '', '2013-07-15 00:00:00', ''),
(50476705, 14116003, 5, '1576085', '2013-07-15 00:00:00', ''),
(50725493, 14752347, 2, '', '2013-07-19 00:00:00', ''),
(50862668, 14117348, 2, '', '2013-07-22 00:00:00', ''),
(51776311, 14117114, 2, '', '2013-08-07 00:00:00', ''),
(52165433, 14117114, 5, '549521', '2013-08-14 00:00:00', ''),
(52405571, 14115701, 5, '1857292', '2013-08-18 00:00:00', ''),
(52907856, 14115701, 2, '', '2013-08-27 00:00:00', ''),
(52907860, 14115701, 5, '723722', '2013-08-27 00:00:00', ''),
(53579785, 14115701, 2, '', '2013-09-09 00:00:00', ''),
(53585034, 14974123, 2, '', '2013-09-09 00:00:00', ''),
(54871199, 14116003, 2, '', '2013-10-02 00:00:00', ''),
(55907983, 14117114, 2, '', '2013-10-21 00:00:00', ''),
(56541377, 14115701, 5, '803727', '2013-10-31 00:00:00', ''),
(56541378, 14115701, 2, '', '2013-10-31 00:00:00', ''),
(56811598, 14109024, 5, '1467926', '2013-11-06 00:00:00', ''),
(57466902, 14117114, 5, '1212922', '2013-11-17 00:00:00', ''),
(57847578, 15395445, 2, '', '2013-11-23 00:00:00', ''),
(58919198, 14752347, 2, '', '2013-12-12 00:00:00', ''),
(59038940, 14974123, 2, '', '2013-12-14 00:00:00', ''),
(59048580, 14109796, 2, '', '2013-12-14 00:00:00', ''),
(59560948, 15395445, 3, '', '2013-12-23 00:00:00', ''),
(60051893, 14115701, 2, '', '2014-01-03 00:00:00', ''),
(60059056, 14117114, 2, '', '2014-01-04 00:00:00', ''),
(60059057, 14117114, 5, '42595', '2014-01-04 00:00:00', ''),
(60444325, 15395445, 2, '', '2014-01-10 00:00:00', ''),
(60579339, 14119277, 2, '', '2014-01-13 00:00:00', ''),
(60580606, 15395445, 2, '', '2014-01-13 00:00:00', ''),
(61113131, 14199910, 2, '', '2014-01-21 00:00:00', ''),
(61766648, 15395445, 3, '', '2014-01-31 00:00:00', ''),
(62427345, 14116003, 2, '', '2014-02-11 00:00:00', ''),
(62949314, 14117348, 2, '', '2014-02-19 00:00:00', ''),
(63206613, 15395445, 2, '', '2014-02-24 00:00:00', ''),
(63340004, 15395445, 2, '', '2014-02-25 00:00:00', ''),
(63340297, 14752347, 2, '', '2014-02-25 00:00:00', ''),
(63590559, 14115701, 2, '', '2014-02-28 00:00:00', ''),
(64393911, 14109796, 2, '', '2014-03-13 00:00:00', ''),
(65680063, 14116003, 2, '', '2014-04-02 00:00:00', ''),
(65802336, 14110532, 2, '', '2014-04-04 00:00:00', ''),
(65802337, 14110532, 5, '1554463', '2014-04-04 00:00:00', ''),
(65806843, 15395445, 2, '', '2014-04-04 00:00:00', ''),
(66195621, 15395445, 2, '', '2014-04-10 00:00:00', ''),
(66472555, 14110096, 2, '', '2014-04-15 00:00:00', ''),
(66861683, 14752347, 2, '', '2014-04-22 00:00:00', ''),
(67380238, 14115701, 2, '', '2014-05-01 00:00:00', ''),
(68166371, 15395445, 2, '', '2014-05-14 00:00:00', ''),
(68309152, 15395445, 2, '', '2014-05-16 00:00:00', ''),
(69107750, 14115701, 2, '', '2014-05-30 00:00:00', ''),
(69891814, 15395445, 2, '', '2014-06-13 00:00:00', ''),
(70152811, 14110096, 2, '', '2014-06-18 00:00:00', ''),
(70153726, 14109796, 2, '', '2014-06-18 00:00:00', ''),
(70391041, 15395445, 2, '', '2014-06-23 00:00:00', ''),
(71180396, 15395445, 2, '', '2014-07-07 00:00:00', ''),
(71181663, 14199910, 2, '', '2014-07-07 00:00:00', ''),
(72096483, 14110532, 2, '', '2014-07-23 00:00:00', ''),
(72096486, 14110532, 5, '2535411', '2014-07-23 00:00:00', ''),
(72601917, 15395445, 2, '', '2014-08-01 00:00:00', ''),
(72740335, 14115701, 2, '', '2014-08-04 00:00:00', ''),
(72866531, 14116003, 5, '2516804', '2014-08-06 00:00:00', ''),
(73243148, 14116003, 5, '299583', '2014-08-12 00:00:00', ''),
(73511995, 15395445, 2, '', '2014-08-18 00:00:00', ''),
(73771771, 14116003, 2, '', '2014-08-22 00:00:00', ''),
(74042118, 15395445, 2, '', '2014-08-27 00:00:00', ''),
(74653897, 14110096, 2, '', '2014-09-08 00:00:00', ''),
(74914127, 14116003, 5, '1304519', '2014-09-12 00:00:00', ''),
(75424278, 14115701, 2, '', '2014-09-22 00:00:00', ''),
(76568192, 14109796, 2, '', '2014-10-12 00:00:00', ''),
(77609968, 15395445, 2, '', '2014-10-30 00:00:00', ''),
(78381927, 15395445, 2, '', '2014-11-13 00:00:00', ''),
(78495947, 15395445, 2, '', '2014-11-15 00:00:00', ''),
(79744179, 14109796, 2, '', '2014-12-08 00:00:00', ''),
(79872870, 14109796, 2, '', '2014-12-10 00:00:00', ''),
(80405449, 15395445, 2, '', '2014-12-19 00:00:00', ''),
(80543968, 14116003, 2, '', '2014-12-22 00:00:00', ''),
(80670393, 14109796, 2, '', '2014-12-24 00:00:00', ''),
(80791406, 14109796, 2, '', '2014-12-28 00:00:00', ''),
(80920048, 14109024, 2, '', '2014-12-30 00:00:00', ''),
(81314240, 14115701, 2, '', '2015-01-07 00:00:00', ''),
(81957948, 14109024, 2, '', '2015-01-19 00:00:00', ''),
(82337073, 14110096, 2, '', '2015-01-25 00:00:00', ''),
(82613988, 15395445, 2, '', '2015-01-29 00:00:00', ''),
(82621235, 14116003, 5, '2458319', '2015-01-29 00:00:00', ''),
(82621237, 14116003, 2, '', '2015-01-29 00:00:00', ''),
(38919207, 14109024, 2, '', '2013-01-01 00:00:00', ''),
(38919246, 14109024, 2, '', '2013-01-01 00:00:00', ''),
(38921321, 14107354, 2, '', '2013-01-01 00:00:00', ''),
(38922223, 14109796, 1, '', '2013-01-01 00:00:00', ''),
(38924972, 14110532, 2, '', '2013-01-01 00:00:00', ''),
(38928814, 14110532, 2, '', '2013-01-01 00:00:00', ''),
(38929483, 14110532, 2, '', '2013-01-01 00:00:00', ''),
(38930598, 14112534, 2, '', '2013-01-01 00:00:00', ''),
(38930634, 14112534, 3, '', '2013-01-01 00:00:00', ''),
(38930693, 14112534, 2, '', '2013-01-01 00:00:00', ''),
(38930853, 14112534, 2, '', '2013-01-01 00:00:00', ''),
(38931871, 14112929, 2, '', '2013-01-01 00:00:00', ''),
(38931951, 14112929, 2, '', '2013-01-01 00:00:00', ''),
(38932234, 14112929, 2, '', '2013-01-01 00:00:00', ''),
(38932431, 14112929, 2, '', '2013-01-01 00:00:00', ''),
(38934499, 14112929, 2, '', '2013-01-01 00:00:00', ''),
(38934506, 14112534, 2, '', '2013-01-01 00:00:00', ''),
(38934879, 14112534, 2, '', '2013-01-01 00:00:00', ''),
(38935047, 14112534, 2, '', '2013-01-01 00:00:00', ''),
(38936214, 14112534, 2, '', '2013-01-01 00:00:00', ''),
(38936248, 14112929, 2, '', '2013-01-01 00:00:00', ''),
(42270202, 14110532, 2, '', '2013-02-28 00:00:00', ''),
(42531642, 14115701, 5, '7656', '2013-03-05 00:00:00', ''),
(43343899, 14116882, 2, '', '2013-03-17 00:00:00', ''),
(43744383, 15395445, 2, '', '2013-03-23 00:00:00', ''),
(43878503, 14110096, 2, '', '2013-03-25 00:00:00', ''),
(44829667, 14115701, 2, '', '2013-04-10 00:00:00', ''),
(45892570, 15395445, 2, '', '2013-04-26 00:00:00', ''),
(46569830, 14752347, 2, '', '2013-05-08 00:00:00', ''),
(47642537, 14109796, 2, '', '2013-05-27 00:00:00', ''),
(49999761, 14117114, 2, '', '2013-07-06 00:00:00', ''),
(50258894, 14119277, 2, '', '2013-07-11 00:00:00', ''),
(50382935, 14752347, 3, '', '2013-07-13 00:00:00', ''),
(50648015, 14116003, 5, '2078685', '2013-07-18 00:00:00', ''),
(52088566, 14115701, 2, '', '2013-08-12 00:00:00', ''),
(52092754, 14110532, 2, '', '2013-08-13 00:00:00', ''),
(52359527, 14109796, 2, '', '2013-08-17 00:00:00', ''),
(52748713, 15395445, 2, '', '2013-08-24 00:00:00', '');
INSERT INTO `Votes` (`Id`, `PostId`, `VoteTypeId`, `UserId`, `CreationDate`, `BountyAmount`) VALUES
(53004546, 14115701, 2, '', '2013-08-29 00:00:00', ''),
(53412730, 14115701, 2, '', '2013-09-05 00:00:00', ''),
(53536753, 14974123, 2, '', '2013-09-08 00:00:00', ''),
(53910068, 14116003, 5, '1320195', '2013-09-15 00:00:00', ''),
(53914431, 14115701, 2, '', '2013-09-15 00:00:00', ''),
(54545843, 14115701, 2, '', '2013-09-26 00:00:00', ''),
(55472840, 14974123, 2, '', '2013-10-13 00:00:00', ''),
(55605844, 14110096, 2, '', '2013-10-15 00:00:00', ''),
(56130989, 14110096, 2, '', '2013-10-24 00:00:00', ''),
(56510818, 14112929, 2, '', '2013-10-31 00:00:00', ''),
(57557459, 14116003, 2, '', '2013-11-19 00:00:00', ''),
(58610129, 14115701, 2, '', '2013-12-07 00:00:00', ''),
(59009846, 14119277, 2, '', '2013-12-13 00:00:00', ''),
(59143530, 14109796, 2, '', '2013-12-16 00:00:00', ''),
(59151369, 15395445, 2, '', '2013-12-16 00:00:00', ''),
(60484875, 14115944, 2, '', '2014-01-11 00:00:00', ''),
(60866561, 14115980, 5, '2950946', '2014-01-17 00:00:00', ''),
(60984670, 14752347, 2, '', '2014-01-20 00:00:00', ''),
(75608069, 14111607, 2, '', '2014-09-24 00:00:00', ''),
(75608072, 14111607, 5, '1165643', '2014-09-24 00:00:00', ''),
(76128197, 14107804, 2, '', '2014-10-04 00:00:00', ''),
(76264374, 14107531, 2, '', '2014-10-07 00:00:00', ''),
(76264376, 14107531, 5, '664652', '2014-10-07 00:00:00', ''),
(76666724, 14108774, 2, '', '2014-10-14 00:00:00', ''),
(77193370, 14108774, 2, '', '2014-10-23 00:00:00', ''),
(77824113, 14116498, 2, '', '2014-11-04 00:00:00', ''),
(79150982, 14112752, 2, '', '2014-11-27 00:00:00', ''),
(79543713, 14121669, 2, '', '2014-12-04 00:00:00', ''),
(80962839, 14108774, 2, '', '2014-12-31 00:00:00', ''),
(82507516, 14116498, 2, '', '2015-01-28 00:00:00', ''),
(82508499, 14116498, 2, '', '2015-01-28 00:00:00', ''),
(39035313, 14116521, 2, '', '2013-01-03 00:00:00', ''),
(40559794, 14112752, 2, '', '2013-01-30 00:00:00', ''),
(42890422, 14108774, 2, '', '2013-03-10 00:00:00', ''),
(44609288, 14108774, 2, '', '2013-04-06 00:00:00', ''),
(44739440, 14108774, 2, '', '2013-04-08 00:00:00', ''),
(46242366, 16348071, 2, '', '2013-05-02 00:00:00', ''),
(46515409, 16348071, 2, '', '2013-05-08 00:00:00', ''),
(47320891, 14108774, 2, '', '2013-05-21 00:00:00', ''),
(48251461, 14108774, 2, '', '2013-06-05 00:00:00', ''),
(50509240, 16726918, 2, '', '2013-07-16 00:00:00', ''),
(51535511, 14116498, 2, '', '2013-08-02 00:00:00', ''),
(52724774, 14116498, 2, '', '2013-08-23 00:00:00', ''),
(52862751, 14116498, 2, '', '2013-08-27 00:00:00', ''),
(57238397, 14116498, 2, '', '2013-11-13 00:00:00', ''),
(59318015, 14108774, 2, '', '2013-12-19 00:00:00', ''),
(59610304, 14116498, 2, '', '2013-12-25 00:00:00', ''),
(59875034, 14116498, 2, '', '2013-12-31 00:00:00', ''),
(62608705, 14108774, 2, '', '2014-02-14 00:00:00', ''),
(65755926, 14108774, 2, '', '2014-04-03 00:00:00', ''),
(66555937, 14108774, 2, '', '2014-04-16 00:00:00', ''),
(68765291, 14108774, 2, '', '2014-05-24 00:00:00', ''),
(69020309, 14108774, 2, '', '2014-05-29 00:00:00', ''),
(69814240, 14108774, 2, '', '2014-06-12 00:00:00', ''),
(70205717, 14116498, 2, '', '2014-06-19 00:00:00', ''),
(72008938, 14107804, 2, '', '2014-07-22 00:00:00', ''),
(72127174, 14108774, 2, '', '2014-07-23 00:00:00', ''),
(72128659, 14112752, 2, '', '2014-07-23 00:00:00', ''),
(72254840, 14116498, 2, '', '2014-07-25 00:00:00', ''),
(72923642, 14107531, 2, '', '2014-08-07 00:00:00', ''),
(73184382, 14116498, 3, '', '2014-08-12 00:00:00', ''),
(73696151, 14108774, 2, '', '2014-08-21 00:00:00', ''),
(76028922, 14116498, 2, '', '2014-10-02 00:00:00', ''),
(76288623, 14116498, 2, '', '2014-10-07 00:00:00', ''),
(76299583, 14108774, 2, '', '2014-10-07 00:00:00', ''),
(76555952, 14108774, 2, '', '2014-10-12 00:00:00', ''),
(82099660, 14121669, 2, '', '2015-01-21 00:00:00', ''),
(40176477, 14108774, 2, '', '2013-01-23 00:00:00', ''),
(46493523, 16344827, 2, '', '2013-05-07 00:00:00', ''),
(46493551, 16348071, 2, '', '2013-05-07 00:00:00', ''),
(47452375, 14116498, 2, '', '2013-05-23 00:00:00', ''),
(49416550, 14130068, 2, '', '2013-06-25 00:00:00', ''),
(49540084, 14107531, 5, '671229', '2013-06-27 00:00:00', ''),
(49802678, 14108774, 2, '', '2013-07-02 00:00:00', ''),
(50087953, 14108774, 2, '', '2013-07-08 00:00:00', ''),
(50093549, 14116498, 2, '', '2013-07-08 00:00:00', ''),
(50357689, 14108774, 2, '', '2013-07-12 00:00:00', ''),
(51591030, 14121669, 2, '', '2013-08-03 00:00:00', ''),
(51593675, 16726918, 2, '', '2013-08-03 00:00:00', ''),
(51865347, 14116498, 2, '', '2013-08-08 00:00:00', ''),
(53504685, 14112752, 2, '', '2013-09-07 00:00:00', ''),
(54045790, 14108774, 2, '', '2013-09-17 00:00:00', ''),
(55558342, 14108774, 2, '', '2013-10-15 00:00:00', ''),
(58309840, 14116498, 2, '', '2013-12-02 00:00:00', ''),
(58310194, 14116498, 2, '', '2013-12-02 00:00:00', ''),
(58719341, 14116498, 2, '', '2013-12-09 00:00:00', ''),
(58855161, 14108774, 2, '', '2013-12-11 00:00:00', ''),
(58987555, 14108774, 2, '', '2013-12-13 00:00:00', ''),
(59258519, 14116498, 2, '', '2013-12-18 00:00:00', ''),
(61489235, 14108774, 2, '', '2014-01-27 00:00:00', ''),
(62013403, 14116194, 2, '', '2014-02-05 00:00:00', ''),
(62678326, 14111607, 2, '', '2014-02-15 00:00:00', ''),
(62796358, 14108774, 2, '', '2014-02-17 00:00:00', ''),
(63607052, 14108774, 2, '', '2014-03-01 00:00:00', ''),
(64353848, 16503127, 2, '', '2014-03-12 00:00:00', ''),
(64353850, 14107531, 2, '', '2014-03-12 00:00:00', ''),
(66428326, 14116498, 2, '', '2014-04-15 00:00:00', ''),
(66833014, 14121669, 3, '', '2014-04-22 00:00:00', ''),
(66961524, 14121669, 2, '', '2014-04-24 00:00:00', ''),
(67490571, 14107531, 5, '530967', '2014-05-03 00:00:00', ''),
(67769790, 14121669, 2, '', '2014-05-07 00:00:00', ''),
(67895362, 14107531, 5, '985949', '2014-05-09 00:00:00', ''),
(68294806, 14116498, 2, '', '2014-05-16 00:00:00', ''),
(68549962, 14116498, 2, '', '2014-05-21 00:00:00', ''),
(70284874, 14116498, 2, '', '2014-06-20 00:00:00', ''),
(70807986, 16726918, 2, '', '2014-06-30 00:00:00', ''),
(72706622, 14121669, 2, '', '2014-08-03 00:00:00', ''),
(72986152, 14108774, 2, '', '2014-08-07 00:00:00', ''),
(74179982, 14107804, 2, '', '2014-08-29 00:00:00', ''),
(74321965, 14116498, 2, '', '2014-09-02 00:00:00', ''),
(76495448, 14108774, 2, '', '2014-10-10 00:00:00', ''),
(77018792, 14112752, 2, '', '2014-10-20 00:00:00', ''),
(78368202, 14108774, 2, '', '2014-11-13 00:00:00', ''),
(79176143, 14116498, 2, '', '2014-11-27 00:00:00', ''),
(79455305, 14121669, 2, '', '2014-12-03 00:00:00', ''),
(80805041, 14108774, 2, '', '2014-12-28 00:00:00', ''),
(80953063, 14116498, 2, '', '2014-12-31 00:00:00', ''),
(82663979, 14116498, 2, '', '2015-01-30 00:00:00', ''),
(38990558, 14116462, 2, '', '2013-01-02 00:00:00', ''),
(38997342, 14130068, 2, '', '2013-01-02 00:00:00', ''),
(38997380, 14116462, 1, '', '2013-01-02 00:00:00', ''),
(39134558, 14130068, 1, '', '2013-01-05 00:00:00', ''),
(41904247, 14107531, 5, '271996', '2013-02-22 00:00:00', ''),
(50004013, 14116498, 2, '', '2013-07-06 00:00:00', ''),
(52247757, 14108774, 2, '', '2013-08-15 00:00:00', ''),
(52665778, 14108774, 2, '', '2013-08-22 00:00:00', ''),
(52800169, 14108774, 2, '', '2013-08-26 00:00:00', ''),
(54256973, 14108774, 2, '', '2013-09-20 00:00:00', ''),
(54786153, 14108774, 2, '', '2013-10-01 00:00:00', ''),
(55311858, 14108774, 2, '', '2013-10-10 00:00:00', ''),
(55446408, 14108774, 2, '', '2013-10-12 00:00:00', ''),
(58064869, 14108774, 2, '', '2013-11-27 00:00:00', ''),
(58458382, 14116498, 2, '', '2013-12-04 00:00:00', ''),
(59127310, 14108774, 2, '', '2013-12-16 00:00:00', ''),
(60952085, 14130068, 2, '', '2014-01-19 00:00:00', ''),
(60956504, 14108774, 2, '', '2014-01-19 00:00:00', ''),
(61329747, 14116498, 2, '', '2014-01-24 00:00:00', ''),
(61338525, 14107804, 2, '', '2014-01-24 00:00:00', ''),
(61463032, 14107804, 5, '2302003', '2014-01-27 00:00:00', ''),
(61470534, 14116498, 2, '', '2014-01-27 00:00:00', ''),
(62755763, 14111607, 2, '', '2014-02-17 00:00:00', ''),
(63015523, 14108774, 2, '', '2014-02-20 00:00:00', ''),
(63274354, 14116498, 2, '', '2014-02-24 00:00:00', ''),
(64453906, 14108774, 2, '', '2014-03-14 00:00:00', ''),
(64846295, 14121669, 2, '', '2014-03-20 00:00:00', ''),
(65118476, 14108774, 2, '', '2014-03-25 00:00:00', ''),
(65900280, 14108774, 2, '', '2014-04-06 00:00:00', ''),
(66667002, 14108774, 2, '', '2014-04-18 00:00:00', ''),
(68901777, 14116498, 2, '', '2014-05-27 00:00:00', ''),
(69161057, 14121669, 2, '', '2014-06-01 00:00:00', ''),
(73587799, 14116498, 2, '', '2014-08-19 00:00:00', ''),
(76467966, 14116498, 2, '', '2014-10-10 00:00:00', ''),
(76726438, 14121669, 2, '', '2014-10-15 00:00:00', ''),
(78419392, 14130068, 2, '', '2014-11-14 00:00:00', ''),
(78689897, 14108774, 2, '', '2014-11-19 00:00:00', ''),
(78803841, 14108774, 2, '', '2014-11-21 00:00:00', ''),
(79069334, 14107531, 2, '', '2014-11-26 00:00:00', ''),
(80212132, 14116498, 2, '', '2014-12-16 00:00:00', ''),
(80351302, 14116498, 2, '', '2014-12-18 00:00:00', ''),
(38955057, 14107804, 2, '', '2013-01-02 00:00:00', ''),
(38955914, 14119297, 2, '', '2013-01-02 00:00:00', ''),
(38963420, 14121669, 2, '', '2013-01-02 00:00:00', ''),
(38965926, 14116498, 2, '', '2013-01-02 00:00:00', ''),
(38967773, 14108774, 2, '', '2013-01-02 00:00:00', ''),
(41945568, 14116462, 2, '', '2013-02-23 00:00:00', ''),
(42631173, 14108774, 2, '', '2013-03-06 00:00:00', ''),
(45336459, 14116498, 2, '', '2013-04-17 00:00:00', ''),
(46282609, 14121669, 2, '', '2013-05-03 00:00:00', ''),
(47089485, 14108774, 2, '', '2013-05-17 00:00:00', ''),
(47494127, 14116498, 2, '', '2013-05-24 00:00:00', ''),
(48288216, 14108774, 2, '', '2013-06-06 00:00:00', ''),
(50444952, 14108774, 2, '', '2013-07-15 00:00:00', ''),
(51374674, 14108774, 2, '', '2013-07-30 00:00:00', ''),
(52051371, 14130068, 2, '', '2013-08-12 00:00:00', ''),
(55134473, 14110890, 2, '', '2013-10-07 00:00:00', ''),
(55134667, 17449231, 2, '', '2013-10-07 00:00:00', ''),
(58009105, 14110890, 2, '', '2013-11-26 00:00:00', ''),
(58280020, 14110890, 2, '', '2013-12-02 00:00:00', ''),
(58930540, 14116513, 2, '', '2013-12-12 00:00:00', ''),
(62091879, 14110890, 2, '', '2014-02-06 00:00:00', ''),
(63129601, 21105833, 2, '', '2014-02-22 00:00:00', ''),
(64573362, 19137473, 2, '', '2014-03-16 00:00:00', ''),
(64841609, 14116513, 2, '', '2014-03-20 00:00:00', ''),
(66152562, 14110890, 2, '', '2014-04-10 00:00:00', ''),
(67340732, 14115620, 5, '859154', '2014-04-30 00:00:00', ''),
(67340734, 14115620, 2, '', '2014-04-30 00:00:00', ''),
(68241043, 14111651, 2, '', '2014-05-15 00:00:00', ''),
(69285605, 14110890, 2, '', '2014-06-03 00:00:00', ''),
(69547023, 23713981, 2, '', '2014-06-07 00:00:00', ''),
(70067615, 14116420, 2, '', '2014-06-17 00:00:00', ''),
(70067616, 14116513, 2, '', '2014-06-17 00:00:00', ''),
(70072490, 21105833, 2, '', '2014-06-17 00:00:00', ''),
(71359563, 23713981, 2, '', '2014-07-10 00:00:00', ''),
(73694369, 17449231, 2, '', '2014-08-21 00:00:00', ''),
(74728849, 17449231, 2, '', '2014-09-09 00:00:00', ''),
(76031466, 14110890, 2, '', '2014-10-02 00:00:00', ''),
(76031472, 17449231, 2, '', '2014-10-02 00:00:00', ''),
(76164119, 14110890, 5, '386739', '2014-10-05 00:00:00', ''),
(76819531, 14111651, 2, '', '2014-10-16 00:00:00', ''),
(82355733, 14110890, 5, '876814', '2015-01-26 00:00:00', ''),
(82599411, 14485464, 2, '', '2015-01-29 00:00:00', ''),
(39010344, 14115913, 2, '', '2013-01-03 00:00:00', ''),
(39010381, 14115913, 2, '', '2013-01-03 00:00:00', ''),
(39010482, 14125030, 2, '', '2013-01-03 00:00:00', ''),
(39011140, 14115902, 2, '', '2013-01-03 00:00:00', ''),
(39012841, 14125030, 2, '', '2013-01-03 00:00:00', ''),
(39012880, 14125030, 2, '', '2013-01-03 00:00:00', ''),
(39313533, 14185426, 2, '', '2013-01-08 00:00:00', ''),
(39313534, 14185426, 1, '', '2013-01-08 00:00:00', ''),
(39313583, 14185426, 9, '', '2013-01-08 00:00:00', '50'),
(40174084, 14485464, 1, '', '2013-01-23 00:00:00', ''),
(41421348, 14115620, 2, '', '2013-02-14 00:00:00', ''),
(42856405, 14185426, 2, '', '2013-03-09 00:00:00', ''),
(46343320, 16377459, 2, '', '2013-05-04 00:00:00', ''),
(46348418, 16377459, 2, '', '2013-05-05 00:00:00', ''),
(50219257, 14110890, 5, '432259', '2013-07-10 00:00:00', ''),
(51177704, 14114741, 2, '', '2013-07-27 00:00:00', ''),
(56418111, 14185426, 2, '', '2013-10-29 00:00:00', ''),
(57084355, 14109036, 2, '', '2013-11-11 00:00:00', ''),
(59515975, 14118242, 2, '', '2013-12-23 00:00:00', ''),
(59654970, 14114741, 2, '', '2013-12-26 00:00:00', ''),
(62678324, 14111651, 2, '', '2014-02-15 00:00:00', ''),
(66694908, 14185426, 2, '', '2014-04-19 00:00:00', ''),
(68807594, 21105833, 2, '', '2014-05-26 00:00:00', ''),
(69463826, 17449231, 3, '', '2014-06-05 00:00:00', ''),
(69467917, 14110890, 2, '', '2014-06-06 00:00:00', ''),
(69878113, 18988240, 2, '', '2014-06-13 00:00:00', ''),
(72854421, 21105833, 2, '', '2014-08-06 00:00:00', ''),
(73648864, 17449231, 3, '', '2014-08-20 00:00:00', ''),
(75128573, 14114741, 2, '', '2014-09-16 00:00:00', ''),
(76482992, 14110890, 2, '', '2014-10-10 00:00:00', ''),
(76482996, 14110890, 5, '2607389', '2014-10-10 00:00:00', ''),
(77985558, 14110890, 2, '', '2014-11-06 00:00:00', ''),
(81207353, 14114741, 2, '', '2015-01-06 00:00:00', ''),
(82285661, 19137473, 2, '', '2015-01-24 00:00:00', ''),
(38999141, 14115913, 2, '', '2013-01-03 00:00:00', ''),
(39127622, 14116513, 2, '', '2013-01-05 00:00:00', ''),
(39706881, 14115620, 2, '', '2013-01-15 00:00:00', ''),
(46665822, 16377459, 2, '', '2013-05-10 00:00:00', ''),
(49852604, 14110890, 8, '1144090', '2013-07-03 00:00:00', '200'),
(49862911, 14110890, 2, '', '2013-07-03 00:00:00', ''),
(53329169, 17449231, 2, '', '2013-09-04 00:00:00', ''),
(53330511, 14110890, 5, '310342', '2013-09-04 00:00:00', ''),
(53330512, 14110890, 2, '', '2013-09-04 00:00:00', ''),
(53330516, 17449231, 2, '', '2013-09-04 00:00:00', ''),
(53596939, 14115620, 5, '41403', '2013-09-09 00:00:00', ''),
(57936442, 14110890, 2, '', '2013-11-25 00:00:00', ''),
(60557946, 14110890, 5, '791478', '2014-01-13 00:00:00', ''),
(60958088, 14116513, 2, '', '2014-01-19 00:00:00', ''),
(61344217, 17449231, 2, '', '2014-01-24 00:00:00', ''),
(61465365, 14115620, 2, '', '2014-01-27 00:00:00', ''),
(61465366, 14115620, 5, '818004', '2014-01-27 00:00:00', ''),
(62248689, 14238131, 2, '', '2014-02-08 00:00:00', ''),
(62755764, 14111651, 2, '', '2014-02-17 00:00:00', ''),
(62758499, 21105833, 2, '', '2014-02-17 00:00:00', ''),
(62758811, 14185426, 2, '', '2014-02-17 00:00:00', ''),
(63796553, 14110890, 5, '1465054', '2014-03-04 00:00:00', ''),
(63928185, 21105833, 2, '', '2014-03-06 00:00:00', ''),
(64059698, 14185426, 2, '', '2014-03-07 00:00:00', ''),
(64062913, 14114741, 2, '', '2014-03-07 00:00:00', ''),
(64449161, 14110890, 2, '', '2014-03-13 00:00:00', ''),
(64458427, 14185426, 2, '', '2014-03-14 00:00:00', ''),
(65248608, 21105833, 2, '', '2014-03-26 00:00:00', ''),
(65636783, 14110890, 5, '649497', '2014-04-02 00:00:00', ''),
(65636786, 14110890, 2, '', '2014-04-02 00:00:00', ''),
(66295527, 21105833, 2, '', '2014-04-12 00:00:00', ''),
(67194641, 14110890, 2, '', '2014-04-28 00:00:00', ''),
(70479848, 19832359, 2, '', '2014-06-24 00:00:00', ''),
(71018569, 14114741, 2, '', '2014-07-03 00:00:00', ''),
(71784282, 14111651, 2, '', '2014-07-17 00:00:00', ''),
(72056832, 14185426, 2, '', '2014-07-22 00:00:00', ''),
(73850978, 14116513, 2, '', '2014-08-24 00:00:00', ''),
(75157134, 14110890, 5, '1091947', '2014-09-16 00:00:00', ''),
(75157135, 17449231, 2, '', '2014-09-16 00:00:00', ''),
(75157136, 14110890, 2, '', '2014-09-16 00:00:00', ''),
(77128536, 14114741, 2, '', '2014-10-22 00:00:00', ''),
(77244127, 14115620, 2, '', '2014-10-24 00:00:00', ''),
(77244135, 14115620, 5, '351982', '2014-10-24 00:00:00', ''),
(79445479, 14115620, 2, '', '2014-12-03 00:00:00', ''),
(81125970, 14185426, 2, '', '2015-01-05 00:00:00', ''),
(82044977, 14185426, 2, '', '2015-01-20 00:00:00', ''),
(38955026, 14118242, 2, '', '2013-01-02 00:00:00', ''),
(38957191, 14116513, 2, '', '2013-01-02 00:00:00', ''),
(38958490, 14115913, 2, '', '2013-01-02 00:00:00', ''),
(38958523, 14115913, 2, '', '2013-01-02 00:00:00', ''),
(38966285, 14118242, 2, '', '2013-01-02 00:00:00', ''),
(38966480, 14118242, 2, '', '2013-01-02 00:00:00', ''),
(38967141, 14118242, 2, '', '2013-01-02 00:00:00', ''),
(39215132, 14125030, 2, '', '2013-01-07 00:00:00', ''),
(39502527, 14238131, 2, '', '2013-01-11 00:00:00', ''),
(39634659, 14110890, 5, '593612', '2013-01-14 00:00:00', ''),
(44121078, 14185426, 2, '', '2013-03-29 00:00:00', ''),
(47890833, 14115913, 2, '', '2013-05-30 00:00:00', ''),
(49901648, 14110890, 2, '', '2013-07-04 00:00:00', ''),
(49908854, 14116420, 2, '', '2013-07-04 00:00:00', ''),
(49915169, 14110890, 5, '66372', '2013-07-04 00:00:00', ''),
(49915172, 17449231, 2, '', '2013-07-04 00:00:00', ''),
(50182197, 14114741, 2, '', '2013-07-09 00:00:00', ''),
(50188979, 14110890, 5, '456814', '2013-07-10 00:00:00', ''),
(55268440, 14110890, 2, '', '2013-10-09 00:00:00', ''),
(55275912, 14110890, 2, '', '2013-10-09 00:00:00', ''),
(55275913, 14110890, 5, '300685', '2013-10-09 00:00:00', ''),
(55935687, 14114741, 2, '', '2013-10-21 00:00:00', ''),
(57385022, 14114741, 2, '', '2013-11-15 00:00:00', ''),
(57390439, 14114741, 2, '', '2013-11-15 00:00:00', ''),
(58555518, 14185426, 2, '', '2013-12-06 00:00:00', ''),
(58563434, 14125030, 2, '', '2013-12-06 00:00:00', ''),
(60548423, 14110890, 5, '1606952', '2014-01-12 00:00:00', ''),
(60548424, 14110890, 2, '', '2014-01-12 00:00:00', ''),
(61980870, 14114741, 2, '', '2014-02-04 00:00:00', ''),
(63312145, 14185426, 2, '', '2014-02-25 00:00:00', ''),
(65651457, 17449231, 2, '', '2014-04-02 00:00:00', ''),
(66442226, 14110890, 2, '', '2014-04-15 00:00:00', ''),
(67242848, 21105833, 2, '', '2014-04-29 00:00:00', ''),
(67621774, 21105833, 2, '', '2014-05-05 00:00:00', ''),
(67740161, 21105833, 2, '', '2014-05-07 00:00:00', ''),
(68923187, 14114741, 2, '', '2014-05-27 00:00:00', ''),
(69835319, 14114741, 2, '', '2014-06-12 00:00:00', ''),
(70350719, 21105833, 2, '', '2014-06-22 00:00:00', ''),
(73195807, 14110890, 2, '', '2014-08-12 00:00:00', ''),
(76638863, 14185426, 2, '', '2014-10-14 00:00:00', ''),
(80748022, 14185426, 2, '', '2014-12-26 00:00:00', ''),
(82701842, 23713981, 2, '', '2015-01-31 00:00:00', ''),
(38938717, 14114741, 2, '', '2013-01-01 00:00:00', ''),
(38938727, 14114741, 2, '', '2013-01-01 00:00:00', ''),
(38938856, 14114741, 2, '', '2013-01-01 00:00:00', ''),
(38938954, 14114741, 2, '', '2013-01-01 00:00:00', ''),
(38939698, 14114741, 2, '', '2013-01-01 00:00:00', ''),
(38942101, 14115620, 2, '', '2013-01-02 00:00:00', ''),
(38934772, 14113691, 5, '1502364', '2013-01-01 00:00:00', ''),
(38934802, 14113691, 2, '', '2013-01-01 00:00:00', ''),
(38934803, 14113691, 5, '927589', '2013-01-01 00:00:00', ''),
(38934987, 14113057, 2, '', '2013-01-01 00:00:00', ''),
(38935052, 14113691, 2, '', '2013-01-01 00:00:00', ''),
(38935054, 14113691, 5, '950349', '2013-01-01 00:00:00', ''),
(38935449, 14113691, 2, '', '2013-01-01 00:00:00', ''),
(38935450, 14113691, 5, '707145', '2013-01-01 00:00:00', ''),
(38935490, 14113691, 2, '', '2013-01-01 00:00:00', ''),
(38935572, 14113691, 5, '1414475', '2013-01-01 00:00:00', ''),
(38935795, 14113691, 2, '', '2013-01-01 00:00:00', ''),
(38936026, 14113691, 2, '', '2013-01-01 00:00:00', ''),
(38936027, 14113691, 5, '1368828', '2013-01-01 00:00:00', ''),
(38936224, 14113691, 2, '', '2013-01-01 00:00:00', ''),
(38936388, 14113691, 2, '', '2013-01-01 00:00:00', ''),
(40254152, 14490508, 2, '', '2013-01-24 00:00:00', ''),
(42381786, 14113427, 2, '', '2013-03-02 00:00:00', ''),
(42381787, 14113461, 2, '', '2013-03-02 00:00:00', ''),
(42807034, 14154890, 2, '', '2013-03-08 00:00:00', ''),
(43342179, 14107979, 2, '', '2013-03-17 00:00:00', ''),
(43744389, 14113461, 2, '', '2013-03-23 00:00:00', ''),
(44147704, 14113559, 5, '765960', '2013-03-29 00:00:00', ''),
(44557662, 14107979, 5, '1603234', '2013-04-05 00:00:00', ''),
(44828776, 14113461, 2, '', '2013-04-10 00:00:00', ''),
(45618748, 14113461, 2, '', '2013-04-22 00:00:00', ''),
(46031012, 14108694, 2, '', '2013-04-29 00:00:00', ''),
(46031264, 14108694, 2, '', '2013-04-29 00:00:00', ''),
(46294782, 14113461, 2, '', '2013-05-03 00:00:00', ''),
(46838234, 14113461, 2, '', '2013-05-13 00:00:00', ''),
(46838393, 14113427, 2, '', '2013-05-13 00:00:00', ''),
(47242634, 14113461, 2, '', '2013-05-20 00:00:00', ''),
(47242641, 14113427, 2, '', '2013-05-20 00:00:00', ''),
(47242994, 15079773, 2, '', '2013-05-20 00:00:00', ''),
(48438774, 14108694, 2, '', '2013-06-09 00:00:00', ''),
(48700852, 14109079, 2, '', '2013-06-13 00:00:00', ''),
(48832538, 14154890, 2, '', '2013-06-15 00:00:00', ''),
(49613515, 14154890, 2, '', '2013-06-28 00:00:00', ''),
(49880294, 14113461, 2, '', '2013-07-03 00:00:00', ''),
(49990058, 14113461, 2, '', '2013-07-05 00:00:00', ''),
(50248042, 14113461, 2, '', '2013-07-10 00:00:00', ''),
(52097802, 14113461, 2, '', '2013-08-13 00:00:00', ''),
(52743073, 14108694, 2, '', '2013-08-24 00:00:00', ''),
(52743583, 14115314, 5, '128028', '2013-08-24 00:00:00', ''),
(52743584, 14115314, 2, '', '2013-08-24 00:00:00', ''),
(52748651, 14113461, 2, '', '2013-08-24 00:00:00', ''),
(53012021, 14113461, 2, '', '2013-08-29 00:00:00', ''),
(53013263, 14113461, 2, '', '2013-08-29 00:00:00', ''),
(53151601, 14113461, 2, '', '2013-09-01 00:00:00', ''),
(54295377, 14114729, 2, '', '2013-09-22 00:00:00', ''),
(54816444, 14113461, 2, '', '2013-10-01 00:00:00', ''),
(55208554, 14114729, 2, '', '2013-10-08 00:00:00', ''),
(55479909, 14113461, 2, '', '2013-10-13 00:00:00', ''),
(55479910, 14113427, 2, '', '2013-10-13 00:00:00', ''),
(55611950, 14113461, 2, '', '2013-10-15 00:00:00', ''),
(55611955, 14113427, 2, '', '2013-10-15 00:00:00', ''),
(55611957, 14113427, 5, '275069', '2013-10-15 00:00:00', ''),
(56638725, 14113461, 2, '', '2013-11-02 00:00:00', ''),
(57149829, 14113461, 2, '', '2013-11-12 00:00:00', ''),
(57289462, 14107979, 5, '742815', '2013-11-14 00:00:00', ''),
(57550319, 14107979, 5, '1745610', '2013-11-19 00:00:00', ''),
(57550321, 14107979, 2, '', '2013-11-19 00:00:00', ''),
(57550323, 14108694, 2, '', '2013-11-19 00:00:00', ''),
(58082043, 20159814, 2, '', '2013-11-27 00:00:00', ''),
(58343746, 14115314, 2, '', '2013-12-03 00:00:00', ''),
(58612249, 14113057, 2, '', '2013-12-07 00:00:00', ''),
(59012592, 14113461, 2, '', '2013-12-13 00:00:00', ''),
(59273489, 14113461, 2, '', '2013-12-18 00:00:00', ''),
(59410447, 14120711, 5, '1042483', '2013-12-20 00:00:00', ''),
(59412666, 17522369, 2, '', '2013-12-20 00:00:00', ''),
(59412827, 20159814, 2, '', '2013-12-20 00:00:00', ''),
(60098428, 14113461, 2, '', '2014-01-05 00:00:00', ''),
(60110387, 14113057, 5, '2960335', '2014-01-05 00:00:00', ''),
(60110389, 14113057, 2, '', '2014-01-05 00:00:00', ''),
(60110788, 14113461, 2, '', '2014-01-05 00:00:00', ''),
(60857355, 14111572, 2, '', '2014-01-17 00:00:00', ''),
(61125001, 14114729, 5, '2180879', '2014-01-21 00:00:00', ''),
(61125004, 14114729, 2, '', '2014-01-21 00:00:00', ''),
(62301125, 14107979, 5, '2265763', '2014-02-10 00:00:00', ''),
(62301128, 14107979, 2, '', '2014-02-10 00:00:00', ''),
(62709962, 14162208, 2, '', '2014-02-16 00:00:00', ''),
(62711102, 14107928, 2, '', '2014-02-16 00:00:00', ''),
(62842280, 14114480, 5, '1097104', '2014-02-18 00:00:00', ''),
(62971718, 14113427, 2, '', '2014-02-20 00:00:00', ''),
(63355243, 14113461, 2, '', '2014-02-25 00:00:00', ''),
(63874842, 14113427, 2, '', '2014-03-05 00:00:00', ''),
(63874844, 14113427, 5, '748876', '2014-03-05 00:00:00', ''),
(65059320, 14116014, 2, '', '2014-03-24 00:00:00', ''),
(65304834, 14113427, 2, '', '2014-03-27 00:00:00', ''),
(65436513, 14113427, 2, '', '2014-03-29 00:00:00', ''),
(65957062, 14113427, 5, '858405', '2014-04-07 00:00:00', ''),
(66478032, 14116014, 2, '', '2014-04-15 00:00:00', ''),
(66886969, 14113427, 2, '', '2014-04-23 00:00:00', ''),
(67020474, 14113461, 2, '', '2014-04-25 00:00:00', ''),
(68344553, 14108430, 2, '', '2014-05-17 00:00:00', ''),
(68344674, 14113427, 2, '', '2014-05-17 00:00:00', ''),
(69486347, 14113461, 2, '', '2014-06-06 00:00:00', ''),
(70643034, 14113427, 5, '2523764', '2014-06-27 00:00:00', ''),
(70643532, 14113427, 2, '', '2014-06-27 00:00:00', ''),
(71172390, 14113461, 2, '', '2014-07-07 00:00:00', ''),
(72190950, 14113461, 2, '', '2014-07-24 00:00:00', ''),
(72449865, 14113461, 2, '', '2014-07-29 00:00:00', ''),
(73227926, 14114729, 2, '', '2014-08-12 00:00:00', ''),
(73756699, 14113427, 2, '', '2014-08-21 00:00:00', ''),
(74109793, 14109079, 2, '', '2014-08-28 00:00:00', ''),
(74119420, 14113427, 5, '456584', '2014-08-28 00:00:00', ''),
(74254622, 14154890, 2, '', '2014-08-31 00:00:00', ''),
(74381848, 14113427, 2, '', '2014-09-03 00:00:00', ''),
(74384759, 14113461, 2, '', '2014-09-03 00:00:00', ''),
(74800949, 14113461, 2, '', '2014-09-10 00:00:00', ''),
(74800950, 14113427, 2, '', '2014-09-10 00:00:00', ''),
(75177384, 20159814, 2, '', '2014-09-17 00:00:00', ''),
(75191202, 18439832, 2, '', '2014-09-17 00:00:00', ''),
(75842646, 20725647, 2, '', '2014-09-29 00:00:00', ''),
(76082238, 20159814, 2, '', '2014-10-03 00:00:00', ''),
(78653734, 14113461, 2, '', '2014-11-18 00:00:00', ''),
(78653845, 14113427, 2, '', '2014-11-18 00:00:00', ''),
(78911276, 14113427, 5, '3571445', '2014-11-23 00:00:00', ''),
(79286016, 14113461, 2, '', '2014-11-30 00:00:00', ''),
(79293950, 14113427, 2, '', '2014-11-30 00:00:00', ''),
(79559332, 14113461, 2, '', '2014-12-04 00:00:00', ''),
(79808921, 14114729, 2, '', '2014-12-09 00:00:00', ''),
(82626072, 20159814, 2, '', '2015-01-30 00:00:00', ''),
(82626282, 20159814, 16, '', '2015-01-30 00:00:00', ''),
(38972531, 14113559, 2, '', '2013-01-02 00:00:00', ''),
(38976000, 14120711, 2, '', '2013-01-02 00:00:00', ''),
(38977943, 14120711, 2, '', '2013-01-02 00:00:00', ''),
(38979076, 14120711, 2, '', '2013-01-02 00:00:00', ''),
(38986771, 14120711, 2, '', '2013-01-02 00:00:00', ''),
(39527785, 14154890, 2, '', '2013-01-12 00:00:00', ''),
(39534246, 14113691, 5, '1729016', '2013-01-12 00:00:00', ''),
(39536740, 14127382, 2, '', '2013-01-12 00:00:00', ''),
(39661413, 14107928, 2, '', '2013-01-15 00:00:00', ''),
(39665588, 14154890, 2, '', '2013-01-15 00:00:00', ''),
(41457432, 14154890, 2, '', '2013-02-14 00:00:00', ''),
(44729505, 14113461, 2, '', '2013-04-08 00:00:00', ''),
(45786821, 14154890, 2, '', '2013-04-25 00:00:00', ''),
(46332717, 14108430, 2, '', '2013-05-04 00:00:00', ''),
(46332718, 14108430, 5, '656366', '2013-05-04 00:00:00', ''),
(46339831, 14113461, 2, '', '2013-05-04 00:00:00', ''),
(46611408, 14113427, 2, '', '2013-05-09 00:00:00', ''),
(47138174, 14113427, 5, '845613', '2013-05-18 00:00:00', ''),
(47417186, 14154890, 2, '', '2013-05-22 00:00:00', ''),
(48341786, 14113461, 2, '', '2013-06-07 00:00:00', ''),
(49801598, 14154890, 2, '', '2013-07-02 00:00:00', ''),
(50434547, 14107979, 5, '1280373', '2013-07-14 00:00:00', ''),
(50970039, 14113461, 2, '', '2013-07-24 00:00:00', ''),
(50970042, 14113427, 2, '', '2013-07-24 00:00:00', ''),
(51092960, 14113427, 2, '', '2013-07-25 00:00:00', ''),
(52303799, 14107979, 5, '1104384', '2013-08-16 00:00:00', ''),
(52303805, 14107979, 3, '', '2013-08-16 00:00:00', ''),
(52557241, 14107979, 3, '', '2013-08-21 00:00:00', ''),
(52689756, 14108694, 2, '', '2013-08-23 00:00:00', ''),
(52811366, 18439832, 2, '', '2013-08-26 00:00:00', ''),
(53338874, 14120711, 2, '', '2013-09-04 00:00:00', ''),
(39145602, 14114725, 2, '', '2013-01-05 00:00:00', ''),
(39825135, 14113278, 2, '', '2013-01-17 00:00:00', ''),
(39825456, 14113278, 5, '192217', '2013-01-17 00:00:00', ''),
(41698489, 14109927, 2, '', '2013-02-19 00:00:00', ''),
(43593308, 14113596, 2, '', '2013-03-20 00:00:00', ''),
(46224919, 14120223, 2, '', '2013-05-02 00:00:00', ''),
(46231935, 14120223, 2, '', '2013-05-02 00:00:00', ''),
(46617784, 14120223, 2, '', '2013-05-09 00:00:00', ''),
(52789712, 14109927, 5, '684893', '2013-08-25 00:00:00', ''),
(54606186, 14115375, 2, '', '2013-09-27 00:00:00', ''),
(57599815, 14113278, 5, '391826', '2013-11-19 00:00:00', ''),
(57845939, 16445213, 2, '', '2013-11-23 00:00:00', ''),
(59038944, 16445213, 2, '', '2013-12-14 00:00:00', ''),
(60579346, 14119294, 2, '', '2014-01-13 00:00:00', ''),
(60843224, 14109166, 2, '', '2014-01-17 00:00:00', ''),
(62021734, 14115375, 2, '', '2014-02-05 00:00:00', ''),
(62942747, 14119294, 2, '', '2014-02-19 00:00:00', ''),
(62948221, 16899789, 2, '', '2014-02-19 00:00:00', ''),
(64121022, 14115375, 2, '', '2014-03-09 00:00:00', ''),
(65800574, 14109166, 2, '', '2014-04-04 00:00:00', ''),
(69106403, 14113278, 5, '1506587', '2014-05-30 00:00:00', ''),
(70265017, 14113278, 5, '793961', '2014-06-20 00:00:00', ''),
(70265018, 14113278, 2, '', '2014-06-20 00:00:00', ''),
(71438702, 14109166, 3, '', '2014-07-11 00:00:00', ''),
(72234280, 16899789, 2, '', '2014-07-25 00:00:00', ''),
(72474320, 20803639, 2, '', '2014-07-30 00:00:00', ''),
(73131999, 14115375, 2, '', '2014-08-11 00:00:00', ''),
(73376024, 16899789, 2, '', '2014-08-14 00:00:00', ''),
(74646952, 14113278, 2, '', '2014-09-08 00:00:00', ''),
(76183166, 14113278, 2, '', '2014-10-05 00:00:00', ''),
(76824196, 16429394, 2, '', '2014-10-16 00:00:00', ''),
(77214552, 14119294, 2, '', '2014-10-23 00:00:00', ''),
(77888142, 14113278, 2, '', '2014-11-05 00:00:00', ''),
(78266158, 14113278, 2, '', '2014-11-12 00:00:00', ''),
(78266159, 14113278, 5, '123594', '2014-11-12 00:00:00', ''),
(78627912, 16899789, 2, '', '2014-11-18 00:00:00', ''),
(79023604, 20803639, 2, '', '2014-11-25 00:00:00', ''),
(82337065, 14109927, 5, '3549317', '2015-01-25 00:00:00', ''),
(38919210, 14109166, 2, '', '2013-01-01 00:00:00', ''),
(38933263, 14113278, 2, '', '2013-01-01 00:00:00', ''),
(38933740, 14113278, 2, '', '2013-01-01 00:00:00', ''),
(38933790, 14113278, 2, '', '2013-01-01 00:00:00', ''),
(38933843, 14112585, 2, '', '2013-01-01 00:00:00', ''),
(38933941, 14113278, 2, '', '2013-01-01 00:00:00', ''),
(38934369, 14112585, 2, '', '2013-01-01 00:00:00', ''),
(38934989, 14113596, 2, '', '2013-01-01 00:00:00', ''),
(42135307, 14115375, 5, '1585455', '2013-02-26 00:00:00', ''),
(46575963, 14120223, 2, '', '2013-05-08 00:00:00', ''),
(47513648, 14113278, 5, '880326', '2013-05-24 00:00:00', ''),
(47513710, 14113278, 2, '', '2013-05-24 00:00:00', ''),
(47514010, 14113278, 2, '', '2013-05-24 00:00:00', ''),
(55205246, 14113278, 2, '', '2013-10-08 00:00:00', ''),
(55605852, 14109927, 2, '', '2013-10-15 00:00:00', ''),
(55605854, 14109927, 5, '189410', '2013-10-15 00:00:00', ''),
(56130986, 14109927, 2, '', '2013-10-24 00:00:00', ''),
(56130992, 14109927, 5, '411637', '2013-10-24 00:00:00', ''),
(56133709, 14113278, 5, '564163', '2013-10-24 00:00:00', ''),
(56251668, 16445213, 2, '', '2013-10-26 00:00:00', ''),
(59009849, 14119294, 2, '', '2013-12-13 00:00:00', ''),
(59812453, 20803639, 2, '', '2013-12-30 00:00:00', ''),
(60107551, 14259396, 2, '', '2014-01-05 00:00:00', ''),
(60480803, 14113278, 2, '', '2014-01-10 00:00:00', ''),
(60480806, 14113278, 5, '250453', '2014-01-10 00:00:00', ''),
(60484856, 14115375, 2, '', '2014-01-11 00:00:00', ''),
(61257644, 14119294, 2, '', '2014-01-23 00:00:00', ''),
(61649078, 14113278, 5, '276648', '2014-01-30 00:00:00', ''),
(62051649, 14119294, 2, '', '2014-02-05 00:00:00', ''),
(62170763, 20803639, 2, '', '2014-02-07 00:00:00', ''),
(62703143, 14113278, 2, '', '2014-02-16 00:00:00', ''),
(65311197, 20803639, 2, '', '2014-03-27 00:00:00', ''),
(65440199, 14113278, 5, '1278811', '2014-03-29 00:00:00', ''),
(65953314, 14119294, 2, '', '2014-04-07 00:00:00', ''),
(66079858, 14109927, 2, '', '2014-04-09 00:00:00', ''),
(68213492, 14109166, 3, '', '2014-05-15 00:00:00', ''),
(68344604, 14259396, 2, '', '2014-05-17 00:00:00', ''),
(68595857, 16899789, 2, '', '2014-05-21 00:00:00', ''),
(69084795, 16429394, 2, '', '2014-05-30 00:00:00', ''),
(70376063, 14113278, 5, '1506366', '2014-06-23 00:00:00', ''),
(71274889, 14109927, 5, '435460', '2014-07-09 00:00:00', ''),
(71936156, 14119294, 2, '', '2014-07-21 00:00:00', ''),
(72192588, 16445213, 2, '', '2014-07-24 00:00:00', ''),
(73863351, 14113278, 2, '', '2014-08-24 00:00:00', ''),
(73992440, 20803639, 2, '', '2014-08-26 00:00:00', ''),
(74122741, 14113596, 2, '', '2014-08-28 00:00:00', ''),
(74521582, 14119294, 2, '', '2014-09-05 00:00:00', ''),
(74665486, 14113278, 2, '', '2014-09-08 00:00:00', ''),
(75581236, 14113278, 2, '', '2014-09-24 00:00:00', ''),
(76081049, 14108098, 2, '', '2014-10-03 00:00:00', ''),
(76452337, 14113278, 2, '', '2014-10-10 00:00:00', ''),
(76452359, 14113278, 5, '626158', '2014-10-10 00:00:00', ''),
(79676779, 14113278, 5, '120242', '2014-12-07 00:00:00', ''),
(79676782, 14113278, 2, '', '2014-12-07 00:00:00', ''),
(79676794, 14114450, 2, '', '2014-12-07 00:00:00', ''),
(80856539, 14113278, 5, '2730725', '2014-12-29 00:00:00', ''),
(81377280, 14109927, 2, '', '2015-01-08 00:00:00', ''),
(41029474, 14113278, 2, '', '2013-02-07 00:00:00', ''),
(41162657, 14639815, 2, '', '2013-02-09 00:00:00', ''),
(44456660, 14113278, 5, '1376135', '2013-04-04 00:00:00', ''),
(46332716, 14259396, 2, '', '2013-05-04 00:00:00', ''),
(46474463, 14109927, 5, '262868', '2013-05-07 00:00:00', ''),
(46596061, 14120223, 2, '', '2013-05-09 00:00:00', ''),
(46596532, 14120223, 2, '', '2013-05-09 00:00:00', ''),
(46603025, 14120223, 5, '1259884', '2013-05-09 00:00:00', ''),
(46603026, 14120223, 2, '', '2013-05-09 00:00:00', ''),
(46607159, 14120223, 2, '', '2013-05-09 00:00:00', ''),
(49395806, 14109927, 5, '1579719', '2013-06-25 00:00:00', ''),
(50049329, 14259396, 2, '', '2013-07-07 00:00:00', ''),
(54931845, 14113278, 2, '', '2013-10-03 00:00:00', ''),
(56778509, 14115375, 2, '', '2013-11-05 00:00:00', ''),
(56778510, 14115375, 5, '225767', '2013-11-05 00:00:00', ''),
(57577960, 14113278, 2, '', '2013-11-19 00:00:00', ''),
(58261192, 16899789, 2, '', '2013-12-01 00:00:00', ''),
(59838156, 14119294, 2, '', '2013-12-30 00:00:00', ''),
(59838185, 14119887, 2, '', '2013-12-30 00:00:00', ''),
(60883860, 14115375, 5, '2845260', '2014-01-17 00:00:00', ''),
(61533592, 16445213, 2, '', '2014-01-28 00:00:00', ''),
(64634473, 14115375, 2, '', '2014-03-17 00:00:00', ''),
(64778388, 14119294, 2, '', '2014-03-19 00:00:00', ''),
(64785392, 14119294, 2, '', '2014-03-19 00:00:00', ''),
(67047590, 16899789, 2, '', '2014-04-25 00:00:00', ''),
(67959215, 14113278, 2, '', '2014-05-11 00:00:00', ''),
(67959216, 14113278, 5, '462707', '2014-05-11 00:00:00', ''),
(68478961, 14119294, 2, '', '2014-05-20 00:00:00', ''),
(69134960, 14113278, 5, '814564', '2014-05-31 00:00:00', ''),
(71303969, 14119294, 2, '', '2014-07-09 00:00:00', ''),
(73140187, 14109927, 2, '', '2014-08-11 00:00:00', ''),
(73140267, 14109927, 5, '109942', '2014-08-11 00:00:00', ''),
(76674783, 14113278, 2, '', '2014-10-14 00:00:00', ''),
(78488052, 14109927, 2, '', '2014-11-15 00:00:00', ''),
(78881158, 14113278, 2, '', '2014-11-22 00:00:00', ''),
(78883779, 14113278, 5, '342978', '2014-11-22 00:00:00', ''),
(79274849, 16429394, 2, '', '2014-11-30 00:00:00', ''),
(79668013, 16429394, 2, '', '2014-12-06 00:00:00', ''),
(80055394, 14109166, 3, '', '2014-12-13 00:00:00', ''),
(82508503, 16899789, 2, '', '2015-01-28 00:00:00', ''),
(39435319, 14259396, 2, '', '2013-01-10 00:00:00', ''),
(39446286, 14259396, 9, '', '2013-01-10 00:00:00', '100'),
(39446289, 14259396, 1, '', '2013-01-10 00:00:00', ''),
(40837589, 14259396, 2, '', '2013-02-04 00:00:00', ''),
(41115841, 14113278, 5, '628995', '2013-02-08 00:00:00', ''),
(41115842, 14113278, 2, '', '2013-02-08 00:00:00', ''),
(46513469, 14120223, 2, '', '2013-05-08 00:00:00', ''),
(46516579, 14120223, 2, '', '2013-05-08 00:00:00', ''),
(48105344, 16445213, 2, '', '2013-06-03 00:00:00', ''),
(48928242, 14109927, 5, '743077', '2013-06-17 00:00:00', ''),
(49454328, 14113278, 2, '', '2013-06-26 00:00:00', ''),
(50108802, 14113278, 2, '', '2013-07-08 00:00:00', ''),
(50108807, 14113278, 5, '1569817', '2013-07-08 00:00:00', ''),
(51683779, 14113278, 2, '', '2013-08-05 00:00:00', ''),
(51939311, 14119294, 2, '', '2013-08-09 00:00:00', ''),
(52476369, 16445213, 2, '', '2013-08-20 00:00:00', ''),
(54171187, 14119294, 2, '', '2013-09-19 00:00:00', ''),
(56046298, 16899789, 2, '', '2013-10-23 00:00:00', ''),
(56584167, 16899789, 2, '', '2013-11-01 00:00:00', ''),
(55311859, 14107208, 2, '', '2013-10-10 00:00:00', ''),
(55446407, 14107208, 2, '', '2013-10-12 00:00:00', ''),
(55696924, 16723393, 2, '', '2013-10-17 00:00:00', ''),
(56739530, 14117121, 2, '', '2013-11-05 00:00:00', ''),
(56747138, 14110148, 2, '', '2013-11-05 00:00:00', ''),
(57667279, 17247129, 2, '', '2013-11-20 00:00:00', ''),
(58064874, 14107208, 2, '', '2013-11-27 00:00:00', ''),
(58205305, 14114411, 5, '413910', '2013-11-30 00:00:00', ''),
(59503953, 14110148, 2, '', '2013-12-22 00:00:00', ''),
(60171721, 14114443, 2, '', '2014-01-06 00:00:00', ''),
(60171732, 14114411, 2, '', '2014-01-06 00:00:00', ''),
(61735202, 14116215, 2, '', '2014-01-31 00:00:00', ''),
(61861596, 14120661, 2, '', '2014-02-03 00:00:00', ''),
(61861598, 14120661, 5, '606355', '2014-02-03 00:00:00', ''),
(62248693, 16723393, 2, '', '2014-02-08 00:00:00', ''),
(62758819, 14111052, 2, '', '2014-02-17 00:00:00', ''),
(62758821, 14111052, 5, '1554935', '2014-02-17 00:00:00', ''),
(62760171, 14114411, 2, '', '2014-02-17 00:00:00', ''),
(63015531, 14107208, 2, '', '2014-02-20 00:00:00', ''),
(64453907, 14107208, 2, '', '2014-03-14 00:00:00', ''),
(65118477, 14107208, 2, '', '2014-03-25 00:00:00', ''),
(67457244, 22626273, 2, '', '2014-05-02 00:00:00', ''),
(69293402, 14111052, 5, '495800', '2014-06-03 00:00:00', ''),
(69830068, 14117121, 2, '', '2014-06-12 00:00:00', ''),
(70359799, 14112839, 5, '1889210', '2014-06-22 00:00:00', ''),
(70367805, 14114411, 5, '1726801', '2014-06-22 00:00:00', ''),
(72045217, 22626273, 2, '', '2014-07-22 00:00:00', ''),
(72056838, 14111052, 5, '1502020', '2014-07-22 00:00:00', ''),
(72561857, 14117121, 2, '', '2014-07-31 00:00:00', ''),
(73317368, 14114411, 2, '', '2014-08-14 00:00:00', ''),
(73322483, 14114430, 2, '', '2014-08-14 00:00:00', ''),
(75541834, 14116215, 2, '', '2014-09-23 00:00:00', ''),
(76468966, 14116215, 2, '', '2014-10-10 00:00:00', ''),
(78805985, 14107208, 2, '', '2014-11-21 00:00:00', ''),
(79317969, 18806269, 2, '', '2014-12-01 00:00:00', ''),
(79442049, 14114443, 2, '', '2014-12-03 00:00:00', ''),
(79962072, 22626273, 2, '', '2014-12-11 00:00:00', ''),
(80216902, 22626273, 2, '', '2014-12-16 00:00:00', ''),
(82044978, 14111052, 2, '', '2015-01-20 00:00:00', ''),
(82426614, 14115349, 2, '', '2015-01-27 00:00:00', ''),
(82687049, 25197868, 2, '', '2015-01-30 00:00:00', ''),
(38954371, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(38955332, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(38955875, 14117121, 2, '', '2013-01-02 00:00:00', ''),
(38957127, 14117121, 2, '', '2013-01-02 00:00:00', ''),
(38957185, 14117121, 2, '', '2013-01-02 00:00:00', ''),
(38957550, 14112839, 2, '', '2013-01-02 00:00:00', ''),
(38957551, 14112839, 5, '7345', '2013-01-02 00:00:00', ''),
(38957620, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(38959196, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(38959892, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(38960009, 14120661, 2, '', '2013-01-02 00:00:00', ''),
(38961361, 14120661, 2, '', '2013-01-02 00:00:00', ''),
(38963030, 14120661, 2, '', '2013-01-02 00:00:00', ''),
(38968898, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(43713263, 14114528, 2, '', '2013-03-22 00:00:00', ''),
(47089490, 14107208, 3, '', '2013-05-17 00:00:00', ''),
(47492885, 14117121, 2, '', '2013-05-23 00:00:00', ''),
(47900115, 14115349, 2, '', '2013-05-30 00:00:00', ''),
(48027840, 14115349, 2, '', '2013-06-02 00:00:00', ''),
(48428296, 14120661, 2, '', '2013-06-09 00:00:00', ''),
(50444951, 14107208, 2, '', '2013-07-15 00:00:00', ''),
(51374675, 14107208, 2, '', '2013-07-30 00:00:00', ''),
(51374676, 14107208, 5, '42595', '2013-07-30 00:00:00', ''),
(52565576, 14107208, 2, '', '2013-08-21 00:00:00', ''),
(52706991, 14107208, 2, '', '2013-08-23 00:00:00', ''),
(53483613, 14107208, 2, '', '2013-09-06 00:00:00', ''),
(53970239, 14112839, 2, '', '2013-09-16 00:00:00', ''),
(54101066, 14115349, 2, '', '2013-09-18 00:00:00', ''),
(54374993, 14115349, 2, '', '2013-09-23 00:00:00', ''),
(54874165, 14117121, 2, '', '2013-10-02 00:00:00', ''),
(55267944, 14114411, 2, '', '2013-10-09 00:00:00', ''),
(55804549, 14114443, 2, '', '2013-10-18 00:00:00', ''),
(55804551, 14114411, 2, '', '2013-10-18 00:00:00', ''),
(55804552, 14114411, 5, '295019', '2013-10-18 00:00:00', ''),
(56064373, 14114528, 5, '471607', '2013-10-23 00:00:00', ''),
(56731952, 14115349, 2, '', '2013-11-04 00:00:00', ''),
(56982772, 14117121, 2, '', '2013-11-08 00:00:00', ''),
(57262643, 14114443, 2, '', '2013-11-13 00:00:00', ''),
(57262647, 14114430, 2, '', '2013-11-13 00:00:00', ''),
(57262655, 14114411, 2, '', '2013-11-13 00:00:00', ''),
(57525024, 14114430, 2, '', '2013-11-18 00:00:00', ''),
(57658367, 14115349, 2, '', '2013-11-20 00:00:00', ''),
(58555632, 14111052, 2, '', '2013-12-06 00:00:00', ''),
(62254476, 17473500, 2, '', '2014-02-09 00:00:00', ''),
(62653482, 14114411, 2, '', '2014-02-14 00:00:00', ''),
(62922208, 14107208, 2, '', '2014-02-19 00:00:00', ''),
(63312142, 14111052, 2, '', '2014-02-25 00:00:00', ''),
(63711452, 14112839, 2, '', '2014-03-03 00:00:00', ''),
(67244431, 14114411, 2, '', '2014-04-29 00:00:00', ''),
(67244433, 14114411, 5, '832546', '2014-04-29 00:00:00', ''),
(69189873, 14115349, 2, '', '2014-06-01 00:00:00', ''),
(69311782, 14120661, 5, '1108689', '2014-06-03 00:00:00', ''),
(70615953, 14114411, 2, '', '2014-06-26 00:00:00', ''),
(70735744, 14114411, 2, '', '2014-06-29 00:00:00', ''),
(72408190, 14114411, 2, '', '2014-07-29 00:00:00', ''),
(73189399, 25073496, 2, '', '2014-08-12 00:00:00', ''),
(76378716, 14120661, 5, '559994', '2014-10-08 00:00:00', ''),
(76638865, 14111052, 2, '', '2014-10-14 00:00:00', ''),
(77405401, 14117121, 2, '', '2014-10-27 00:00:00', ''),
(78171615, 14117121, 2, '', '2014-11-10 00:00:00', ''),
(80628119, 18806269, 2, '', '2014-12-23 00:00:00', ''),
(80748018, 14111052, 2, '', '2014-12-26 00:00:00', ''),
(81271864, 22626273, 2, '', '2015-01-07 00:00:00', ''),
(38937508, 14114411, 2, '', '2013-01-01 00:00:00', ''),
(38937593, 14114443, 2, '', '2013-01-01 00:00:00', ''),
(38937607, 14114411, 2, '', '2013-01-01 00:00:00', ''),
(38937622, 14114430, 2, '', '2013-01-01 00:00:00', ''),
(38937632, 14114443, 2, '', '2013-01-01 00:00:00', ''),
(38938091, 14114411, 3, '', '2013-01-01 00:00:00', ''),
(38938130, 14114443, 2, '', '2013-01-01 00:00:00', ''),
(38938444, 14114443, 2, '', '2013-01-01 00:00:00', ''),
(38939383, 14114528, 2, '', '2013-01-01 00:00:00', ''),
(38939385, 14114528, 5, '620249', '2013-01-01 00:00:00', ''),
(38941826, 14115349, 2, '', '2013-01-02 00:00:00', ''),
(38943981, 14114528, 2, '', '2013-01-02 00:00:00', ''),
(38944748, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(38944751, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(38944812, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(38944897, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(38944916, 14115349, 2, '', '2013-01-02 00:00:00', ''),
(38945413, 14115349, 1, '', '2013-01-02 00:00:00', ''),
(38945839, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(38946200, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(38946481, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(38946702, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(38946820, 14111686, 2, '', '2013-01-02 00:00:00', ''),
(38948295, 14117121, 2, '', '2013-01-02 00:00:00', ''),
(38948408, 14117121, 2, '', '2013-01-02 00:00:00', ''),
(38948616, 14117121, 2, '', '2013-01-02 00:00:00', ''),
(38948953, 14117121, 2, '', '2013-01-02 00:00:00', ''),
(38949249, 14117121, 2, '', '2013-01-02 00:00:00', ''),
(38949515, 14116215, 2, '', '2013-01-02 00:00:00', ''),
(38950246, 14116215, 1, '', '2013-01-02 00:00:00', ''),
(39902390, 14111052, 5, '757293', '2013-01-18 00:00:00', ''),
(40019442, 14117121, 2, '', '2013-01-21 00:00:00', ''),
(40027718, 14117121, 2, '', '2013-01-21 00:00:00', ''),
(40165694, 14117121, 2, '', '2013-01-23 00:00:00', ''),
(45251139, 14107208, 2, '', '2013-04-16 00:00:00', ''),
(46039327, 14116215, 2, '', '2013-04-29 00:00:00', ''),
(46053817, 14116215, 2, '', '2013-04-30 00:00:00', ''),
(51568567, 14107208, 2, '', '2013-08-02 00:00:00', ''),
(52110010, 14115349, 2, '', '2013-08-13 00:00:00', ''),
(52768655, 14111052, 5, '2029172', '2013-08-25 00:00:00', ''),
(53811262, 14116215, 2, '', '2013-09-12 00:00:00', ''),
(54074810, 14107208, 2, '', '2013-09-18 00:00:00', ''),
(54074811, 14107208, 5, '304209', '2013-09-18 00:00:00', ''),
(55486325, 14115349, 2, '', '2013-10-13 00:00:00', ''),
(55614892, 14114430, 2, '', '2013-10-15 00:00:00', ''),
(56790186, 14116215, 2, '', '2013-11-05 00:00:00', ''),
(57304475, 14114443, 2, '', '2013-11-14 00:00:00', ''),
(58624395, 14117121, 2, '', '2013-12-07 00:00:00', ''),
(58807818, 14112839, 5, '1659790', '2013-12-10 00:00:00', ''),
(58807827, 14112839, 2, '', '2013-12-10 00:00:00', ''),
(59203762, 14107208, 2, '', '2013-12-17 00:00:00', ''),
(61385934, 14109796, 2, '', '2014-01-26 00:00:00', ''),
(61917230, 15395445, 2, '', '2014-02-03 00:00:00', ''),
(62305028, 14974123, 2, '', '2014-02-10 00:00:00', ''),
(62447534, 14115701, 2, '', '2014-02-12 00:00:00', ''),
(62832254, 14110532, 5, '736263', '2014-02-18 00:00:00', ''),
(62840421, 14752347, 2, '', '2014-02-18 00:00:00', ''),
(63489044, 14109796, 2, '', '2014-02-27 00:00:00', ''),
(63755160, 15395445, 2, '', '2014-03-03 00:00:00', ''),
(63874846, 15395445, 2, '', '2014-03-05 00:00:00', ''),
(63886235, 14109796, 2, '', '2014-03-05 00:00:00', ''),
(64147546, 15395445, 2, '', '2014-03-10 00:00:00', ''),
(65059170, 14116003, 2, '', '2014-03-24 00:00:00', ''),
(65069981, 14117348, 2, '', '2014-03-24 00:00:00', ''),
(65069985, 14116882, 2, '', '2014-03-24 00:00:00', ''),
(65311201, 14112929, 2, '', '2014-03-27 00:00:00', ''),
(65317824, 14117114, 2, '', '2014-03-27 00:00:00', ''),
(65436584, 15395445, 2, '', '2014-03-29 00:00:00', ''),
(65449742, 14116003, 2, '', '2014-03-30 00:00:00', ''),
(65953313, 14119277, 2, '', '2014-04-07 00:00:00', ''),
(66079855, 14110096, 2, '', '2014-04-09 00:00:00', ''),
(66886965, 15395445, 2, '', '2014-04-23 00:00:00', ''),
(67021594, 15395445, 2, '', '2014-04-25 00:00:00', ''),
(67794858, 15395445, 2, '', '2014-05-08 00:00:00', ''),
(68595637, 14115701, 2, '', '2014-05-21 00:00:00', ''),
(68962559, 14115701, 2, '', '2014-05-28 00:00:00', ''),
(69080186, 14752347, 2, '', '2014-05-30 00:00:00', ''),
(69219017, 14116003, 5, '2000801', '2014-06-02 00:00:00', ''),
(69344330, 15395445, 3, '', '2014-06-04 00:00:00', ''),
(69484573, 15395445, 2, '', '2014-06-06 00:00:00', ''),
(69738104, 14109796, 2, '', '2014-06-11 00:00:00', ''),
(70643031, 15395445, 2, '', '2014-06-27 00:00:00', ''),
(70643533, 15395445, 2, '', '2014-06-27 00:00:00', ''),
(71936158, 14119277, 2, '', '2014-07-21 00:00:00', ''),
(72838534, 14115701, 2, '', '2014-08-05 00:00:00', ''),
(73745124, 14117348, 2, '', '2014-08-21 00:00:00', ''),
(73745137, 14116882, 2, '', '2014-08-21 00:00:00', ''),
(73987040, 14109796, 2, '', '2014-08-26 00:00:00', ''),
(74119450, 15395445, 2, '', '2014-08-28 00:00:00', ''),
(74384760, 15395445, 2, '', '2014-09-03 00:00:00', ''),
(74521583, 14119277, 2, '', '2014-09-05 00:00:00', ''),
(75191232, 14109024, 2, '', '2014-09-17 00:00:00', ''),
(75581280, 14109024, 5, '1012616', '2014-09-24 00:00:00', ''),
(76082443, 14117114, 5, '517483', '2014-10-03 00:00:00', ''),
(76207059, 15395445, 2, '', '2014-10-06 00:00:00', ''),
(76853205, 14109796, 2, '', '2014-10-17 00:00:00', ''),
(76968445, 15395445, 2, '', '2014-10-20 00:00:00', ''),
(78010717, 15395445, 2, '', '2014-11-07 00:00:00', ''),
(78267691, 14109024, 2, '', '2014-11-12 00:00:00', ''),
(78400898, 14115701, 2, '', '2014-11-13 00:00:00', ''),
(78534661, 14107354, 2, '', '2014-11-17 00:00:00', ''),
(79292485, 15395445, 2, '', '2014-11-30 00:00:00', ''),
(79293948, 15395445, 2, '', '2014-11-30 00:00:00', ''),
(79423645, 15395445, 2, '', '2014-12-02 00:00:00', ''),
(79428526, 14974123, 2, '', '2014-12-02 00:00:00', ''),
(79430256, 14115701, 2, '', '2014-12-02 00:00:00', ''),
(80592550, 15395445, 2, '', '2014-12-23 00:00:00', ''),
(80729983, 14115701, 2, '', '2014-12-26 00:00:00', ''),
(81107921, 14115701, 2, '', '2015-01-04 00:00:00', ''),
(81377282, 14110096, 2, '', '2015-01-08 00:00:00', ''),
(81764995, 14974123, 2, '', '2015-01-15 00:00:00', ''),
(81899379, 14974123, 2, '', '2015-01-18 00:00:00', ''),
(82140663, 14109796, 2, '', '2015-01-22 00:00:00', ''),
(82387787, 14109024, 2, '', '2015-01-26 00:00:00', ''),
(38971538, 14112534, 2, '', '2013-01-02 00:00:00', ''),
(38978151, 14115980, 5, '65311', '2013-01-02 00:00:00', ''),
(38978152, 14115980, 2, '', '2013-01-02 00:00:00', ''),
(38979075, 14115980, 2, '', '2013-01-02 00:00:00', ''),
(38983421, 14112929, 2, '', '2013-01-02 00:00:00', ''),
(38984989, 14112929, 1, '', '2013-01-02 00:00:00', ''),
(38987609, 14115980, 5, '939819', '2013-01-02 00:00:00', ''),
(41160317, 14115701, 2, '', '2013-02-09 00:00:00', ''),
(41456700, 14117114, 2, '', '2013-02-14 00:00:00', ''),
(41457449, 14117114, 5, '247013', '2013-02-14 00:00:00', ''),
(42680045, 14115701, 2, '', '2013-03-06 00:00:00', ''),
(43093526, 14115980, 5, '46281', '2013-03-13 00:00:00', ''),
(43785669, 14110096, 2, '', '2013-03-24 00:00:00', ''),
(44047149, 14199910, 2, '', '2013-03-28 00:00:00', ''),
(45005282, 14116882, 2, '', '2013-04-12 00:00:00', ''),
(45538394, 15395445, 2, '', '2013-04-21 00:00:00', ''),
(45545096, 14115701, 2, '', '2013-04-21 00:00:00', ''),
(46194319, 14117348, 2, '', '2013-05-02 00:00:00', ''),
(46335768, 14110096, 2, '', '2013-05-04 00:00:00', ''),
(47144041, 14110096, 2, '', '2013-05-18 00:00:00', ''),
(47417045, 16585648, 2, '', '2013-05-22 00:00:00', ''),
(48890589, 14117114, 2, '', '2013-06-17 00:00:00', ''),
(49395896, 14110096, 2, '', '2013-06-25 00:00:00', ''),
(49920193, 14110096, 2, '', '2013-07-04 00:00:00', ''),
(50811166, 14115980, 5, '1435558', '2013-07-21 00:00:00', ''),
(51499824, 14110096, 3, '', '2013-08-01 00:00:00', ''),
(52415922, 14110096, 2, '', '2013-08-19 00:00:00', ''),
(52806327, 14115701, 2, '', '2013-08-26 00:00:00', ''),
(53481091, 14110532, 2, '', '2013-09-06 00:00:00', ''),
(53481250, 14110532, 5, '1121833', '2013-09-06 00:00:00', ''),
(53878862, 14116882, 2, '', '2013-09-14 00:00:00', ''),
(53878868, 14117348, 2, '', '2013-09-14 00:00:00', ''),
(56626128, 14115701, 5, '403571', '2013-11-02 00:00:00', ''),
(57590993, 14109796, 2, '', '2013-11-19 00:00:00', ''),
(57731591, 14115701, 5, '2010915', '2013-11-21 00:00:00', ''),
(58401155, 14115701, 2, '', '2013-12-03 00:00:00', ''),
(58532110, 14109796, 2, '', '2013-12-05 00:00:00', ''),
(59701124, 15395445, 2, '', '2013-12-27 00:00:00', ''),
(59714337, 14112929, 2, '', '2013-12-27 00:00:00', ''),
(60081291, 14119277, 2, '', '2014-01-04 00:00:00', ''),
(60227337, 14115701, 2, '', '2014-01-07 00:00:00', ''),
(60867852, 14974123, 2, '', '2014-01-17 00:00:00', ''),
(60883839, 14115944, 2, '', '2014-01-17 00:00:00', ''),
(61537656, 14109796, 2, '', '2014-01-28 00:00:00', ''),
(61950297, 15395445, 2, '', '2014-02-04 00:00:00', ''),
(62337992, 15395445, 2, '', '2014-02-10 00:00:00', ''),
(62765425, 14112929, 2, '', '2014-02-17 00:00:00', ''),
(63295513, 15395445, 2, '', '2014-02-25 00:00:00', ''),
(63433699, 14110096, 2, '', '2014-02-26 00:00:00', ''),
(63554238, 16585648, 2, '', '2014-02-28 00:00:00', ''),
(63554243, 14117114, 2, '', '2014-02-28 00:00:00', ''),
(63981262, 14109796, 2, '', '2014-03-06 00:00:00', ''),
(64114666, 14115980, 2, '', '2014-03-09 00:00:00', ''),
(64634471, 14115944, 2, '', '2014-03-17 00:00:00', '');
INSERT INTO `Votes` (`Id`, `PostId`, `VoteTypeId`, `UserId`, `CreationDate`, `BountyAmount`) VALUES
(64778393, 14119277, 2, '', '2014-03-19 00:00:00', ''),
(64784888, 14116003, 2, '', '2014-03-19 00:00:00', ''),
(65465259, 14115701, 2, '', '2014-03-30 00:00:00', ''),
(65589671, 14109796, 2, '', '2014-04-01 00:00:00', ''),
(66133738, 15395445, 2, '', '2014-04-09 00:00:00', ''),
(66139174, 15395445, 2, '', '2014-04-10 00:00:00', ''),
(66513027, 15395445, 2, '', '2014-04-16 00:00:00', ''),
(66638915, 15395445, 2, '', '2014-04-18 00:00:00', ''),
(67047675, 14115701, 2, '', '2014-04-25 00:00:00', ''),
(67047677, 14115701, 5, '411902', '2014-04-25 00:00:00', ''),
(67309097, 15395445, 2, '', '2014-04-30 00:00:00', ''),
(67439065, 14109796, 2, '', '2014-05-02 00:00:00', ''),
(67955285, 15395445, 2, '', '2014-05-11 00:00:00', ''),
(68221778, 15395445, 2, '', '2014-05-15 00:00:00', ''),
(68478965, 14119277, 2, '', '2014-05-20 00:00:00', ''),
(69389219, 15395445, 2, '', '2014-06-04 00:00:00', ''),
(69521920, 15395445, 2, '', '2014-06-06 00:00:00', ''),
(69531252, 14109796, 2, '', '2014-06-06 00:00:00', ''),
(69917668, 15395445, 2, '', '2014-06-13 00:00:00', ''),
(69923274, 14110096, 2, '', '2014-06-13 00:00:00', ''),
(70175979, 14109024, 5, '424002', '2014-06-18 00:00:00', ''),
(70176626, 14110532, 2, '', '2014-06-18 00:00:00', ''),
(70730205, 14115701, 2, '', '2014-06-29 00:00:00', ''),
(70731699, 14115701, 2, '', '2014-06-29 00:00:00', ''),
(72087492, 14115701, 2, '', '2014-07-23 00:00:00', ''),
(72346569, 14115701, 2, '', '2014-07-28 00:00:00', ''),
(73140189, 14110096, 2, '', '2014-08-11 00:00:00', ''),
(74020495, 15395445, 2, '', '2014-08-27 00:00:00', ''),
(74438968, 14115701, 5, '895588', '2014-09-03 00:00:00', ''),
(74438983, 14115701, 2, '', '2014-09-03 00:00:00', ''),
(74693194, 14115701, 5, '1378681', '2014-09-08 00:00:00', ''),
(74693196, 14115701, 2, '', '2014-09-08 00:00:00', ''),
(74950995, 14109796, 2, '', '2014-09-12 00:00:00', ''),
(75087410, 14109796, 2, '', '2014-09-15 00:00:00', ''),
(75737497, 15395445, 2, '', '2014-09-26 00:00:00', ''),
(76260324, 14115701, 2, '', '2014-10-07 00:00:00', ''),
(76260328, 14115701, 5, '474290', '2014-10-07 00:00:00', ''),
(76666340, 14110532, 5, '284642', '2014-10-14 00:00:00', ''),
(54016488, 14113461, 2, '', '2013-09-17 00:00:00', ''),
(56634425, 14113461, 2, '', '2013-11-02 00:00:00', ''),
(56931135, 14108694, 2, '', '2013-11-07 00:00:00', ''),
(56931138, 14107979, 2, '', '2013-11-07 00:00:00', ''),
(57060710, 14113461, 2, '', '2013-11-10 00:00:00', ''),
(57588835, 14107826, 2, '', '2013-11-19 00:00:00', ''),
(57725195, 15079773, 2, '', '2013-11-21 00:00:00', ''),
(58271519, 14113461, 2, '', '2013-12-02 00:00:00', ''),
(58271523, 14113427, 2, '', '2013-12-02 00:00:00', ''),
(58646071, 14113057, 2, '', '2013-12-08 00:00:00', ''),
(58646072, 14113057, 5, '2127383', '2013-12-08 00:00:00', ''),
(59024116, 14113461, 2, '', '2013-12-14 00:00:00', ''),
(59165779, 14108694, 2, '', '2013-12-17 00:00:00', ''),
(59714468, 14113076, 2, '', '2013-12-27 00:00:00', ''),
(59836493, 14113461, 2, '', '2013-12-30 00:00:00', ''),
(59847461, 14113461, 2, '', '2013-12-30 00:00:00', ''),
(60241421, 20159814, 2, '', '2014-01-07 00:00:00', ''),
(60364886, 14113427, 2, '', '2014-01-09 00:00:00', ''),
(60494556, 14111572, 2, '', '2014-01-11 00:00:00', ''),
(60494557, 14111572, 5, '855680', '2014-01-11 00:00:00', ''),
(60628012, 14154890, 2, '', '2014-01-14 00:00:00', ''),
(61144278, 14113461, 2, '', '2014-01-22 00:00:00', ''),
(61538866, 14113057, 2, '', '2014-01-28 00:00:00', ''),
(61793481, 14113461, 2, '', '2014-02-01 00:00:00', ''),
(62072636, 14113461, 2, '', '2014-02-05 00:00:00', ''),
(62475666, 18439832, 2, '', '2014-02-12 00:00:00', ''),
(62615850, 14113057, 5, '2733137', '2014-02-14 00:00:00', ''),
(62902656, 14113461, 2, '', '2014-02-19 00:00:00', ''),
(63297328, 14108694, 2, '', '2014-02-25 00:00:00', ''),
(63429426, 14111572, 2, '', '2014-02-26 00:00:00', ''),
(63841712, 14113461, 2, '', '2014-03-05 00:00:00', ''),
(64366829, 14113461, 2, '', '2014-03-12 00:00:00', ''),
(64376513, 14113461, 2, '', '2014-03-13 00:00:00', ''),
(64784970, 14116014, 2, '', '2014-03-19 00:00:00', ''),
(65452601, 14113427, 5, '1583192', '2014-03-30 00:00:00', ''),
(65456218, 14107826, 2, '', '2014-03-30 00:00:00', ''),
(65457673, 14113461, 2, '', '2014-03-30 00:00:00', ''),
(65721898, 14107979, 5, '1030951', '2014-04-03 00:00:00', ''),
(65721900, 14107979, 2, '', '2014-04-03 00:00:00', ''),
(65729905, 14108694, 2, '', '2014-04-03 00:00:00', ''),
(66007919, 14113461, 2, '', '2014-04-08 00:00:00', ''),
(66131070, 14113461, 2, '', '2014-04-09 00:00:00', ''),
(66133736, 14113427, 5, '2079191', '2014-04-09 00:00:00', ''),
(66139179, 14113427, 2, '', '2014-04-10 00:00:00', ''),
(66638917, 14113427, 2, '', '2014-04-18 00:00:00', ''),
(66913884, 14113461, 2, '', '2014-04-23 00:00:00', ''),
(66913891, 14113427, 2, '', '2014-04-23 00:00:00', ''),
(68085071, 14111572, 5, '551814', '2014-05-13 00:00:00', ''),
(68221889, 14113461, 2, '', '2014-05-15 00:00:00', ''),
(68349468, 14113461, 2, '', '2014-05-17 00:00:00', ''),
(68864998, 14115314, 2, '', '2014-05-27 00:00:00', ''),
(68999782, 14113559, 2, '', '2014-05-28 00:00:00', ''),
(69002495, 20159814, 2, '', '2014-05-29 00:00:00', ''),
(70175978, 18439832, 2, '', '2014-06-18 00:00:00', ''),
(71149928, 14113057, 5, '3744443', '2014-07-07 00:00:00', ''),
(71433756, 14107928, 2, '', '2014-07-11 00:00:00', ''),
(71554078, 20159814, 2, '', '2014-07-14 00:00:00', ''),
(71688805, 14107979, 5, '2194152', '2014-07-16 00:00:00', ''),
(72088161, 14107928, 2, '', '2014-07-23 00:00:00', ''),
(72339045, 14113461, 2, '', '2014-07-28 00:00:00', ''),
(73006827, 14115129, 2, '', '2014-08-08 00:00:00', ''),
(73012825, 14113057, 5, '1907273', '2014-08-08 00:00:00', ''),
(73012832, 14113057, 2, '', '2014-08-08 00:00:00', ''),
(74561362, 14114729, 2, '', '2014-09-05 00:00:00', ''),
(74833010, 14113057, 5, '3742781', '2014-09-10 00:00:00', ''),
(76667093, 14108694, 2, '', '2014-10-14 00:00:00', ''),
(79003577, 14113427, 5, '2804216', '2014-11-25 00:00:00', ''),
(79150984, 14111572, 2, '', '2014-11-27 00:00:00', ''),
(79152811, 14107826, 2, '', '2014-11-27 00:00:00', ''),
(79282922, 14107928, 2, '', '2014-11-30 00:00:00', ''),
(79668239, 14113461, 2, '', '2014-12-06 00:00:00', ''),
(79668247, 14113427, 2, '', '2014-12-06 00:00:00', ''),
(80437301, 18439832, 2, '', '2014-12-19 00:00:00', ''),
(81104251, 14113461, 2, '', '2015-01-04 00:00:00', ''),
(81989155, 14115129, 2, '', '2015-01-19 00:00:00', ''),
(82122379, 14113427, 5, '1180949', '2015-01-21 00:00:00', ''),
(82122381, 14113427, 2, '', '2015-01-21 00:00:00', ''),
(39024798, 14108430, 8, '66613', '2013-01-03 00:00:00', '100'),
(39025293, 14108430, 2, '', '2013-01-03 00:00:00', ''),
(39029698, 14113076, 2, '', '2013-01-03 00:00:00', ''),
(39163955, 14108694, 2, '', '2013-01-06 00:00:00', ''),
(39863773, 14154890, 2, '', '2013-01-18 00:00:00', ''),
(40281157, 14120711, 5, '1163019', '2013-01-25 00:00:00', ''),
(43532797, 14113461, 2, '', '2013-03-20 00:00:00', ''),
(44879880, 14113461, 2, '', '2013-04-10 00:00:00', ''),
(45704277, 14113076, 2, '', '2013-04-24 00:00:00', ''),
(46519220, 14113461, 2, '', '2013-05-08 00:00:00', ''),
(46519222, 14113427, 2, '', '2013-05-08 00:00:00', ''),
(46519223, 14113427, 5, '1888292', '2013-05-08 00:00:00', ''),
(47459770, 14113461, 2, '', '2013-05-23 00:00:00', ''),
(47734435, 14109079, 2, '', '2013-05-28 00:00:00', ''),
(47865617, 14109079, 5, '931485', '2013-05-30 00:00:00', ''),
(47865619, 14109079, 2, '', '2013-05-30 00:00:00', ''),
(48648046, 14113427, 5, '247800', '2013-06-12 00:00:00', ''),
(49050889, 14113461, 2, '', '2013-06-19 00:00:00', ''),
(50627540, 14113461, 2, '', '2013-07-17 00:00:00', ''),
(50885663, 14115314, 5, '67707', '2013-07-22 00:00:00', ''),
(51417274, 14114729, 5, '645220', '2013-07-31 00:00:00', ''),
(51947801, 14113427, 2, '', '2013-08-09 00:00:00', ''),
(51947802, 14113427, 5, '267001', '2013-08-09 00:00:00', ''),
(52077787, 14113461, 2, '', '2013-08-12 00:00:00', ''),
(52594557, 14107928, 2, '', '2013-08-21 00:00:00', ''),
(52606236, 14113461, 2, '', '2013-08-21 00:00:00', ''),
(52856659, 14113461, 2, '', '2013-08-26 00:00:00', ''),
(52862394, 14113461, 2, '', '2013-08-27 00:00:00', ''),
(52993603, 14113461, 2, '', '2013-08-29 00:00:00', ''),
(52993607, 14113427, 2, '', '2013-08-29 00:00:00', ''),
(53262292, 14113461, 2, '', '2013-09-03 00:00:00', ''),
(53397453, 14109079, 2, '', '2013-09-05 00:00:00', ''),
(53397516, 14109079, 5, '2416228', '2013-09-05 00:00:00', ''),
(54051725, 14113461, 2, '', '2013-09-17 00:00:00', ''),
(54300232, 14113461, 2, '', '2013-09-22 00:00:00', ''),
(54972110, 14113461, 2, '', '2013-10-03 00:00:00', ''),
(55516815, 14113461, 2, '', '2013-10-14 00:00:00', ''),
(55522610, 14107979, 2, '', '2013-10-14 00:00:00', ''),
(55650402, 14107928, 2, '', '2013-10-16 00:00:00', ''),
(55781470, 14113461, 2, '', '2013-10-18 00:00:00', ''),
(55781472, 14113427, 2, '', '2013-10-18 00:00:00', ''),
(55784036, 14111021, 2, '', '2013-10-18 00:00:00', ''),
(56190297, 14113461, 2, '', '2013-10-25 00:00:00', ''),
(56318751, 14113461, 2, '', '2013-10-28 00:00:00', ''),
(57101497, 14116014, 2, '', '2013-11-11 00:00:00', ''),
(58014507, 14113427, 5, '326139', '2013-11-26 00:00:00', ''),
(58143256, 14162208, 2, '', '2013-11-28 00:00:00', ''),
(58408803, 14107979, 5, '655857', '2013-12-04 00:00:00', ''),
(58408805, 14107979, 2, '', '2013-12-04 00:00:00', ''),
(59479695, 14113461, 2, '', '2013-12-22 00:00:00', ''),
(60129677, 18439832, 2, '', '2014-01-05 00:00:00', ''),
(60274717, 14162208, 2, '', '2014-01-08 00:00:00', ''),
(60655654, 14113427, 2, '', '2014-01-14 00:00:00', ''),
(61056439, 14113427, 2, '', '2014-01-21 00:00:00', ''),
(62089489, 14113461, 2, '', '2014-02-06 00:00:00', ''),
(62102239, 14113461, 2, '', '2014-02-06 00:00:00', ''),
(62229295, 18439832, 2, '', '2014-02-08 00:00:00', ''),
(63665693, 14113427, 2, '', '2014-03-02 00:00:00', ''),
(63665694, 14113427, 5, '381150', '2014-03-02 00:00:00', ''),
(64437880, 14113427, 2, '', '2014-03-13 00:00:00', ''),
(64576499, 14113461, 2, '', '2014-03-16 00:00:00', ''),
(64708687, 14113427, 2, '', '2014-03-18 00:00:00', ''),
(64964274, 14113427, 5, '28381', '2014-03-21 00:00:00', ''),
(65621543, 17522369, 2, '', '2014-04-01 00:00:00', ''),
(66013158, 14113427, 2, '', '2014-04-08 00:00:00', ''),
(66414732, 14162208, 2, '', '2014-04-15 00:00:00', ''),
(66414733, 14113559, 2, '', '2014-04-15 00:00:00', ''),
(66950127, 14113461, 2, '', '2014-04-24 00:00:00', ''),
(67204275, 20159814, 2, '', '2014-04-28 00:00:00', ''),
(67209409, 14114729, 5, '2382629', '2014-04-28 00:00:00', ''),
(67345783, 14113427, 2, '', '2014-04-30 00:00:00', ''),
(67594208, 14113461, 2, '', '2014-05-05 00:00:00', ''),
(69286315, 20159814, 2, '', '2014-06-03 00:00:00', ''),
(69675266, 14113461, 2, '', '2014-06-10 00:00:00', ''),
(70207936, 14113461, 2, '', '2014-06-19 00:00:00', ''),
(70207944, 14113427, 2, '', '2014-06-19 00:00:00', ''),
(70332976, 14162208, 2, '', '2014-06-21 00:00:00', ''),
(52060975, 14121669, 3, '', '2013-08-12 00:00:00', ''),
(52063672, 14130068, 2, '', '2013-08-12 00:00:00', ''),
(52565575, 14108774, 2, '', '2013-08-21 00:00:00', ''),
(52706989, 14108774, 2, '', '2013-08-23 00:00:00', ''),
(53483615, 14108774, 2, '', '2013-09-06 00:00:00', ''),
(54113056, 14116498, 2, '', '2013-09-18 00:00:00', ''),
(55405620, 14111641, 3, '', '2013-10-11 00:00:00', ''),
(56464520, 14112752, 2, '', '2013-10-30 00:00:00', ''),
(56602762, 14107531, 5, '1406486', '2013-11-01 00:00:00', ''),
(58562323, 14116498, 2, '', '2013-12-06 00:00:00', ''),
(59222699, 14112752, 2, '', '2013-12-17 00:00:00', ''),
(59882977, 14119297, 2, '', '2013-12-31 00:00:00', ''),
(60023862, 14108774, 2, '', '2014-01-03 00:00:00', ''),
(61973293, 14116498, 2, '', '2014-02-04 00:00:00', ''),
(62398856, 16726918, 2, '', '2014-02-11 00:00:00', ''),
(62922203, 14108774, 2, '', '2014-02-19 00:00:00', ''),
(64082685, 16503127, 2, '', '2014-03-08 00:00:00', ''),
(64471960, 14112752, 2, '', '2014-03-14 00:00:00', ''),
(65387679, 14116498, 2, '', '2014-03-28 00:00:00', ''),
(66318170, 14108774, 2, '', '2014-04-13 00:00:00', ''),
(66841278, 14116498, 2, '', '2014-04-22 00:00:00', ''),
(68664885, 14121669, 2, '', '2014-05-22 00:00:00', ''),
(68927480, 14107531, 2, '', '2014-05-27 00:00:00', ''),
(69444555, 14116498, 2, '', '2014-06-05 00:00:00', ''),
(70492623, 14112752, 2, '', '2014-06-24 00:00:00', ''),
(72035155, 14107531, 2, '', '2014-07-22 00:00:00', ''),
(72532632, 14116498, 2, '', '2014-07-31 00:00:00', ''),
(73189407, 14107531, 2, '', '2014-08-12 00:00:00', ''),
(73453201, 14116498, 3, '', '2014-08-16 00:00:00', ''),
(73999665, 14108774, 2, '', '2014-08-26 00:00:00', ''),
(74125867, 14116498, 2, '', '2014-08-28 00:00:00', ''),
(74814296, 14108774, 2, '', '2014-09-10 00:00:00', ''),
(75331840, 14108774, 2, '', '2014-09-19 00:00:00', ''),
(78695645, 14108774, 2, '', '2014-11-19 00:00:00', ''),
(79721764, 14108774, 2, '', '2014-12-08 00:00:00', ''),
(81399941, 14116498, 2, '', '2015-01-09 00:00:00', ''),
(82439915, 14108774, 2, '', '2015-01-27 00:00:00', ''),
(38944597, 14116194, 2, '', '2013-01-02 00:00:00', ''),
(38944789, 14116194, 2, '', '2013-01-02 00:00:00', ''),
(38945021, 14116194, 2, '', '2013-01-02 00:00:00', ''),
(38945022, 14116194, 5, '188331', '2013-01-02 00:00:00', ''),
(38945950, 14116521, 2, '', '2013-01-02 00:00:00', ''),
(38946026, 14116521, 2, '', '2013-01-02 00:00:00', ''),
(38946429, 14116194, 5, '937822', '2013-01-02 00:00:00', ''),
(38946430, 14116194, 2, '', '2013-01-02 00:00:00', ''),
(38946436, 14116194, 2, '', '2013-01-02 00:00:00', ''),
(38946830, 14116194, 2, '', '2013-01-02 00:00:00', ''),
(38947009, 14116498, 2, '', '2013-01-02 00:00:00', ''),
(38949783, 14116521, 2, '', '2013-01-02 00:00:00', ''),
(38949789, 14117330, 2, '', '2013-01-02 00:00:00', ''),
(39233792, 14107804, 2, '', '2013-01-07 00:00:00', ''),
(45122047, 14108774, 2, '', '2013-04-15 00:00:00', ''),
(45251140, 14108774, 2, '', '2013-04-16 00:00:00', ''),
(45906282, 14108774, 2, '', '2013-04-26 00:00:00', ''),
(46319629, 14108774, 2, '', '2013-05-04 00:00:00', ''),
(46321831, 16348071, 2, '', '2013-05-04 00:00:00', ''),
(49126767, 14108774, 2, '', '2013-06-20 00:00:00', ''),
(50024336, 14116498, 2, '', '2013-07-07 00:00:00', ''),
(51195364, 14116498, 2, '', '2013-07-27 00:00:00', ''),
(51568564, 14108774, 2, '', '2013-08-02 00:00:00', ''),
(52891368, 14107531, 5, '734493', '2013-08-27 00:00:00', ''),
(52891371, 14107531, 2, '', '2013-08-27 00:00:00', ''),
(52903405, 14121669, 2, '', '2013-08-27 00:00:00', ''),
(53296347, 16726918, 2, '', '2013-09-03 00:00:00', ''),
(54074822, 14108774, 2, '', '2013-09-18 00:00:00', ''),
(54079904, 14108774, 2, '', '2013-09-18 00:00:00', ''),
(54824876, 14116498, 2, '', '2013-10-01 00:00:00', ''),
(55351815, 14116498, 2, '', '2013-10-10 00:00:00', ''),
(57700501, 14108774, 2, '', '2013-11-21 00:00:00', ''),
(59203761, 14108774, 2, '', '2013-12-17 00:00:00', ''),
(59206002, 14108774, 2, '', '2013-12-17 00:00:00', ''),
(60250700, 14116498, 2, '', '2014-01-07 00:00:00', ''),
(60643337, 14121669, 2, '', '2014-01-14 00:00:00', ''),
(60903230, 16503127, 2, '', '2014-01-17 00:00:00', ''),
(62581697, 14121669, 2, '', '2014-02-13 00:00:00', ''),
(63503970, 14108774, 2, '', '2014-02-27 00:00:00', ''),
(65083670, 16344827, 3, '', '2014-03-24 00:00:00', ''),
(66489843, 14108774, 2, '', '2014-04-16 00:00:00', ''),
(66623630, 14116498, 2, '', '2014-04-17 00:00:00', ''),
(67295004, 14116498, 2, '', '2014-04-29 00:00:00', ''),
(68989863, 14121669, 2, '', '2014-05-28 00:00:00', ''),
(70696703, 14107531, 5, '2358833', '2014-06-27 00:00:00', ''),
(71066575, 14107531, 2, '', '2014-07-04 00:00:00', ''),
(71066577, 14107531, 5, '90492', '2014-07-04 00:00:00', ''),
(71192092, 14121669, 2, '', '2014-07-07 00:00:00', ''),
(71590401, 14116498, 2, '', '2014-07-14 00:00:00', ''),
(71719157, 14116498, 2, '', '2014-07-16 00:00:00', ''),
(71726098, 14107804, 2, '', '2014-07-16 00:00:00', ''),
(72114443, 14116498, 2, '', '2014-07-23 00:00:00', ''),
(73418768, 14116498, 2, '', '2014-08-15 00:00:00', ''),
(77679909, 14108774, 2, '', '2014-11-01 00:00:00', ''),
(78449608, 14130068, 2, '', '2014-11-14 00:00:00', ''),
(81164474, 14108774, 2, '', '2015-01-05 00:00:00', ''),
(81678988, 14116498, 2, '', '2015-01-14 00:00:00', ''),
(38942312, 14115620, 2, '', '2013-01-02 00:00:00', ''),
(38942319, 14115620, 5, '264697', '2013-01-02 00:00:00', ''),
(38942797, 14115620, 2, '', '2013-01-02 00:00:00', ''),
(38943208, 14115902, 2, '', '2013-01-02 00:00:00', ''),
(38943209, 14115902, 2, '', '2013-01-02 00:00:00', ''),
(38943213, 14115902, 2, '', '2013-01-02 00:00:00', ''),
(38943214, 14115902, 5, '477453', '2013-01-02 00:00:00', ''),
(38943252, 14115913, 2, '', '2013-01-02 00:00:00', ''),
(38943259, 14115913, 2, '', '2013-01-02 00:00:00', ''),
(38943266, 14115913, 2, '', '2013-01-02 00:00:00', ''),
(38943354, 14115902, 2, '', '2013-01-02 00:00:00', ''),
(38943363, 14115913, 2, '', '2013-01-02 00:00:00', ''),
(38943364, 14115913, 2, '', '2013-01-02 00:00:00', ''),
(38943421, 14115913, 2, '', '2013-01-02 00:00:00', ''),
(38943461, 14115913, 2, '', '2013-01-02 00:00:00', ''),
(38943462, 14115913, 2, '', '2013-01-02 00:00:00', ''),
(38943463, 14115902, 2, '', '2013-01-02 00:00:00', ''),
(38943467, 14115902, 2, '', '2013-01-02 00:00:00', ''),
(38943677, 14115902, 5, '243557', '2013-01-02 00:00:00', ''),
(38943679, 14114741, 1, '', '2013-01-02 00:00:00', ''),
(38943680, 14115913, 2, '', '2013-01-02 00:00:00', ''),
(38944258, 14115620, 3, '', '2013-01-02 00:00:00', ''),
(38945137, 14115913, 2, '', '2013-01-02 00:00:00', ''),
(38945400, 14115902, 2, '', '2013-01-02 00:00:00', ''),
(38945428, 14115913, 2, '', '2013-01-02 00:00:00', ''),
(38945430, 14115902, 5, '1168661', '2013-01-02 00:00:00', ''),
(38945708, 14116420, 2, '', '2013-01-02 00:00:00', ''),
(38945717, 14116420, 5, '592323', '2013-01-02 00:00:00', ''),
(38945747, 14116420, 2, '', '2013-01-02 00:00:00', ''),
(38945909, 14116513, 2, '', '2013-01-02 00:00:00', ''),
(38945916, 14116513, 2, '', '2013-01-02 00:00:00', ''),
(38945946, 14116513, 2, '', '2013-01-02 00:00:00', ''),
(38945949, 14116420, 2, '', '2013-01-02 00:00:00', ''),
(38946023, 14116513, 2, '', '2013-01-02 00:00:00', ''),
(38946027, 14116420, 5, '567864', '2013-01-02 00:00:00', ''),
(38946028, 14116420, 2, '', '2013-01-02 00:00:00', ''),
(38946104, 14116513, 2, '', '2013-01-02 00:00:00', ''),
(38946107, 14116420, 2, '', '2013-01-02 00:00:00', ''),
(38946378, 14116513, 1, '', '2013-01-02 00:00:00', ''),
(38946440, 14115913, 2, '', '2013-01-02 00:00:00', ''),
(38946478, 14116420, 2, '', '2013-01-02 00:00:00', ''),
(38947145, 14115902, 2, '', '2013-01-02 00:00:00', ''),
(38947154, 14115913, 2, '', '2013-01-02 00:00:00', ''),
(38947173, 14115913, 2, '', '2013-01-02 00:00:00', ''),
(38947968, 14115620, 5, '1267263', '2013-01-02 00:00:00', ''),
(38947969, 14115620, 2, '', '2013-01-02 00:00:00', ''),
(38948889, 14116513, 2, '', '2013-01-02 00:00:00', ''),
(38949077, 14115902, 2, '', '2013-01-02 00:00:00', ''),
(38949131, 14116420, 2, '', '2013-01-02 00:00:00', ''),
(38949152, 14116513, 2, '', '2013-01-02 00:00:00', ''),
(38949158, 14116420, 2, '', '2013-01-02 00:00:00', ''),
(38949778, 14116513, 2, '', '2013-01-02 00:00:00', ''),
(38949795, 14116420, 2, '', '2013-01-02 00:00:00', ''),
(38949860, 14115902, 2, '', '2013-01-02 00:00:00', ''),
(38950088, 14116513, 2, '', '2013-01-02 00:00:00', ''),
(38952428, 14116420, 2, '', '2013-01-02 00:00:00', ''),
(38952431, 14116513, 2, '', '2013-01-02 00:00:00', ''),
(38952812, 14118242, 2, '', '2013-01-02 00:00:00', ''),
(39100386, 14125030, 2, '', '2013-01-04 00:00:00', ''),
(46455503, 16377459, 2, '', '2013-05-07 00:00:00', ''),
(50659144, 15820481, 2, '', '2013-07-18 00:00:00', ''),
(53545437, 14115620, 5, '863564', '2013-09-08 00:00:00', ''),
(53545438, 14115620, 2, '', '2013-09-08 00:00:00', ''),
(67011107, 21105833, 2, '', '2014-04-24 00:00:00', ''),
(67135616, 14114741, 2, '', '2014-04-27 00:00:00', ''),
(67146938, 21105833, 2, '', '2014-04-27 00:00:00', ''),
(67423385, 21105833, 2, '', '2014-05-01 00:00:00', ''),
(70436302, 21105833, 2, '', '2014-06-24 00:00:00', ''),
(71065953, 14110890, 2, '', '2014-07-04 00:00:00', ''),
(71195904, 17449231, 2, '', '2014-07-07 00:00:00', ''),
(71330055, 23713981, 2, '', '2014-07-09 00:00:00', ''),
(74190509, 14114741, 2, '', '2014-08-29 00:00:00', ''),
(74445439, 17449231, 3, '', '2014-09-03 00:00:00', ''),
(75621013, 14110890, 5, '989962', '2014-09-25 00:00:00', ''),
(75888759, 14110890, 5, '553773', '2014-09-30 00:00:00', ''),
(75888760, 14110890, 2, '', '2014-09-30 00:00:00', ''),
(76148447, 14114741, 2, '', '2014-10-04 00:00:00', ''),
(79504979, 14114741, 2, '', '2014-12-03 00:00:00', ''),
(80262897, 17449231, 2, '', '2014-12-17 00:00:00', ''),
(82071288, 14115620, 2, '', '2015-01-21 00:00:00', ''),
(82334277, 14114741, 2, '', '2015-01-25 00:00:00', ''),
(82714877, 14114741, 2, '', '2015-01-31 00:00:00', ''),
(38913241, 14107418, 2, '', '2013-01-01 00:00:00', ''),
(38913996, 14107418, 2, '', '2013-01-01 00:00:00', ''),
(39055189, 14114738, 5, '57954', '2013-01-03 00:00:00', ''),
(39055190, 14114738, 2, '', '2013-01-03 00:00:00', ''),
(39145585, 14112515, 2, '', '2013-01-05 00:00:00', ''),
(39145607, 14115406, 2, '', '2013-01-05 00:00:00', ''),
(39145611, 14112533, 2, '', '2013-01-05 00:00:00', ''),
(39156576, 14112515, 3, '', '2013-01-05 00:00:00', ''),
(46508040, 14112515, 2, '', '2013-05-07 00:00:00', ''),
(48772964, 14114419, 2, '', '2013-06-14 00:00:00', ''),
(49173067, 16198496, 2, '', '2013-06-21 00:00:00', ''),
(50340582, 14114419, 2, '', '2013-07-12 00:00:00', ''),
(50473164, 14280543, 2, '', '2013-07-15 00:00:00', ''),
(50992345, 14114419, 2, '', '2013-07-24 00:00:00', ''),
(51135226, 14114419, 2, '', '2013-07-26 00:00:00', ''),
(52150896, 14120721, 2, '', '2013-08-13 00:00:00', ''),
(55896671, 14114419, 2, '', '2013-10-21 00:00:00', ''),
(58906650, 14114419, 2, '', '2013-12-12 00:00:00', ''),
(59182314, 16198496, 2, '', '2013-12-17 00:00:00', ''),
(60059061, 14280543, 2, '', '2014-01-04 00:00:00', ''),
(60717522, 14114419, 2, '', '2014-01-15 00:00:00', ''),
(61244519, 14114419, 2, '', '2014-01-23 00:00:00', ''),
(64905868, 14114419, 2, '', '2014-03-21 00:00:00', ''),
(66195762, 14114419, 2, '', '2014-04-10 00:00:00', ''),
(66989394, 14114419, 2, '', '2014-04-24 00:00:00', ''),
(70150467, 14114419, 2, '', '2014-06-18 00:00:00', ''),
(70152800, 14114419, 2, '', '2014-06-18 00:00:00', ''),
(70522072, 14114419, 2, '', '2014-06-25 00:00:00', ''),
(71831129, 14114419, 2, '', '2014-07-18 00:00:00', ''),
(71963506, 14120721, 2, '', '2014-07-21 00:00:00', ''),
(74145127, 14120721, 2, '', '2014-08-29 00:00:00', ''),
(74286331, 14114419, 2, '', '2014-09-01 00:00:00', ''),
(75045982, 14114419, 2, '', '2014-09-15 00:00:00', ''),
(76177947, 14114419, 2, '', '2014-10-05 00:00:00', ''),
(76824569, 14120721, 2, '', '2014-10-16 00:00:00', ''),
(77733430, 14114419, 2, '', '2014-11-02 00:00:00', ''),
(79221587, 14114419, 2, '', '2014-11-28 00:00:00', ''),
(80666890, 14120721, 2, '', '2014-12-24 00:00:00', ''),
(80918273, 14107418, 2, '', '2014-12-30 00:00:00', ''),
(38921322, 14107418, 2, '', '2013-01-01 00:00:00', ''),
(38927503, 14111679, 2, '', '2013-01-01 00:00:00', ''),
(38927510, 14111679, 2, '', '2013-01-01 00:00:00', ''),
(38927511, 14111679, 2, '', '2013-01-01 00:00:00', ''),
(38927574, 14111679, 2, '', '2013-01-01 00:00:00', ''),
(38927747, 14111679, 2, '', '2013-01-01 00:00:00', ''),
(38927810, 14111679, 5, '1243996', '2013-01-01 00:00:00', ''),
(38928110, 14111679, 2, '', '2013-01-01 00:00:00', ''),
(38928155, 14111679, 5, '772000', '2013-01-01 00:00:00', ''),
(38928156, 14111679, 2, '', '2013-01-01 00:00:00', ''),
(38928217, 14111679, 2, '', '2013-01-01 00:00:00', ''),
(38928267, 14111679, 2, '', '2013-01-01 00:00:00', ''),
(38928312, 14111679, 5, '1094597', '2013-01-01 00:00:00', ''),
(38928390, 14111679, 5, '776084', '2013-01-01 00:00:00', ''),
(38929802, 14111679, 2, '', '2013-01-01 00:00:00', ''),
(38930089, 14111679, 2, '', '2013-01-01 00:00:00', ''),
(38930481, 14112515, 2, '', '2013-01-01 00:00:00', ''),
(38930509, 14112515, 2, '', '2013-01-01 00:00:00', ''),
(38930511, 14112515, 2, '', '2013-01-01 00:00:00', ''),
(38930513, 14112515, 2, '', '2013-01-01 00:00:00', ''),
(38930567, 14112515, 3, '', '2013-01-01 00:00:00', ''),
(38930576, 14112515, 2, '', '2013-01-01 00:00:00', ''),
(38930597, 14112533, 2, '', '2013-01-01 00:00:00', ''),
(38930602, 14112515, 2, '', '2013-01-01 00:00:00', ''),
(38930606, 14112515, 2, '', '2013-01-01 00:00:00', ''),
(38930676, 14112515, 2, '', '2013-01-01 00:00:00', ''),
(38930848, 14112533, 2, '', '2013-01-01 00:00:00', ''),
(38931651, 14111679, 2, '', '2013-01-01 00:00:00', ''),
(38934314, 14111679, 2, '', '2013-01-01 00:00:00', ''),
(38934483, 14112515, 2, '', '2013-01-01 00:00:00', ''),
(38935571, 14112515, 2, '', '2013-01-01 00:00:00', ''),
(38935848, 14111679, 2, '', '2013-01-01 00:00:00', ''),
(39206781, 14112515, 2, '', '2013-01-07 00:00:00', ''),
(39987285, 14112515, 3, '', '2013-01-20 00:00:00', ''),
(39987328, 14112515, 2, '', '2013-01-20 00:00:00', ''),
(39987366, 14112515, 5, '1450967', '2013-01-20 00:00:00', ''),
(39987790, 14120721, 2, '', '2013-01-20 00:00:00', ''),
(40513500, 14280543, 2, '', '2013-01-29 00:00:00', ''),
(43204016, 14114738, 2, '', '2013-03-14 00:00:00', ''),
(43204019, 14114738, 5, '545637', '2013-03-14 00:00:00', ''),
(44013425, 14120721, 2, '', '2013-03-27 00:00:00', ''),
(44290784, 14112515, 2, '', '2013-04-01 00:00:00', ''),
(46844036, 14114419, 2, '', '2013-05-13 00:00:00', ''),
(47375302, 14114419, 2, '', '2013-05-22 00:00:00', ''),
(48974332, 14114419, 2, '', '2013-06-18 00:00:00', ''),
(51030013, 16198496, 2, '', '2013-07-24 00:00:00', ''),
(53276638, 14120721, 2, '', '2013-09-03 00:00:00', ''),
(53668834, 14114419, 2, '', '2013-09-10 00:00:00', ''),
(60353910, 14120721, 2, '', '2014-01-09 00:00:00', ''),
(63633481, 14114419, 2, '', '2014-03-01 00:00:00', ''),
(65199770, 14114419, 2, '', '2014-03-26 00:00:00', ''),
(65569124, 14114419, 2, '', '2014-04-01 00:00:00', ''),
(67398102, 14114419, 2, '', '2014-05-01 00:00:00', ''),
(67541356, 14114419, 2, '', '2014-05-04 00:00:00', ''),
(67669621, 16198496, 2, '', '2014-05-06 00:00:00', ''),
(68462431, 14114419, 2, '', '2014-05-20 00:00:00', ''),
(69084863, 14112515, 5, '2260924', '2014-05-30 00:00:00', ''),
(69084867, 14112515, 2, '', '2014-05-30 00:00:00', ''),
(69854018, 14114419, 2, '', '2014-06-12 00:00:00', ''),
(71799798, 14114419, 2, '', '2014-07-17 00:00:00', ''),
(71799818, 14114419, 2, '', '2014-07-17 00:00:00', ''),
(71928757, 14114419, 2, '', '2014-07-20 00:00:00', ''),
(72465362, 16198496, 2, '', '2014-07-30 00:00:00', ''),
(72712078, 14280543, 2, '', '2014-08-03 00:00:00', ''),
(72835696, 14116460, 3, '', '2014-08-05 00:00:00', ''),
(73495106, 14120721, 2, '', '2014-08-18 00:00:00', ''),
(73864852, 14114419, 2, '', '2014-08-24 00:00:00', ''),
(77761861, 14114419, 2, '', '2014-11-03 00:00:00', ''),
(78537834, 14114419, 2, '', '2014-11-17 00:00:00', ''),
(80066193, 14114419, 2, '', '2014-12-13 00:00:00', ''),
(81763180, 14114419, 2, '', '2015-01-15 00:00:00', ''),
(38974256, 14112515, 2, '', '2013-01-02 00:00:00', ''),
(39528382, 14112515, 2, '', '2013-01-12 00:00:00', ''),
(41984959, 14114419, 2, '', '2013-02-24 00:00:00', ''),
(42113072, 14280543, 2, '', '2013-02-26 00:00:00', ''),
(47806302, 14114419, 2, '', '2013-05-29 00:00:00', ''),
(48885776, 14114738, 2, '', '2013-06-17 00:00:00', ''),
(49787354, 14114419, 2, '', '2013-07-02 00:00:00', ''),
(51104148, 14114419, 2, '', '2013-07-25 00:00:00', ''),
(52422345, 16198496, 2, '', '2013-08-19 00:00:00', ''),
(55449750, 14114419, 2, '', '2013-10-12 00:00:00', ''),
(55591008, 14114419, 2, '', '2013-10-15 00:00:00', ''),
(55992496, 14114419, 3, '', '2013-10-22 00:00:00', ''),
(56232913, 14114419, 2, '', '2013-10-26 00:00:00', ''),
(57322523, 14112515, 2, '', '2013-11-14 00:00:00', ''),
(57324439, 19931428, 2, '', '2013-11-14 00:00:00', ''),
(57730888, 14120721, 2, '', '2013-11-21 00:00:00', ''),
(58139931, 14114419, 16, '', '2013-11-28 00:00:00', ''),
(59025017, 14114419, 2, '', '2013-12-14 00:00:00', ''),
(61952958, 14280543, 2, '', '2014-02-04 00:00:00', ''),
(62211960, 14112515, 2, '', '2014-02-07 00:00:00', ''),
(62776061, 14114419, 2, '', '2014-02-17 00:00:00', ''),
(64782008, 14114419, 2, '', '2014-03-19 00:00:00', ''),
(68875224, 14280543, 2, '', '2014-05-27 00:00:00', ''),
(69142874, 14114419, 2, '', '2014-05-31 00:00:00', ''),
(70578519, 14114419, 2, '', '2014-06-26 00:00:00', ''),
(71145784, 14114419, 2, '', '2014-07-07 00:00:00', ''),
(71551993, 14114419, 2, '', '2014-07-14 00:00:00', ''),
(72621170, 14114419, 2, '', '2014-08-01 00:00:00', ''),
(74292093, 14120721, 2, '', '2014-09-01 00:00:00', ''),
(76403920, 14114419, 2, '', '2014-10-09 00:00:00', ''),
(78082117, 14114738, 2, '', '2014-11-08 00:00:00', ''),
(78353881, 14114419, 2, '', '2014-11-13 00:00:00', ''),
(79274820, 14112515, 2, '', '2014-11-30 00:00:00', ''),
(82497882, 19931428, 2, '', '2015-01-28 00:00:00', ''),
(82508511, 14116460, 2, '', '2015-01-28 00:00:00', ''),
(39022582, 14107418, 2, '', '2013-01-03 00:00:00', ''),
(39161432, 14112533, 2, '', '2013-01-06 00:00:00', ''),
(42879869, 14114738, 2, '', '2013-03-10 00:00:00', ''),
(44229631, 14114738, 2, '', '2013-03-31 00:00:00', ''),
(47061830, 14114419, 2, '', '2013-05-16 00:00:00', ''),
(55918904, 14114419, 2, '', '2013-10-21 00:00:00', ''),
(56968843, 14120721, 2, '', '2013-11-08 00:00:00', ''),
(58284763, 14114419, 2, '', '2013-12-02 00:00:00', ''),
(63917992, 14120721, 2, '', '2014-03-06 00:00:00', ''),
(64829934, 14114419, 2, '', '2014-03-20 00:00:00', ''),
(64958846, 16198496, 2, '', '2014-03-21 00:00:00', ''),
(56833992, 14119294, 2, '', '2013-11-06 00:00:00', ''),
(57103535, 14113278, 5, '345182', '2013-11-11 00:00:00', ''),
(57103541, 14113278, 2, '', '2013-11-11 00:00:00', ''),
(57238414, 16899789, 2, '', '2013-11-13 00:00:00', ''),
(57890218, 14109927, 2, '', '2013-11-25 00:00:00', ''),
(58930408, 14113278, 5, '1372543', '2013-12-12 00:00:00', ''),
(59873136, 20803639, 3, '', '2013-12-31 00:00:00', ''),
(60933086, 20803639, 2, '', '2014-01-18 00:00:00', ''),
(62229236, 14109166, 2, '', '2014-02-08 00:00:00', ''),
(62738800, 14109927, 2, '', '2014-02-17 00:00:00', ''),
(66148278, 14109927, 5, '2141073', '2014-04-10 00:00:00', ''),
(66671535, 16899789, 2, '', '2014-04-18 00:00:00', ''),
(67734543, 14119294, 2, '', '2014-05-07 00:00:00', ''),
(67860806, 14115375, 2, '', '2014-05-09 00:00:00', ''),
(68630677, 14113278, 2, '', '2014-05-22 00:00:00', ''),
(68883116, 14113278, 2, '', '2014-05-27 00:00:00', ''),
(69676347, 14115375, 2, '', '2014-06-10 00:00:00', ''),
(69810388, 14113278, 2, '', '2014-06-12 00:00:00', ''),
(71495191, 16445213, 2, '', '2014-07-12 00:00:00', ''),
(73703053, 20803639, 2, '', '2014-08-21 00:00:00', ''),
(75504175, 14113278, 5, '836640', '2014-09-23 00:00:00', ''),
(75504177, 14113278, 2, '', '2014-09-23 00:00:00', ''),
(75509491, 14113278, 2, '', '2014-09-23 00:00:00', ''),
(75509492, 14113278, 5, '280109', '2014-09-23 00:00:00', ''),
(76168399, 14113278, 2, '', '2014-10-05 00:00:00', ''),
(79132215, 20803639, 2, '', '2014-11-27 00:00:00', ''),
(82355032, 20803639, 2, '', '2015-01-26 00:00:00', ''),
(42298790, 14114450, 2, '', '2013-02-28 00:00:00', ''),
(42298794, 14113278, 2, '', '2013-02-28 00:00:00', ''),
(45941352, 14113278, 2, '', '2013-04-27 00:00:00', ''),
(45941353, 14113278, 5, '1761195', '2013-04-27 00:00:00', ''),
(46218422, 14120223, 8, '153285', '2013-05-02 00:00:00', '500'),
(46218865, 14120223, 2, '', '2013-05-02 00:00:00', ''),
(46220414, 14120223, 2, '', '2013-05-02 00:00:00', ''),
(46493443, 14120223, 2, '', '2013-05-07 00:00:00', ''),
(48595333, 14119294, 2, '', '2013-06-11 00:00:00', ''),
(54487974, 14113278, 2, '', '2013-09-25 00:00:00', ''),
(58715762, 14115375, 2, '', '2013-12-09 00:00:00', ''),
(58715763, 14115375, 5, '525179', '2013-12-09 00:00:00', ''),
(59395546, 14119294, 2, '', '2013-12-20 00:00:00', ''),
(59526815, 14115375, 2, '', '2013-12-23 00:00:00', ''),
(60897826, 14109927, 2, '', '2014-01-17 00:00:00', ''),
(60897832, 14109927, 5, '1469203', '2014-01-17 00:00:00', ''),
(61481063, 14115375, 5, '1038250', '2014-01-27 00:00:00', ''),
(63322499, 14119294, 2, '', '2014-02-25 00:00:00', ''),
(63611365, 14109166, 2, '', '2014-03-01 00:00:00', ''),
(66687918, 14113278, 2, '', '2014-04-19 00:00:00', ''),
(68285422, 14109166, 2, '', '2014-05-16 00:00:00', ''),
(68552655, 14108098, 2, '', '2014-05-21 00:00:00', ''),
(69339404, 14109166, 2, '', '2014-06-04 00:00:00', ''),
(70130399, 16445213, 2, '', '2014-06-18 00:00:00', ''),
(71082756, 14115375, 2, '', '2014-07-05 00:00:00', ''),
(72440349, 14108098, 2, '', '2014-07-29 00:00:00', ''),
(72710790, 16899789, 2, '', '2014-08-03 00:00:00', ''),
(72974412, 14115375, 2, '', '2014-08-07 00:00:00', ''),
(73776958, 20803639, 2, '', '2014-08-22 00:00:00', ''),
(73907580, 14119294, 2, '', '2014-08-25 00:00:00', ''),
(78797377, 14119294, 2, '', '2014-11-20 00:00:00', ''),
(42618604, 14259396, 2, '', '2013-03-06 00:00:00', ''),
(46528944, 14120223, 2, '', '2013-05-08 00:00:00', ''),
(46665823, 14120223, 2, '', '2013-05-10 00:00:00', ''),
(48135220, 16899789, 2, '', '2013-06-04 00:00:00', ''),
(48679056, 14119294, 2, '', '2013-06-13 00:00:00', ''),
(58073183, 14113278, 5, '671229', '2013-11-27 00:00:00', ''),
(58073185, 14113278, 2, '', '2013-11-27 00:00:00', ''),
(59637962, 14109166, 3, '', '2013-12-25 00:00:00', ''),
(60045428, 14113278, 2, '', '2014-01-03 00:00:00', ''),
(64187535, 16899789, 2, '', '2014-03-10 00:00:00', ''),
(65375861, 14119294, 2, '', '2014-03-28 00:00:00', ''),
(65504429, 14113278, 5, '619869', '2014-03-31 00:00:00', ''),
(66532624, 14119294, 2, '', '2014-04-16 00:00:00', ''),
(67586265, 20803639, 2, '', '2014-05-05 00:00:00', ''),
(67849274, 14115375, 5, '2077475', '2014-05-09 00:00:00', ''),
(70619594, 14113278, 2, '', '2014-06-26 00:00:00', ''),
(79063683, 14113278, 5, '1817185', '2014-11-25 00:00:00', ''),
(79063685, 14113278, 2, '', '2014-11-25 00:00:00', ''),
(79309480, 14115375, 2, '', '2014-12-01 00:00:00', ''),
(38955225, 14119294, 2, '', '2013-01-02 00:00:00', ''),
(38955450, 14119294, 2, '', '2013-01-02 00:00:00', ''),
(38955603, 14119294, 2, '', '2013-01-02 00:00:00', ''),
(38955893, 14119294, 1, '', '2013-01-02 00:00:00', ''),
(38957787, 14119887, 2, '', '2013-01-02 00:00:00', ''),
(38958640, 14120223, 3, '', '2013-01-02 00:00:00', ''),
(38958719, 14120223, 2, '', '2013-01-02 00:00:00', ''),
(38958820, 14119887, 2, '', '2013-01-02 00:00:00', ''),
(38959015, 14120223, 2, '', '2013-01-02 00:00:00', ''),
(38966122, 14114725, 2, '', '2013-01-02 00:00:00', ''),
(39629330, 14119887, 2, '', '2013-01-14 00:00:00', ''),
(40193604, 14114725, 2, '', '2013-01-23 00:00:00', ''),
(47092463, 14113278, 2, '', '2013-05-17 00:00:00', ''),
(47357810, 14115375, 2, '', '2013-05-22 00:00:00', ''),
(52184623, 14113278, 2, '', '2013-08-14 00:00:00', ''),
(54113447, 16899789, 2, '', '2013-09-18 00:00:00', ''),
(57390576, 16899789, 2, '', '2013-11-15 00:00:00', ''),
(57511453, 14109927, 2, '', '2013-11-18 00:00:00', ''),
(59882956, 14119294, 2, '', '2013-12-31 00:00:00', ''),
(60289185, 14115375, 5, '2019689', '2014-01-08 00:00:00', ''),
(60937431, 14113278, 2, '', '2014-01-18 00:00:00', ''),
(60937432, 14113278, 5, '399759', '2014-01-18 00:00:00', ''),
(62110071, 14119294, 2, '', '2014-02-06 00:00:00', ''),
(62522206, 14109927, 5, '1634846', '2014-02-13 00:00:00', ''),
(65387253, 16899789, 2, '', '2014-03-28 00:00:00', ''),
(65400293, 14113278, 2, '', '2014-03-28 00:00:00', ''),
(66843982, 14109166, 2, '', '2014-04-22 00:00:00', ''),
(70077927, 14109166, 3, '', '2014-06-17 00:00:00', ''),
(74943272, 14113278, 5, '973543', '2014-09-12 00:00:00', ''),
(75716759, 14109927, 5, '1847187', '2014-09-26 00:00:00', ''),
(76627298, 14113596, 2, '', '2014-10-13 00:00:00', ''),
(76770038, 14113278, 5, '2672526', '2014-10-16 00:00:00', ''),
(77781405, 16445213, 2, '', '2014-11-03 00:00:00', ''),
(78177611, 14109927, 2, '', '2014-11-10 00:00:00', ''),
(78179324, 14109927, 2, '', '2014-11-10 00:00:00', ''),
(78834530, 14113278, 5, '43769', '2014-11-21 00:00:00', ''),
(79718542, 23229562, 2, '', '2014-12-08 00:00:00', ''),
(79849542, 16899789, 2, '', '2014-12-10 00:00:00', ''),
(81403195, 16899789, 2, '', '2015-01-09 00:00:00', ''),
(38937724, 14114450, 2, '', '2013-01-01 00:00:00', ''),
(38940362, 14114725, 2, '', '2013-01-01 00:00:00', ''),
(38941285, 14115375, 2, '', '2013-01-02 00:00:00', ''),
(38942828, 14114725, 2, '', '2013-01-02 00:00:00', ''),
(38943012, 14114725, 2, '', '2013-01-02 00:00:00', ''),
(38943251, 14115911, 2, '', '2013-01-02 00:00:00', ''),
(38943274, 14115911, 2, '', '2013-01-02 00:00:00', ''),
(38943323, 14115375, 2, '', '2013-01-02 00:00:00', ''),
(38943438, 14115375, 2, '', '2013-01-02 00:00:00', ''),
(38943460, 14115911, 2, '', '2013-01-02 00:00:00', ''),
(38944647, 14113278, 2, '', '2013-01-02 00:00:00', ''),
(38947982, 14113596, 2, '', '2013-01-02 00:00:00', ''),
(38949248, 14115911, 2, '', '2013-01-02 00:00:00', ''),
(38952559, 14115911, 2, '', '2013-01-02 00:00:00', ''),
(39373395, 14113278, 2, '', '2013-01-09 00:00:00', ''),
(44446230, 14109927, 5, '830554', '2013-04-03 00:00:00', ''),
(44446231, 14109927, 2, '', '2013-04-03 00:00:00', ''),
(48606502, 16899789, 2, '', '2013-06-12 00:00:00', ''),
(50407669, 14113596, 2, '', '2013-07-13 00:00:00', ''),
(55890725, 14115375, 2, '', '2013-10-21 00:00:00', ''),
(60244376, 14119294, 2, '', '2014-01-07 00:00:00', ''),
(61151534, 14113278, 2, '', '2014-01-22 00:00:00', ''),
(61424370, 14113278, 2, '', '2014-01-27 00:00:00', ''),
(62585627, 14109927, 2, '', '2014-02-13 00:00:00', ''),
(62585628, 14109927, 5, '617207', '2014-02-13 00:00:00', ''),
(62585678, 16899789, 2, '', '2014-02-13 00:00:00', ''),
(63384570, 14109927, 5, '572180', '2014-02-26 00:00:00', ''),
(63891259, 14113278, 2, '', '2014-03-05 00:00:00', ''),
(64430110, 14115375, 2, '', '2014-03-13 00:00:00', ''),
(67288212, 16899789, 2, '', '2014-04-29 00:00:00', ''),
(67818292, 14113278, 2, '', '2014-05-08 00:00:00', ''),
(70165623, 14109927, 5, '2429160', '2014-06-18 00:00:00', ''),
(73038914, 14115375, 2, '', '2014-08-08 00:00:00', ''),
(73038918, 14115375, 5, '1762224', '2014-08-08 00:00:00', ''),
(76907344, 16445213, 2, '', '2014-10-18 00:00:00', ''),
(77930419, 14119294, 2, '', '2014-11-05 00:00:00', ''),
(80265441, 23229562, 2, '', '2014-12-17 00:00:00', ''),
(59209643, 14107208, 2, '', '2013-12-17 00:00:00', ''),
(59455614, 14115349, 2, '', '2013-12-21 00:00:00', ''),
(61553162, 14120661, 2, '', '2014-01-28 00:00:00', ''),
(62849229, 14114528, 2, '', '2014-02-18 00:00:00', ''),
(63503971, 14107208, 2, '', '2014-02-27 00:00:00', ''),
(65475835, 14114411, 2, '', '2014-03-30 00:00:00', ''),
(65862678, 14114411, 2, '', '2014-04-05 00:00:00', ''),
(65862681, 14114411, 5, '1717907', '2014-04-05 00:00:00', ''),
(66103718, 17247129, 2, '', '2014-04-09 00:00:00', ''),
(67424992, 14117121, 2, '', '2014-05-01 00:00:00', ''),
(67426891, 14114411, 2, '', '2014-05-02 00:00:00', ''),
(68989850, 14120661, 2, '', '2014-05-28 00:00:00', ''),
(69250996, 14112839, 2, '', '2014-06-02 00:00:00', ''),
(69250997, 14112839, 5, '2893034', '2014-06-02 00:00:00', ''),
(69375175, 14111052, 5, '350040', '2014-06-04 00:00:00', ''),
(69378112, 14111052, 16, '', '2014-06-04 00:00:00', ''),
(71061201, 14114411, 5, '1237290', '2014-07-04 00:00:00', ''),
(71061202, 14114411, 2, '', '2014-07-04 00:00:00', ''),
(72239637, 14120661, 2, '', '2014-07-25 00:00:00', ''),
(74445417, 17473500, 2, '', '2014-09-03 00:00:00', ''),
(74457365, 14111052, 5, '599926', '2014-09-04 00:00:00', ''),
(76151102, 14114411, 2, '', '2014-10-04 00:00:00', ''),
(76907354, 14110148, 2, '', '2014-10-18 00:00:00', ''),
(77934581, 25073496, 2, '', '2014-11-05 00:00:00', ''),
(81164546, 14107208, 5, '2876385', '2015-01-05 00:00:00', ''),
(81678944, 22626273, 2, '', '2015-01-14 00:00:00', ''),
(82065794, 22626273, 2, '', '2015-01-21 00:00:00', ''),
(82066489, 22626273, 2, '', '2015-01-21 00:00:00', ''),
(76666341, 14110532, 2, '', '2014-10-14 00:00:00', ''),
(77052687, 15395445, 2, '', '2014-10-21 00:00:00', ''),
(77186191, 14974123, 2, '', '2014-10-23 00:00:00', ''),
(77694372, 14109796, 2, '', '2014-11-01 00:00:00', ''),
(77824109, 14115701, 2, '', '2014-11-04 00:00:00', ''),
(78081653, 14107354, 2, '', '2014-11-08 00:00:00', ''),
(78480963, 15395445, 2, '', '2014-11-15 00:00:00', ''),
(78483261, 14116003, 2, '', '2014-11-15 00:00:00', ''),
(79274835, 14112534, 2, '', '2014-11-30 00:00:00', ''),
(79531676, 14112929, 2, '', '2014-12-04 00:00:00', ''),
(79543558, 14116003, 2, '', '2014-12-04 00:00:00', ''),
(80053897, 14109024, 5, '1393289', '2014-12-13 00:00:00', ''),
(80053898, 14109024, 2, '', '2014-12-13 00:00:00', ''),
(80062356, 14974123, 2, '', '2014-12-13 00:00:00', ''),
(80180685, 14109796, 2, '', '2014-12-15 00:00:00', ''),
(80437303, 14109024, 2, '', '2014-12-19 00:00:00', ''),
(81359230, 14109796, 2, '', '2015-01-08 00:00:00', ''),
(81361027, 14109024, 2, '', '2015-01-08 00:00:00', ''),
(82122376, 15395445, 2, '', '2015-01-21 00:00:00', ''),
(82124527, 14115701, 2, '', '2015-01-21 00:00:00', ''),
(82497894, 14117348, 2, '', '2015-01-28 00:00:00', ''),
(82508496, 14115701, 2, '', '2015-01-28 00:00:00', ''),
(82512193, 15395445, 2, '', '2015-01-28 00:00:00', ''),
(39029619, 14115980, 5, '946814', '2013-01-03 00:00:00', ''),
(39863291, 14117114, 2, '', '2013-01-18 00:00:00', ''),
(40844773, 14115980, 2, '', '2013-02-04 00:00:00', ''),
(43016582, 14115701, 5, '935634', '2013-03-12 00:00:00', ''),
(43406143, 14115701, 2, '', '2013-03-18 00:00:00', ''),
(44224967, 14117348, 2, '', '2013-03-31 00:00:00', ''),
(45985586, 14117114, 2, '', '2013-04-29 00:00:00', ''),
(45985590, 14117114, 5, '403872', '2013-04-29 00:00:00', ''),
(46381761, 14752347, 2, '', '2013-05-06 00:00:00', ''),
(48105354, 14974123, 2, '', '2013-06-03 00:00:00', ''),
(49972611, 14752347, 2, '', '2013-07-05 00:00:00', ''),
(50874749, 14116003, 5, '2043536', '2013-07-22 00:00:00', ''),
(51534094, 14116003, 5, '1499576', '2013-08-02 00:00:00', ''),
(52476372, 14974123, 2, '', '2013-08-20 00:00:00', ''),
(53387045, 14117348, 2, '', '2013-09-05 00:00:00', ''),
(55655499, 14117348, 2, '', '2013-10-16 00:00:00', ''),
(56581288, 14109796, 2, '', '2013-11-01 00:00:00', ''),
(56839995, 14112929, 2, '', '2013-11-06 00:00:00', ''),
(56965450, 14115701, 2, '', '2013-11-08 00:00:00', ''),
(57101503, 14116003, 2, '', '2013-11-11 00:00:00', ''),
(57115285, 14110096, 2, '', '2013-11-11 00:00:00', ''),
(57890215, 14110096, 2, '', '2013-11-25 00:00:00', ''),
(58283853, 14116003, 2, '', '2013-12-02 00:00:00', ''),
(58661900, 14109796, 2, '', '2013-12-08 00:00:00', ''),
(59197472, 14110096, 2, '', '2013-12-17 00:00:00', ''),
(59601837, 15395445, 1, '', '2013-12-24 00:00:00', ''),
(59610300, 14115701, 5, '829542', '2013-12-25 00:00:00', ''),
(60655707, 15395445, 2, '', '2014-01-14 00:00:00', ''),
(60932426, 14752347, 2, '', '2014-01-18 00:00:00', ''),
(61056438, 15395445, 2, '', '2014-01-21 00:00:00', ''),
(62738796, 14110096, 2, '', '2014-02-17 00:00:00', ''),
(62861285, 14116003, 5, '1857229', '2014-02-18 00:00:00', ''),
(63665116, 14115701, 2, '', '2014-03-02 00:00:00', ''),
(64173003, 14115701, 5, '1998046', '2014-03-10 00:00:00', ''),
(64437875, 15395445, 2, '', '2014-03-13 00:00:00', ''),
(64563296, 15395445, 2, '', '2014-03-16 00:00:00', ''),
(65228618, 14107354, 2, '', '2014-03-26 00:00:00', ''),
(65750745, 14119277, 2, '', '2014-04-03 00:00:00', ''),
(66013198, 15395445, 2, '', '2014-04-08 00:00:00', ''),
(66686050, 15395445, 2, '', '2014-04-19 00:00:00', ''),
(67080502, 14974123, 2, '', '2014-04-25 00:00:00', ''),
(67345779, 15395445, 2, '', '2014-04-30 00:00:00', ''),
(67738397, 15395445, 2, '', '2014-05-07 00:00:00', ''),
(68244661, 14115701, 2, '', '2014-05-15 00:00:00', ''),
(68881477, 14115701, 2, '', '2014-05-27 00:00:00', ''),
(69547719, 14110096, 2, '', '2014-06-07 00:00:00', ''),
(69676350, 14115944, 2, '', '2014-06-10 00:00:00', ''),
(69813967, 14752347, 2, '', '2014-06-12 00:00:00', ''),
(70455422, 14110096, 2, '', '2014-06-24 00:00:00', ''),
(70708528, 14109796, 2, '', '2014-06-28 00:00:00', ''),
(71488111, 15395445, 2, '', '2014-07-12 00:00:00', ''),
(71494415, 15395445, 2, '', '2014-07-12 00:00:00', ''),
(71495203, 14974123, 2, '', '2014-07-12 00:00:00', ''),
(71498940, 14110096, 2, '', '2014-07-12 00:00:00', ''),
(71501348, 15395445, 2, '', '2014-07-12 00:00:00', ''),
(72131594, 15395445, 2, '', '2014-07-23 00:00:00', ''),
(72254841, 14115701, 2, '', '2014-07-25 00:00:00', ''),
(72262798, 14117114, 2, '', '2014-07-25 00:00:00', ''),
(72262803, 14117114, 5, '2758139', '2014-07-25 00:00:00', ''),
(73835370, 14109024, 5, '1911722', '2014-08-23 00:00:00', ''),
(74091338, 14115701, 2, '', '2014-08-28 00:00:00', ''),
(75123521, 14974123, 2, '', '2014-09-16 00:00:00', ''),
(76028920, 14115701, 2, '', '2014-10-02 00:00:00', ''),
(76032139, 14117114, 2, '', '2014-10-02 00:00:00', ''),
(76036347, 14115701, 5, '300285', '2014-10-02 00:00:00', ''),
(76289335, 15395445, 2, '', '2014-10-07 00:00:00', ''),
(76807643, 14115701, 2, '', '2014-10-16 00:00:00', ''),
(77704387, 15395445, 2, '', '2014-11-02 00:00:00', ''),
(78462891, 15395445, 2, '', '2014-11-14 00:00:00', ''),
(78463132, 14109796, 2, '', '2014-11-14 00:00:00', ''),
(78601983, 14109024, 5, '2709868', '2014-11-18 00:00:00', ''),
(79394814, 15395445, 2, '', '2014-12-02 00:00:00', ''),
(79912510, 14109796, 2, '', '2014-12-11 00:00:00', ''),
(80425976, 15395445, 2, '', '2014-12-19 00:00:00', ''),
(80565490, 14109024, 2, '', '2014-12-22 00:00:00', ''),
(80926539, 14115944, 2, '', '2014-12-30 00:00:00', ''),
(81324988, 14974123, 2, '', '2015-01-08 00:00:00', ''),
(82360075, 15395445, 2, '', '2015-01-26 00:00:00', ''),
(82601257, 14110096, 2, '', '2015-01-29 00:00:00', ''),
(39012804, 14110532, 2, '', '2013-01-03 00:00:00', ''),
(39187255, 14112534, 2, '', '2013-01-06 00:00:00', ''),
(40171676, 14109796, 2, '', '2013-01-23 00:00:00', ''),
(40463642, 14116003, 5, '1086137', '2013-01-29 00:00:00', ''),
(44074742, 15395445, 2, '', '2013-03-28 00:00:00', ''),
(46493635, 15395445, 2, '', '2013-05-07 00:00:00', ''),
(46635151, 14974123, 2, '', '2013-05-09 00:00:00', ''),
(47585407, 14109024, 5, '1006632', '2013-05-25 00:00:00', ''),
(49416480, 14110532, 2, '', '2013-06-25 00:00:00', ''),
(49416482, 14110532, 5, '96583', '2013-06-25 00:00:00', ''),
(50093553, 14115701, 2, '', '2013-07-08 00:00:00', ''),
(50098834, 14110096, 2, '', '2013-07-08 00:00:00', ''),
(51731751, 14110096, 2, '', '2013-08-06 00:00:00', ''),
(52000384, 14115980, 2, '', '2013-08-11 00:00:00', ''),
(52851687, 14115701, 5, '991863', '2013-08-26 00:00:00', ''),
(53498832, 14115701, 5, '1074889', '2013-09-07 00:00:00', ''),
(53901153, 14116003, 5, '1306067', '2013-09-14 00:00:00', ''),
(54043686, 14974123, 2, '', '2013-09-17 00:00:00', ''),
(54609970, 14109024, 2, '', '2013-09-27 00:00:00', ''),
(55035434, 14115980, 2, '', '2013-10-05 00:00:00', ''),
(55284123, 14115701, 5, '2048861', '2013-10-09 00:00:00', ''),
(55416476, 14109796, 2, '', '2013-10-11 00:00:00', ''),
(56094505, 14115701, 2, '', '2013-10-24 00:00:00', ''),
(56817222, 14109024, 2, '', '2013-11-06 00:00:00', ''),
(58189164, 14109796, 2, '', '2013-11-29 00:00:00', ''),
(58309836, 14115701, 2, '', '2013-12-02 00:00:00', ''),
(58310189, 14115701, 2, '', '2013-12-02 00:00:00', ''),
(58715112, 14115944, 2, '', '2013-12-09 00:00:00', ''),
(58719346, 14115701, 2, '', '2013-12-09 00:00:00', ''),
(58723198, 14974123, 2, '', '2013-12-09 00:00:00', ''),
(59526817, 14115944, 2, '', '2013-12-23 00:00:00', ''),
(60768166, 14752347, 2, '', '2014-01-16 00:00:00', ''),
(60897824, 14110096, 2, '', '2014-01-17 00:00:00', ''),
(61035397, 15395445, 2, '', '2014-01-20 00:00:00', ''),
(61037106, 14109796, 2, '', '2014-01-20 00:00:00', ''),
(62407116, 14109796, 2, '', '2014-02-11 00:00:00', ''),
(63322496, 14119277, 2, '', '2014-02-25 00:00:00', ''),
(63614187, 14117114, 2, '', '2014-03-01 00:00:00', ''),
(63810107, 14116003, 2, '', '2014-03-04 00:00:00', ''),
(63815711, 14109796, 2, '', '2014-03-04 00:00:00', ''),
(64348874, 14109796, 2, '', '2014-03-12 00:00:00', ''),
(64747448, 14116882, 2, '', '2014-03-19 00:00:00', ''),
(64747449, 14117348, 2, '', '2014-03-19 00:00:00', ''),
(65143712, 14110096, 2, '', '2014-03-25 00:00:00', ''),
(67490015, 14109796, 2, '', '2014-05-03 00:00:00', ''),
(68297384, 14115701, 2, '', '2014-05-16 00:00:00', ''),
(68426916, 14116003, 5, '130988', '2014-05-19 00:00:00', ''),
(68682263, 15395445, 2, '', '2014-05-23 00:00:00', ''),
(69206059, 14116003, 2, '', '2014-06-02 00:00:00', ''),
(69339413, 14109024, 2, '', '2014-06-04 00:00:00', ''),
(70142176, 15395445, 2, '', '2014-06-18 00:00:00', ''),
(70419374, 15395445, 2, '', '2014-06-23 00:00:00', ''),
(70681606, 14116003, 2, '', '2014-06-27 00:00:00', ''),
(70839515, 14109079, 2, '', '2014-07-01 00:00:00', ''),
(72129191, 14114729, 2, '', '2014-07-23 00:00:00', ''),
(72136870, 20159814, 2, '', '2014-07-23 00:00:00', ''),
(72399110, 14113461, 2, '', '2014-07-29 00:00:00', ''),
(72399111, 14113427, 2, '', '2014-07-29 00:00:00', ''),
(72399112, 14113427, 5, '146070', '2014-07-29 00:00:00', ''),
(72516808, 14113427, 2, '', '2014-07-30 00:00:00', ''),
(73306213, 14113057, 2, '', '2014-08-13 00:00:00', ''),
(73314662, 14114729, 2, '', '2014-08-14 00:00:00', ''),
(73706208, 18439832, 2, '', '2014-08-21 00:00:00', ''),
(74081514, 14113461, 2, '', '2014-08-28 00:00:00', ''),
(74491131, 14162208, 2, '', '2014-09-04 00:00:00', ''),
(74991798, 14108694, 2, '', '2014-09-13 00:00:00', ''),
(74991800, 14107979, 2, '', '2014-09-13 00:00:00', ''),
(75380966, 14113559, 2, '', '2014-09-20 00:00:00', ''),
(75508236, 18439832, 2, '', '2014-09-23 00:00:00', ''),
(76031468, 20159814, 2, '', '2014-10-02 00:00:00', ''),
(76032132, 14154890, 2, '', '2014-10-02 00:00:00', ''),
(76288272, 14107928, 2, '', '2014-10-07 00:00:00', ''),
(77339001, 14113427, 2, '', '2014-10-26 00:00:00', ''),
(77704389, 14113427, 2, '', '2014-11-02 00:00:00', ''),
(78474944, 14115314, 2, '', '2014-11-15 00:00:00', ''),
(78601986, 18439832, 2, '', '2014-11-18 00:00:00', ''),
(79384964, 14113057, 5, '1537828', '2014-12-02 00:00:00', ''),
(79389999, 14113427, 2, '', '2014-12-02 00:00:00', ''),
(79394812, 14113461, 2, '', '2014-12-02 00:00:00', ''),
(79781249, 14113057, 2, '', '2014-12-09 00:00:00', ''),
(80294295, 14108694, 2, '', '2014-12-17 00:00:00', ''),
(80565489, 18439832, 2, '', '2014-12-22 00:00:00', ''),
(81069983, 14113461, 2, '', '2015-01-03 00:00:00', ''),
(81186385, 14113461, 2, '', '2015-01-06 00:00:00', ''),
(81194709, 14113427, 5, '596407', '2015-01-06 00:00:00', ''),
(82238468, 14107979, 5, '3405219', '2015-01-23 00:00:00', ''),
(82475796, 20159814, 2, '', '2015-01-27 00:00:00', ''),
(39010486, 14120711, 2, '', '2013-01-03 00:00:00', ''),
(39010487, 14120711, 5, '689077', '2013-01-03 00:00:00', ''),
(39012881, 14120711, 2, '', '2013-01-03 00:00:00', ''),
(39322374, 14108430, 2, '', '2013-01-08 00:00:00', ''),
(39881474, 14108694, 2, '', '2013-01-18 00:00:00', ''),
(39881478, 14107979, 5, '744015', '2013-01-18 00:00:00', ''),
(41862694, 14113559, 5, '91945', '2013-02-21 00:00:00', ''),
(44789159, 14113461, 2, '', '2013-04-09 00:00:00', ''),
(45676447, 14113461, 2, '', '2013-04-23 00:00:00', ''),
(47174438, 14113559, 2, '', '2013-05-19 00:00:00', ''),
(47582503, 14113559, 2, '', '2013-05-25 00:00:00', ''),
(49279808, 14113427, 5, '321896', '2013-06-23 00:00:00', ''),
(49950643, 14113559, 2, '', '2013-07-05 00:00:00', ''),
(50625543, 14113461, 2, '', '2013-07-17 00:00:00', ''),
(51039482, 14113461, 2, '', '2013-07-25 00:00:00', '');
INSERT INTO `Votes` (`Id`, `PostId`, `VoteTypeId`, `UserId`, `CreationDate`, `BountyAmount`) VALUES
(51039484, 14113427, 2, '', '2013-07-25 00:00:00', ''),
(51177705, 14114729, 2, '', '2013-07-27 00:00:00', ''),
(51868482, 14116014, 2, '', '2013-08-08 00:00:00', ''),
(51998974, 14154890, 3, '', '2013-08-11 00:00:00', ''),
(52133290, 14115314, 2, '', '2013-08-13 00:00:00', ''),
(52590193, 14113461, 2, '', '2013-08-21 00:00:00', ''),
(53104809, 14113427, 2, '', '2013-08-30 00:00:00', ''),
(53369418, 14113427, 5, '2296043', '2013-09-05 00:00:00', ''),
(53496729, 14109079, 2, '', '2013-09-07 00:00:00', ''),
(53504686, 14111572, 2, '', '2013-09-07 00:00:00', ''),
(53901372, 14113461, 2, '', '2013-09-14 00:00:00', ''),
(54742046, 14113461, 2, '', '2013-09-30 00:00:00', ''),
(54751188, 14108694, 16, '', '2013-09-30 00:00:00', ''),
(54752637, 14107979, 5, '2282538', '2013-09-30 00:00:00', ''),
(55423442, 14113461, 2, '', '2013-10-11 00:00:00', ''),
(55427850, 14113461, 2, '', '2013-10-11 00:00:00', ''),
(55562201, 14113461, 2, '', '2013-10-15 00:00:00', ''),
(55685217, 14113461, 2, '', '2013-10-16 00:00:00', ''),
(56412566, 14113461, 2, '', '2013-10-29 00:00:00', ''),
(56554929, 14113461, 2, '', '2013-10-31 00:00:00', ''),
(56570515, 14113461, 2, '', '2013-11-01 00:00:00', ''),
(57479601, 14113461, 2, '', '2013-11-18 00:00:00', ''),
(57901901, 14107979, 5, '924812', '2013-11-25 00:00:00', ''),
(57906933, 14113427, 2, '', '2013-11-25 00:00:00', ''),
(57906940, 14113461, 2, '', '2013-11-25 00:00:00', ''),
(59111638, 14154890, 2, '', '2013-12-16 00:00:00', ''),
(59515983, 14113691, 2, '', '2013-12-23 00:00:00', ''),
(59654972, 14114729, 2, '', '2013-12-26 00:00:00', ''),
(59654975, 14114729, 5, '2183102', '2013-12-26 00:00:00', ''),
(61036305, 14113461, 2, '', '2014-01-20 00:00:00', ''),
(61036315, 14113427, 2, '', '2014-01-20 00:00:00', ''),
(61359605, 14113461, 2, '', '2014-01-25 00:00:00', ''),
(61359616, 14113427, 5, '1957448', '2014-01-25 00:00:00', ''),
(62403581, 14109079, 2, '', '2014-02-11 00:00:00', ''),
(62539951, 14113461, 2, '', '2014-02-13 00:00:00', ''),
(63463876, 14113427, 5, '1560689', '2014-02-27 00:00:00', ''),
(63614186, 14154890, 2, '', '2014-03-01 00:00:00', ''),
(64351232, 14113461, 2, '', '2014-03-12 00:00:00', ''),
(64353180, 14115314, 2, '', '2014-03-12 00:00:00', ''),
(65992488, 14113461, 2, '', '2014-04-08 00:00:00', ''),
(66566271, 14113461, 2, '', '2014-04-17 00:00:00', ''),
(66690175, 14113427, 2, '', '2014-04-19 00:00:00', ''),
(66694096, 14113057, 2, '', '2014-04-19 00:00:00', ''),
(66694097, 14113057, 5, '2524631', '2014-04-19 00:00:00', ''),
(66698205, 14113461, 2, '', '2014-04-19 00:00:00', ''),
(67218291, 14113427, 5, '275133', '2014-04-28 00:00:00', ''),
(67228003, 14113461, 2, '', '2014-04-29 00:00:00', ''),
(68152860, 14113461, 2, '', '2014-05-14 00:00:00', ''),
(68152865, 14113427, 2, '', '2014-05-14 00:00:00', ''),
(68152867, 14113427, 5, '646198', '2014-05-14 00:00:00', ''),
(68933098, 14115314, 5, '2124430', '2014-05-28 00:00:00', ''),
(69326480, 14113427, 2, '', '2014-06-04 00:00:00', ''),
(69339411, 18439832, 2, '', '2014-06-04 00:00:00', ''),
(69456113, 20159814, 2, '', '2014-06-05 00:00:00', ''),
(69464125, 17522369, 2, '', '2014-06-05 00:00:00', ''),
(69464133, 20159814, 2, '', '2014-06-05 00:00:00', ''),
(69600664, 14115129, 2, '', '2014-06-09 00:00:00', ''),
(69719313, 14113427, 5, '732200', '2014-06-10 00:00:00', ''),
(69727199, 14113461, 2, '', '2014-06-11 00:00:00', ''),
(69997613, 14113461, 2, '', '2014-06-16 00:00:00', ''),
(70807435, 14113461, 2, '', '2014-06-30 00:00:00', ''),
(70807437, 14113427, 2, '', '2014-06-30 00:00:00', ''),
(70807446, 14113427, 5, '461294', '2014-06-30 00:00:00', ''),
(71088934, 14113427, 2, '', '2014-07-05 00:00:00', ''),
(71469840, 14113427, 2, '', '2014-07-11 00:00:00', ''),
(71889415, 14114729, 2, '', '2014-07-19 00:00:00', ''),
(72440352, 14107928, 2, '', '2014-07-29 00:00:00', ''),
(72852173, 20725647, 2, '', '2014-08-06 00:00:00', ''),
(73387047, 14107979, 5, '1560689', '2014-08-15 00:00:00', ''),
(74474604, 14113057, 2, '', '2014-09-04 00:00:00', ''),
(76099222, 14113461, 2, '', '2014-10-03 00:00:00', ''),
(76482968, 17522369, 2, '', '2014-10-10 00:00:00', ''),
(76482973, 20159814, 2, '', '2014-10-10 00:00:00', ''),
(76894667, 14113427, 5, '2269481', '2014-10-17 00:00:00', ''),
(77018551, 14111572, 2, '', '2014-10-20 00:00:00', ''),
(77154158, 14154890, 2, '', '2014-10-22 00:00:00', ''),
(77155811, 14107826, 2, '', '2014-10-22 00:00:00', ''),
(77985556, 14111021, 2, '', '2014-11-06 00:00:00', ''),
(78240276, 14107928, 2, '', '2014-11-11 00:00:00', ''),
(78794366, 18439832, 2, '', '2014-11-20 00:00:00', ''),
(79056266, 14113461, 2, '', '2014-11-25 00:00:00', ''),
(79605187, 14115314, 2, '', '2014-12-05 00:00:00', ''),
(80801428, 14113461, 2, '', '2014-12-28 00:00:00', ''),
(81603352, 14113427, 2, '', '2015-01-13 00:00:00', ''),
(82285642, 14116014, 2, '', '2015-01-24 00:00:00', ''),
(82404171, 14113427, 2, '', '2015-01-26 00:00:00', ''),
(39003020, 14114480, 2, '', '2013-01-03 00:00:00', ''),
(39127811, 14154890, 2, '', '2013-01-05 00:00:00', ''),
(39135061, 14115129, 2, '', '2013-01-05 00:00:00', ''),
(39975374, 14110132, 1, '', '2013-01-20 00:00:00', ''),
(40129259, 14113461, 2, '', '2013-01-23 00:00:00', ''),
(40257204, 14113461, 2, '', '2013-01-24 00:00:00', ''),
(41777080, 14974234, 1, '', '2013-02-20 00:00:00', ''),
(41777083, 14974234, 2, '', '2013-02-20 00:00:00', ''),
(42469191, 14109079, 2, '', '2013-03-04 00:00:00', ''),
(42618608, 14108430, 2, '', '2013-03-06 00:00:00', ''),
(43550836, 14154890, 2, '', '2013-03-20 00:00:00', ''),
(44378750, 14113461, 2, '', '2013-04-03 00:00:00', ''),
(45998155, 14108694, 2, '', '2013-04-29 00:00:00', ''),
(46262507, 14154890, 2, '', '2013-05-03 00:00:00', ''),
(46938947, 14113461, 2, '', '2013-05-15 00:00:00', ''),
(47210146, 14113461, 2, '', '2013-05-20 00:00:00', ''),
(47615470, 14113427, 2, '', '2013-05-26 00:00:00', ''),
(47615471, 14113461, 2, '', '2013-05-26 00:00:00', ''),
(48128367, 14113427, 2, '', '2013-06-04 00:00:00', ''),
(48128372, 14113461, 2, '', '2013-06-04 00:00:00', ''),
(65228621, 14107418, 2, '', '2014-03-26 00:00:00', ''),
(66021323, 14114738, 2, '', '2014-04-08 00:00:00', ''),
(66554970, 14120721, 2, '', '2014-04-16 00:00:00', ''),
(68238504, 14120721, 2, '', '2014-05-15 00:00:00', ''),
(70327184, 14114419, 2, '', '2014-06-21 00:00:00', ''),
(71994815, 14114419, 2, '', '2014-07-21 00:00:00', ''),
(73308114, 14120721, 2, '', '2014-08-13 00:00:00', ''),
(78865112, 14114419, 2, '', '2014-11-22 00:00:00', ''),
(79392916, 14114738, 2, '', '2014-12-02 00:00:00', ''),
(79397760, 14114419, 2, '', '2014-12-02 00:00:00', ''),
(79645974, 14114419, 2, '', '2014-12-06 00:00:00', ''),
(80433358, 14114419, 2, '', '2014-12-19 00:00:00', ''),
(81838988, 14114419, 2, '', '2015-01-16 00:00:00', ''),
(82363011, 14120721, 2, '', '2015-01-26 00:00:00', ''),
(45807895, 14114738, 5, '752976', '2013-04-25 00:00:00', ''),
(45807896, 14114738, 2, '', '2013-04-25 00:00:00', ''),
(46905336, 14114419, 2, '', '2013-05-14 00:00:00', ''),
(49027598, 14280543, 2, '', '2013-06-19 00:00:00', ''),
(49540087, 16198496, 2, '', '2013-06-27 00:00:00', ''),
(49813933, 14280543, 2, '', '2013-07-02 00:00:00', ''),
(50479798, 14114738, 2, '', '2013-07-15 00:00:00', ''),
(56950259, 14112515, 5, '2416228', '2013-11-08 00:00:00', ''),
(57229326, 14114419, 2, '', '2013-11-13 00:00:00', ''),
(57360010, 16198496, 2, '', '2013-11-15 00:00:00', ''),
(58043909, 14114419, 2, '', '2013-11-27 00:00:00', ''),
(61358267, 14114419, 2, '', '2014-01-25 00:00:00', ''),
(61745085, 14114419, 2, '', '2014-01-31 00:00:00', ''),
(62146089, 14114419, 2, '', '2014-02-06 00:00:00', ''),
(63614183, 14280543, 2, '', '2014-03-01 00:00:00', ''),
(64095053, 14114419, 2, '', '2014-03-08 00:00:00', ''),
(64483072, 14114419, 2, '', '2014-03-14 00:00:00', ''),
(64496744, 14120721, 2, '', '2014-03-14 00:00:00', ''),
(66565129, 14120721, 2, '', '2014-04-17 00:00:00', ''),
(67362134, 14114419, 2, '', '2014-04-30 00:00:00', ''),
(67769789, 14120721, 2, '', '2014-05-07 00:00:00', ''),
(72569888, 14114419, 2, '', '2014-07-31 00:00:00', ''),
(72710774, 14116460, 2, '', '2014-08-03 00:00:00', ''),
(73113965, 14114419, 2, '', '2014-08-11 00:00:00', ''),
(73118641, 14114419, 2, '', '2014-08-11 00:00:00', ''),
(73784690, 14114419, 2, '', '2014-08-22 00:00:00', ''),
(74607418, 14114419, 2, '', '2014-09-06 00:00:00', ''),
(77153254, 14114419, 2, '', '2014-10-22 00:00:00', ''),
(79464461, 14114419, 2, '', '2014-12-03 00:00:00', ''),
(79870089, 14114419, 2, '', '2014-12-10 00:00:00', ''),
(80660190, 14114419, 2, '', '2014-12-24 00:00:00', ''),
(81468886, 19931428, 2, '', '2015-01-10 00:00:00', ''),
(81476593, 14120721, 2, '', '2015-01-10 00:00:00', ''),
(81598250, 14114419, 2, '', '2015-01-13 00:00:00', ''),
(81598659, 14114419, 2, '', '2015-01-13 00:00:00', ''),
(38988073, 14120721, 2, '', '2013-01-02 00:00:00', ''),
(39001323, 14112515, 2, '', '2013-01-03 00:00:00', ''),
(39266886, 14112515, 2, '', '2013-01-08 00:00:00', ''),
(39708782, 14280543, 2, '', '2013-01-15 00:00:00', ''),
(40944759, 14280543, 2, '', '2013-02-06 00:00:00', ''),
(41360850, 14280543, 2, '', '2013-02-13 00:00:00', ''),
(48132521, 14280543, 2, '', '2013-06-04 00:00:00', ''),
(49073454, 16198496, 2, '', '2013-06-19 00:00:00', ''),
(52006296, 16198496, 2, '', '2013-08-11 00:00:00', ''),
(52258852, 14114419, 2, '', '2013-08-15 00:00:00', ''),
(53191460, 14114419, 2, '', '2013-09-02 00:00:00', ''),
(56473448, 14280543, 2, '', '2013-10-30 00:00:00', ''),
(57667278, 14280543, 2, '', '2013-11-20 00:00:00', ''),
(60171731, 14114419, 2, '', '2014-01-06 00:00:00', ''),
(60961171, 19931428, 2, '', '2014-01-19 00:00:00', ''),
(61215509, 14114419, 2, '', '2014-01-23 00:00:00', ''),
(61861595, 14120721, 2, '', '2014-02-03 00:00:00', ''),
(62760173, 14114419, 2, '', '2014-02-17 00:00:00', ''),
(64974979, 14120721, 2, '', '2014-03-22 00:00:00', ''),
(65773811, 14114419, 2, '', '2014-04-03 00:00:00', ''),
(67841799, 14114419, 2, '', '2014-05-08 00:00:00', ''),
(72552925, 14120721, 2, '', '2014-07-31 00:00:00', ''),
(72560977, 14114419, 2, '', '2014-07-31 00:00:00', ''),
(73472154, 14107418, 2, '', '2014-08-17 00:00:00', ''),
(77256976, 16198496, 2, '', '2014-10-24 00:00:00', ''),
(78155833, 14114419, 2, '', '2014-11-10 00:00:00', ''),
(79197960, 14114419, 2, '', '2014-11-28 00:00:00', ''),
(79441699, 14114419, 2, '', '2014-12-03 00:00:00', ''),
(80094897, 14114419, 2, '', '2014-12-14 00:00:00', ''),
(80475004, 14114419, 2, '', '2014-12-20 00:00:00', ''),
(81385297, 14114419, 2, '', '2015-01-08 00:00:00', ''),
(81779499, 16198496, 2, '', '2015-01-15 00:00:00', ''),
(38958172, 14112515, 2, '', '2013-01-02 00:00:00', ''),
(38959685, 14115406, 2, '', '2013-01-02 00:00:00', ''),
(38959912, 14120721, 2, '', '2013-01-02 00:00:00', ''),
(38959922, 14120721, 2, '', '2013-01-02 00:00:00', ''),
(38960439, 14120721, 1, '', '2013-01-02 00:00:00', ''),
(38961170, 14120721, 2, '', '2013-01-02 00:00:00', ''),
(38961363, 14120721, 2, '', '2013-01-02 00:00:00', ''),
(38961854, 14112515, 2, '', '2013-01-02 00:00:00', ''),
(38962602, 14112515, 2, '', '2013-01-02 00:00:00', ''),
(38966060, 14112515, 2, '', '2013-01-02 00:00:00', ''),
(38966097, 14112515, 2, '', '2013-01-02 00:00:00', ''),
(38968952, 14112515, 3, '', '2013-01-02 00:00:00', ''),
(39781646, 14112515, 2, '', '2013-01-16 00:00:00', ''),
(40865492, 14280543, 2, '', '2013-02-05 00:00:00', ''),
(42488516, 14280543, 2, '', '2013-03-04 00:00:00', ''),
(42910885, 14112515, 2, '', '2013-03-10 00:00:00', ''),
(43040550, 14280543, 2, '', '2013-03-12 00:00:00', ''),
(43303307, 14114738, 2, '', '2013-03-16 00:00:00', ''),
(45746548, 14114738, 2, '', '2013-04-24 00:00:00', ''),
(48428297, 14120721, 2, '', '2013-06-09 00:00:00', ''),
(48822047, 14114419, 2, '', '2013-06-15 00:00:00', ''),
(49226349, 14111679, 2, '', '2013-06-22 00:00:00', ''),
(49350718, 14114738, 2, '', '2013-06-24 00:00:00', ''),
(52699790, 16198496, 2, '', '2013-08-23 00:00:00', ''),
(52700791, 14114419, 2, '', '2013-08-23 00:00:00', ''),
(53481850, 14114419, 2, '', '2013-09-06 00:00:00', ''),
(55267941, 14114419, 2, '', '2013-10-09 00:00:00', ''),
(55804546, 14114419, 2, '', '2013-10-18 00:00:00', ''),
(56854714, 14114419, 2, '', '2013-11-06 00:00:00', ''),
(57262636, 14114419, 2, '', '2013-11-13 00:00:00', ''),
(57386683, 14114419, 2, '', '2013-11-15 00:00:00', ''),
(57513493, 14112515, 5, '1773265', '2013-11-18 00:00:00', ''),
(57513494, 14112515, 2, '', '2013-11-18 00:00:00', ''),
(58167777, 14114419, 2, '', '2013-11-29 00:00:00', ''),
(59886315, 16198496, 2, '', '2013-12-31 00:00:00', ''),
(60804305, 14114419, 2, '', '2014-01-16 00:00:00', ''),
(61195122, 14114419, 2, '', '2014-01-22 00:00:00', ''),
(62530690, 14114419, 2, '', '2014-02-13 00:00:00', ''),
(62653483, 14114419, 2, '', '2014-02-14 00:00:00', ''),
(65129094, 14114419, 2, '', '2014-03-25 00:00:00', ''),
(65265990, 14280543, 2, '', '2014-03-27 00:00:00', ''),
(66710040, 14114419, 2, '', '2014-04-19 00:00:00', ''),
(67875467, 14114419, 2, '', '2014-05-09 00:00:00', ''),
(69447898, 14114419, 2, '', '2014-06-05 00:00:00', ''),
(69837742, 16198496, 2, '', '2014-06-12 00:00:00', ''),
(70486541, 14114419, 2, '', '2014-06-24 00:00:00', ''),
(70615978, 14114419, 2, '', '2014-06-26 00:00:00', ''),
(70861542, 14120721, 2, '', '2014-07-01 00:00:00', ''),
(72408189, 14114419, 2, '', '2014-07-29 00:00:00', ''),
(72802904, 14114419, 2, '', '2014-08-05 00:00:00', ''),
(76378713, 14120721, 2, '', '2014-10-08 00:00:00', ''),
(79974848, 14114419, 2, '', '2014-12-11 00:00:00', ''),
(80621759, 24711864, 2, '', '2014-12-23 00:00:00', ''),
(80630899, 14114419, 2, '', '2014-12-23 00:00:00', ''),
(80755815, 14114419, 2, '', '2014-12-26 00:00:00', ''),
(81148037, 14120721, 2, '', '2015-01-05 00:00:00', ''),
(38937506, 14114419, 2, '', '2013-01-01 00:00:00', ''),
(38937529, 14114419, 2, '', '2013-01-01 00:00:00', ''),
(38937563, 14114419, 16, '', '2013-01-01 00:00:00', ''),
(38937579, 14114419, 2, '', '2013-01-01 00:00:00', ''),
(38937582, 14114419, 2, '', '2013-01-01 00:00:00', ''),
(38937838, 14114419, 2, '', '2013-01-01 00:00:00', ''),
(38937874, 14114419, 1, '', '2013-01-01 00:00:00', ''),
(38938073, 14112515, 3, '', '2013-01-01 00:00:00', ''),
(38938849, 14112515, 2, '', '2013-01-01 00:00:00', ''),
(38940144, 14112515, 2, '', '2013-01-01 00:00:00', ''),
(38942477, 14115406, 2, '', '2013-01-02 00:00:00', ''),
(38946555, 14112515, 3, '', '2013-01-02 00:00:00', ''),
(38947608, 14112515, 2, '', '2013-01-02 00:00:00', ''),
(38949082, 14112515, 2, '', '2013-01-02 00:00:00', ''),
(38949483, 14112515, 5, '1564528', '2013-01-02 00:00:00', ''),
(38953034, 14114738, 2, '', '2013-01-02 00:00:00', ''),
(39764277, 14112515, 2, '', '2013-01-16 00:00:00', ''),
(39774521, 14112515, 2, '', '2013-01-16 00:00:00', ''),
(47524768, 16198496, 2, '', '2013-05-24 00:00:00', ''),
(71469837, 15395445, 2, '', '2014-07-11 00:00:00', ''),
(71482604, 15395445, 2, '', '2014-07-12 00:00:00', ''),
(71627207, 14115701, 5, '863637', '2014-07-15 00:00:00', ''),
(72710339, 14115701, 2, '', '2014-08-03 00:00:00', ''),
(72710340, 14115701, 5, '1253826', '2014-08-03 00:00:00', ''),
(72974421, 14115944, 2, '', '2014-08-07 00:00:00', ''),
(72987824, 15395445, 2, '', '2014-08-07 00:00:00', ''),
(72988297, 14115701, 5, '2049369', '2014-08-07 00:00:00', ''),
(73907579, 14119277, 2, '', '2014-08-25 00:00:00', ''),
(74472094, 14974123, 2, '', '2014-09-04 00:00:00', ''),
(74621380, 14115701, 2, '', '2014-09-07 00:00:00', ''),
(74621381, 14115701, 5, '895174', '2014-09-07 00:00:00', ''),
(74739329, 17449069, 2, '', '2014-09-09 00:00:00', ''),
(75533021, 14115701, 5, '1814717', '2014-09-23 00:00:00', ''),
(75666215, 15395445, 2, '', '2014-09-25 00:00:00', ''),
(76089503, 14109796, 2, '', '2014-10-03 00:00:00', ''),
(77302087, 14109796, 2, '', '2014-10-25 00:00:00', ''),
(77571774, 15395445, 2, '', '2014-10-30 00:00:00', ''),
(78788837, 14974123, 2, '', '2014-11-20 00:00:00', ''),
(79049014, 14974123, 2, '', '2014-11-25 00:00:00', ''),
(79057585, 14109796, 2, '', '2014-11-25 00:00:00', ''),
(79176146, 14115701, 2, '', '2014-11-27 00:00:00', ''),
(79992823, 15395445, 2, '', '2014-12-12 00:00:00', ''),
(80656984, 14974123, 2, '', '2014-12-24 00:00:00', ''),
(80953065, 14115701, 2, '', '2014-12-31 00:00:00', ''),
(80953067, 14115701, 5, '904617', '2014-12-31 00:00:00', ''),
(81603346, 15395445, 2, '', '2015-01-13 00:00:00', ''),
(81605450, 15395445, 2, '', '2015-01-13 00:00:00', ''),
(82143052, 14119277, 3, '', '2015-01-22 00:00:00', ''),
(82401486, 14109796, 2, '', '2015-01-26 00:00:00', ''),
(82404168, 15395445, 2, '', '2015-01-26 00:00:00', ''),
(82408314, 15395445, 2, '', '2015-01-27 00:00:00', ''),
(38988357, 14110532, 2, '', '2013-01-02 00:00:00', ''),
(38994546, 14110532, 2, '', '2013-01-02 00:00:00', ''),
(39001350, 14112534, 2, '', '2013-01-03 00:00:00', ''),
(39137595, 14115701, 5, '66629', '2013-01-05 00:00:00', ''),
(39137599, 14115701, 2, '', '2013-01-05 00:00:00', ''),
(39975732, 14116003, 5, '376839', '2013-01-20 00:00:00', ''),
(39982063, 14116003, 2, '', '2013-01-20 00:00:00', ''),
(39982681, 14116003, 2, '', '2013-01-20 00:00:00', ''),
(40933847, 14117114, 2, '', '2013-02-05 00:00:00', ''),
(43420144, 14752347, 2, '', '2013-03-18 00:00:00', ''),
(43962910, 14974123, 2, '', '2013-03-26 00:00:00', ''),
(46944821, 14116882, 5, '441517', '2013-05-15 00:00:00', ''),
(46944822, 14116882, 2, '', '2013-05-15 00:00:00', ''),
(46944826, 14117348, 2, '', '2013-05-15 00:00:00', ''),
(47754119, 14110096, 2, '', '2013-05-28 00:00:00', ''),
(48258995, 14117114, 2, '', '2013-06-06 00:00:00', ''),
(49589703, 14974123, 2, '', '2013-06-28 00:00:00', ''),
(50011605, 14116003, 5, '596238', '2013-07-06 00:00:00', ''),
(50418286, 14110096, 2, '', '2013-07-14 00:00:00', ''),
(51075931, 14117348, 2, '', '2013-07-25 00:00:00', ''),
(51075936, 14116882, 2, '', '2013-07-25 00:00:00', ''),
(52927674, 14109796, 2, '', '2013-08-28 00:00:00', ''),
(53190322, 14116003, 5, '1288118', '2013-09-02 00:00:00', ''),
(53728101, 14109796, 2, '', '2013-09-11 00:00:00', ''),
(54262118, 14115701, 2, '', '2013-09-21 00:00:00', ''),
(54522711, 14117114, 2, '', '2013-09-26 00:00:00', ''),
(54650695, 14115701, 2, '', '2013-09-28 00:00:00', ''),
(55696925, 14752347, 2, '', '2013-10-17 00:00:00', ''),
(56078614, 14117348, 2, '', '2013-10-23 00:00:00', ''),
(56483828, 14115701, 2, '', '2013-10-30 00:00:00', ''),
(56739036, 14116003, 2, '', '2013-11-05 00:00:00', ''),
(57144113, 14109796, 2, '', '2013-11-12 00:00:00', ''),
(57667284, 14117114, 2, '', '2013-11-20 00:00:00', ''),
(57926083, 14752347, 2, '', '2013-11-25 00:00:00', ''),
(58324220, 15395445, 2, '', '2013-12-02 00:00:00', ''),
(58458386, 14115701, 2, '', '2013-12-04 00:00:00', ''),
(58733221, 15395445, 2, '', '2013-12-09 00:00:00', ''),
(58858827, 14974123, 2, '', '2013-12-11 00:00:00', ''),
(59635012, 15395445, 3, '', '2013-12-25 00:00:00', ''),
(59771208, 14116003, 5, '2666587', '2013-12-29 00:00:00', ''),
(59775801, 15395445, 2, '', '2013-12-29 00:00:00', ''),
(61219547, 15395445, 3, '', '2014-01-23 00:00:00', ''),
(61329739, 14115701, 5, '607569', '2014-01-24 00:00:00', ''),
(61329741, 14115701, 2, '', '2014-01-24 00:00:00', ''),
(62248681, 14752347, 2, '', '2014-02-08 00:00:00', ''),
(63150363, 15395445, 2, '', '2014-02-22 00:00:00', ''),
(63274312, 14115701, 5, '946224', '2014-02-24 00:00:00', ''),
(63274355, 14115701, 2, '', '2014-02-24 00:00:00', ''),
(64191395, 14109796, 2, '', '2014-03-10 00:00:00', ''),
(64591635, 14974123, 2, '', '2014-03-16 00:00:00', ''),
(64594366, 15395445, 2, '', '2014-03-16 00:00:00', ''),
(65110952, 15395445, 2, '', '2014-03-25 00:00:00', ''),
(65119788, 14115701, 2, '', '2014-03-25 00:00:00', ''),
(65370792, 15395445, 2, '', '2014-03-28 00:00:00', ''),
(65375109, 14116003, 2, '', '2014-03-28 00:00:00', ''),
(66397965, 15395445, 2, '', '2014-04-14 00:00:00', ''),
(66399156, 15395445, 2, '', '2014-04-14 00:00:00', ''),
(66532626, 14119277, 2, '', '2014-04-16 00:00:00', ''),
(66802409, 15395445, 2, '', '2014-04-22 00:00:00', ''),
(67195285, 15395445, 2, '', '2014-04-28 00:00:00', ''),
(67320040, 14107354, 2, '', '2014-04-30 00:00:00', ''),
(67449768, 15395445, 2, '', '2014-05-02 00:00:00', ''),
(68107903, 15395445, 2, '', '2014-05-13 00:00:00', ''),
(68903128, 14107354, 2, '', '2014-05-27 00:00:00', ''),
(69295529, 14752347, 2, '', '2014-06-03 00:00:00', ''),
(69431447, 15395445, 2, '', '2014-06-05 00:00:00', ''),
(69696496, 15395445, 2, '', '2014-06-10 00:00:00', ''),
(69829635, 14109796, 2, '', '2014-06-12 00:00:00', ''),
(69956244, 15395445, 2, '', '2014-06-15 00:00:00', ''),
(70105281, 14115701, 2, '', '2014-06-17 00:00:00', ''),
(70108821, 14974123, 2, '', '2014-06-17 00:00:00', ''),
(70884068, 14116003, 2, '', '2014-07-01 00:00:00', ''),
(71257297, 14115701, 2, '', '2014-07-08 00:00:00', ''),
(71392015, 14974123, 2, '', '2014-07-10 00:00:00', ''),
(71663970, 14109796, 2, '', '2014-07-15 00:00:00', ''),
(71913108, 15395445, 2, '', '2014-07-20 00:00:00', ''),
(72044756, 14115701, 2, '', '2014-07-22 00:00:00', ''),
(72429153, 15395445, 2, '', '2014-07-29 00:00:00', ''),
(72561853, 14116003, 2, '', '2014-07-31 00:00:00', ''),
(73060781, 14974123, 2, '', '2014-08-09 00:00:00', ''),
(73207299, 14117348, 2, '', '2014-08-12 00:00:00', ''),
(73207300, 14116882, 2, '', '2014-08-12 00:00:00', ''),
(73472156, 14107354, 2, '', '2014-08-17 00:00:00', ''),
(73587803, 14115701, 2, '', '2014-08-19 00:00:00', ''),
(73839444, 14974123, 2, '', '2014-08-23 00:00:00', ''),
(74507334, 15395445, 2, '', '2014-09-04 00:00:00', ''),
(74757091, 14110096, 2, '', '2014-09-09 00:00:00', ''),
(74883526, 14115944, 2, '', '2014-09-11 00:00:00', ''),
(75667744, 15395445, 2, '', '2014-09-25 00:00:00', ''),
(75925779, 14109796, 2, '', '2014-09-30 00:00:00', ''),
(76047029, 14974123, 2, '', '2014-10-02 00:00:00', ''),
(76467961, 14115701, 5, '81053', '2014-10-10 00:00:00', ''),
(76467962, 14115701, 2, '', '2014-10-10 00:00:00', ''),
(76468970, 14115980, 2, '', '2014-10-10 00:00:00', ''),
(76469358, 14115980, 5, '210905', '2014-10-10 00:00:00', ''),
(76608677, 15395445, 2, '', '2014-10-13 00:00:00', ''),
(77116186, 15395445, 2, '', '2014-10-22 00:00:00', ''),
(77771734, 15395445, 2, '', '2014-11-03 00:00:00', ''),
(77778737, 14974123, 2, '', '2014-11-03 00:00:00', ''),
(78552196, 14117114, 2, '', '2014-11-17 00:00:00', ''),
(78938136, 15395445, 2, '', '2014-11-24 00:00:00', ''),
(79306937, 14115701, 5, '2847435', '2014-12-01 00:00:00', ''),
(79306938, 14115701, 2, '', '2014-12-01 00:00:00', ''),
(79825416, 14113102, 2, '', '2014-12-09 00:00:00', ''),
(80351311, 14115701, 5, '2861269', '2014-12-18 00:00:00', ''),
(80351313, 14115701, 2, '', '2014-12-18 00:00:00', ''),
(80862316, 14116003, 2, '', '2014-12-29 00:00:00', ''),
(80866941, 14110096, 2, '', '2014-12-29 00:00:00', ''),
(80993603, 15395445, 2, '', '2015-01-01 00:00:00', ''),
(81131213, 14974123, 2, '', '2015-01-05 00:00:00', ''),
(82560036, 14116003, 2, '', '2015-01-29 00:00:00', ''),
(82560037, 14116003, 5, '701092', '2015-01-29 00:00:00', ''),
(38954368, 14115980, 2, '', '2013-01-02 00:00:00', ''),
(38955876, 14116003, 2, '', '2013-01-02 00:00:00', ''),
(38955877, 14116003, 5, '147192', '2013-01-02 00:00:00', ''),
(38957128, 14116003, 2, '', '2013-01-02 00:00:00', ''),
(38957187, 14116003, 2, '', '2013-01-02 00:00:00', ''),
(38959383, 14112534, 2, '', '2013-01-02 00:00:00', ''),
(38959893, 14115980, 2, '', '2013-01-02 00:00:00', ''),
(38963006, 14110096, 2, '', '2013-01-02 00:00:00', ''),
(38966089, 14112534, 2, '', '2013-01-02 00:00:00', ''),
(38966136, 14112534, 2, '', '2013-01-02 00:00:00', ''),
(38967857, 14112929, 2, '', '2013-01-02 00:00:00', ''),
(48134715, 14154890, 2, '', '2013-06-04 00:00:00', ''),
(48258992, 14154890, 2, '', '2013-06-06 00:00:00', ''),
(48263206, 14107928, 2, '', '2013-06-06 00:00:00', ''),
(49204662, 14115314, 5, '534005', '2013-06-21 00:00:00', ''),
(50556389, 14113461, 2, '', '2013-07-16 00:00:00', ''),
(51342433, 14110132, 2, '', '2013-07-30 00:00:00', ''),
(51752400, 14113461, 2, '', '2013-08-06 00:00:00', ''),
(52252071, 17522369, 2, '', '2013-08-15 00:00:00', ''),
(52252083, 14113461, 2, '', '2013-08-15 00:00:00', ''),
(52252086, 14113427, 2, '', '2013-08-15 00:00:00', ''),
(52658073, 14115129, 2, '', '2013-08-22 00:00:00', ''),
(52931346, 14113461, 2, '', '2013-08-28 00:00:00', ''),
(52931350, 14113427, 2, '', '2013-08-28 00:00:00', ''),
(53194905, 14113461, 2, '', '2013-09-02 00:00:00', ''),
(53600740, 14109079, 2, '', '2013-09-09 00:00:00', ''),
(53602152, 14109079, 5, '684617', '2013-09-09 00:00:00', ''),
(54251622, 14113461, 2, '', '2013-09-20 00:00:00', ''),
(54378598, 14113461, 2, '', '2013-09-23 00:00:00', ''),
(54519494, 14114729, 2, '', '2013-09-25 00:00:00', ''),
(54522764, 14154890, 2, '', '2013-09-26 00:00:00', ''),
(54780820, 14113461, 2, '', '2013-10-01 00:00:00', ''),
(55042478, 14113427, 2, '', '2013-10-05 00:00:00', ''),
(55042479, 14113461, 2, '', '2013-10-05 00:00:00', ''),
(55180671, 14113461, 2, '', '2013-10-08 00:00:00', ''),
(56215876, 14113461, 2, '', '2013-10-25 00:00:00', ''),
(56473454, 14154890, 2, '', '2013-10-30 00:00:00', ''),
(56611293, 14113461, 2, '', '2013-11-02 00:00:00', ''),
(56611295, 14113427, 2, '', '2013-11-02 00:00:00', ''),
(57797912, 14113427, 2, '', '2013-11-22 00:00:00', ''),
(57798101, 14113461, 2, '', '2013-11-22 00:00:00', ''),
(57937607, 17522369, 2, '', '2013-11-25 00:00:00', ''),
(58062122, 14113461, 2, '', '2013-11-27 00:00:00', ''),
(58204035, 14113461, 2, '', '2013-11-30 00:00:00', ''),
(58204037, 14113427, 2, '', '2013-11-30 00:00:00', ''),
(58322664, 14113057, 5, '2533861', '2013-12-02 00:00:00', ''),
(58733224, 14113427, 2, '', '2013-12-09 00:00:00', ''),
(58733228, 14113427, 5, '563321', '2013-12-09 00:00:00', ''),
(59124244, 14113461, 2, '', '2013-12-16 00:00:00', ''),
(59132517, 14113461, 2, '', '2013-12-16 00:00:00', ''),
(59635011, 14113461, 2, '', '2013-12-25 00:00:00', ''),
(59775778, 14113427, 2, '', '2013-12-29 00:00:00', ''),
(59777121, 20725647, 2, '', '2013-12-29 00:00:00', ''),
(60565446, 14162208, 2, '', '2014-01-13 00:00:00', ''),
(60565447, 14113559, 2, '', '2014-01-13 00:00:00', ''),
(60954365, 14113427, 5, '177646', '2014-01-19 00:00:00', ''),
(60954366, 14113427, 2, '', '2014-01-19 00:00:00', ''),
(61219713, 14113461, 2, '', '2014-01-23 00:00:00', ''),
(61338621, 14107826, 2, '', '2014-01-24 00:00:00', ''),
(61344277, 17522369, 3, '', '2014-01-24 00:00:00', ''),
(61344278, 20159814, 3, '', '2014-01-24 00:00:00', ''),
(61599509, 14115129, 2, '', '2014-01-29 00:00:00', ''),
(62245694, 14113461, 2, '', '2014-02-08 00:00:00', ''),
(62374437, 14113427, 2, '', '2014-02-11 00:00:00', ''),
(62374538, 14113461, 2, '', '2014-02-11 00:00:00', ''),
(62886981, 14113559, 2, '', '2014-02-19 00:00:00', ''),
(62887469, 14162208, 2, '', '2014-02-19 00:00:00', ''),
(63147484, 14113461, 2, '', '2014-02-22 00:00:00', ''),
(63278267, 14113461, 2, '', '2014-02-24 00:00:00', ''),
(63675908, 14111572, 2, '', '2014-03-02 00:00:00', ''),
(63675911, 14111572, 5, '859742', '2014-03-02 00:00:00', ''),
(64189966, 14113461, 2, '', '2014-03-10 00:00:00', ''),
(64714122, 14111572, 5, '2199136', '2014-03-18 00:00:00', ''),
(66395060, 14113461, 2, '', '2014-04-14 00:00:00', ''),
(66397352, 14113427, 5, '464313', '2014-04-14 00:00:00', ''),
(66397972, 14113427, 2, '', '2014-04-14 00:00:00', ''),
(66399202, 14113461, 2, '', '2014-04-14 00:00:00', ''),
(66793446, 14113427, 2, '', '2014-04-21 00:00:00', ''),
(66793508, 14113461, 2, '', '2014-04-21 00:00:00', ''),
(66802410, 14113427, 2, '', '2014-04-22 00:00:00', ''),
(66925071, 14154890, 2, '', '2014-04-23 00:00:00', ''),
(67194632, 20159814, 2, '', '2014-04-28 00:00:00', ''),
(67195288, 14113427, 2, '', '2014-04-28 00:00:00', ''),
(67449774, 14113427, 2, '', '2014-05-02 00:00:00', ''),
(68107907, 14113427, 5, '418864', '2014-05-13 00:00:00', ''),
(69423460, 14111572, 2, '', '2014-06-05 00:00:00', ''),
(69559133, 14113427, 5, '1183098', '2014-06-07 00:00:00', ''),
(69960454, 14113427, 2, '', '2014-06-15 00:00:00', ''),
(70214171, 14107979, 5, '1173620', '2014-06-19 00:00:00', ''),
(70214176, 14107979, 2, '', '2014-06-19 00:00:00', ''),
(70758381, 14113461, 2, '', '2014-06-29 00:00:00', ''),
(70758385, 14113427, 2, '', '2014-06-29 00:00:00', ''),
(70890542, 14113461, 2, '', '2014-07-02 00:00:00', ''),
(71257007, 14113461, 2, '', '2014-07-08 00:00:00', ''),
(71658440, 14111572, 2, '', '2014-07-15 00:00:00', ''),
(72305016, 14113427, 5, '950427', '2014-07-27 00:00:00', ''),
(73464930, 14162208, 2, '', '2014-08-17 00:00:00', ''),
(73464932, 14113559, 2, '', '2014-08-17 00:00:00', ''),
(74637245, 14107979, 5, '789016', '2014-09-07 00:00:00', ''),
(75156223, 14113427, 5, '1984253', '2014-09-16 00:00:00', ''),
(75157234, 20159814, 2, '', '2014-09-16 00:00:00', ''),
(75669628, 14113461, 2, '', '2014-09-25 00:00:00', ''),
(76471789, 14110132, 2, '', '2014-10-10 00:00:00', ''),
(76608681, 14113427, 2, '', '2014-10-13 00:00:00', ''),
(76608685, 14113427, 5, '610641', '2014-10-13 00:00:00', ''),
(76857510, 14107979, 5, '900024', '2014-10-17 00:00:00', ''),
(76857513, 14108694, 2, '', '2014-10-17 00:00:00', ''),
(76863872, 14108694, 2, '', '2014-10-17 00:00:00', ''),
(76863876, 14107979, 5, '1170461', '2014-10-17 00:00:00', ''),
(77116188, 14113427, 2, '', '2014-10-22 00:00:00', ''),
(77377867, 14114729, 5, '2094386', '2014-10-27 00:00:00', ''),
(77768828, 14113461, 2, '', '2014-11-03 00:00:00', ''),
(78556580, 14113461, 2, '', '2014-11-17 00:00:00', ''),
(78675173, 14113427, 5, '3138286', '2014-11-19 00:00:00', ''),
(78938140, 14113427, 5, '535024', '2014-11-24 00:00:00', ''),
(79057868, 20159814, 2, '', '2014-11-25 00:00:00', ''),
(79072301, 14113461, 2, '', '2014-11-26 00:00:00', ''),
(79317847, 14113461, 2, '', '2014-12-01 00:00:00', ''),
(79441615, 14113461, 2, '', '2014-12-03 00:00:00', ''),
(79825528, 14113057, 2, '', '2014-12-09 00:00:00', ''),
(79829171, 14111572, 2, '', '2014-12-09 00:00:00', ''),
(80995132, 14108694, 2, '', '2015-01-01 00:00:00', ''),
(82298867, 14113461, 2, '', '2015-01-24 00:00:00', ''),
(82298868, 14113427, 2, '', '2015-01-24 00:00:00', ''),
(82429512, 14113427, 2, '', '2015-01-27 00:00:00', ''),
(38955056, 14107826, 2, '', '2013-01-02 00:00:00', ''),
(38960141, 14120711, 2, '', '2013-01-02 00:00:00', ''),
(38960143, 14120711, 5, '1284631', '2013-01-02 00:00:00', ''),
(38962840, 14120711, 2, '', '2013-01-02 00:00:00', ''),
(38962981, 14120711, 2, '', '2013-01-02 00:00:00', ''),
(38963174, 14120711, 2, '', '2013-01-02 00:00:00', ''),
(38964602, 14120711, 2, '', '2013-01-02 00:00:00', ''),
(38964605, 14120711, 5, '464709', '2013-01-02 00:00:00', ''),
(38967850, 14113076, 2, '', '2013-01-02 00:00:00', ''),
(38969178, 14120711, 2, '', '2013-01-02 00:00:00', ''),
(38969205, 14120711, 5, '679982', '2013-01-02 00:00:00', ''),
(39357398, 14108430, 2, '', '2013-01-09 00:00:00', ''),
(39358855, 14108430, 2, '', '2013-01-09 00:00:00', ''),
(39358857, 14108430, 2, '', '2013-01-09 00:00:00', ''),
(39489118, 14154890, 2, '', '2013-01-11 00:00:00', ''),
(39497580, 14154890, 2, '', '2013-01-11 00:00:00', ''),
(40192204, 14154890, 3, '', '2013-01-23 00:00:00', ''),
(41668954, 14113427, 5, '11927', '2013-02-19 00:00:00', ''),
(41668957, 14113427, 2, '', '2013-02-19 00:00:00', ''),
(41945567, 14131358, 2, '', '2013-02-23 00:00:00', ''),
(42089352, 14113461, 2, '', '2013-02-26 00:00:00', ''),
(42089354, 14113427, 2, '', '2013-02-26 00:00:00', ''),
(43305319, 14107979, 2, '', '2013-03-16 00:00:00', ''),
(44111536, 14154890, 2, '', '2013-03-29 00:00:00', ''),
(44546783, 14111021, 2, '', '2013-04-05 00:00:00', ''),
(44944621, 14154890, 2, '', '2013-04-11 00:00:00', ''),
(44955892, 14154890, 2, '', '2013-04-11 00:00:00', ''),
(46827383, 14113461, 2, '', '2013-05-13 00:00:00', ''),
(46828873, 14113461, 2, '', '2013-05-13 00:00:00', ''),
(46828876, 14113427, 2, '', '2013-05-13 00:00:00', ''),
(46828978, 14113427, 5, '47438', '2013-05-13 00:00:00', ''),
(47496608, 14113461, 2, '', '2013-05-24 00:00:00', ''),
(47496791, 14113427, 2, '', '2013-05-24 00:00:00', ''),
(47770498, 14154890, 2, '', '2013-05-29 00:00:00', ''),
(48027842, 14115314, 2, '', '2013-06-02 00:00:00', ''),
(48036912, 14113461, 2, '', '2013-06-02 00:00:00', ''),
(49634939, 14113461, 2, '', '2013-06-29 00:00:00', ''),
(50060079, 14109079, 2, '', '2013-07-08 00:00:00', ''),
(50591191, 14113461, 2, '', '2013-07-17 00:00:00', ''),
(50980691, 14154890, 2, '', '2013-07-24 00:00:00', ''),
(52499813, 14114419, 2, '', '2013-08-20 00:00:00', ''),
(52889952, 16198496, 2, '', '2013-08-27 00:00:00', ''),
(52892624, 14114419, 2, '', '2013-08-27 00:00:00', ''),
(54071573, 14114419, 2, '', '2013-09-18 00:00:00', ''),
(55362067, 14114419, 2, '', '2013-10-10 00:00:00', ''),
(56390224, 14114419, 2, '', '2013-10-29 00:00:00', ''),
(56655662, 14114738, 2, '', '2013-11-03 00:00:00', ''),
(57173916, 19931428, 2, '', '2013-11-12 00:00:00', ''),
(58947934, 14280543, 2, '', '2013-12-12 00:00:00', ''),
(59991292, 14114419, 2, '', '2014-01-02 00:00:00', ''),
(61163396, 16198496, 2, '', '2014-01-22 00:00:00', ''),
(61553159, 14120721, 2, '', '2014-01-28 00:00:00', ''),
(61808121, 14112515, 5, '2509723', '2014-02-01 00:00:00', ''),
(63898695, 14120721, 2, '', '2014-03-05 00:00:00', ''),
(65469601, 14114419, 2, '', '2014-03-30 00:00:00', ''),
(65862682, 14114419, 2, '', '2014-04-05 00:00:00', ''),
(67425528, 14114419, 2, '', '2014-05-01 00:00:00', ''),
(67426886, 14114419, 2, '', '2014-05-02 00:00:00', ''),
(67547247, 14114419, 2, '', '2014-05-04 00:00:00', ''),
(68452821, 14120721, 2, '', '2014-05-19 00:00:00', ''),
(68989857, 14120721, 2, '', '2014-05-28 00:00:00', ''),
(70174048, 14114419, 2, '', '2014-06-18 00:00:00', ''),
(71061199, 14114419, 2, '', '2014-07-04 00:00:00', ''),
(71066931, 16198496, 2, '', '2014-07-04 00:00:00', ''),
(71858015, 14280543, 2, '', '2014-07-18 00:00:00', ''),
(72239634, 14120721, 2, '', '2014-07-25 00:00:00', ''),
(72775165, 14114419, 2, '', '2014-08-04 00:00:00', ''),
(73158352, 14114419, 2, '', '2014-08-11 00:00:00', ''),
(74579208, 14114419, 2, '', '2014-09-05 00:00:00', ''),
(76151101, 14114419, 2, '', '2014-10-04 00:00:00', ''),
(77047685, 14120721, 2, '', '2014-10-21 00:00:00', ''),
(77281382, 14114419, 2, '', '2014-10-24 00:00:00', ''),
(77288053, 14120721, 2, '', '2014-10-25 00:00:00', ''),
(78975102, 14114419, 2, '', '2014-11-24 00:00:00', ''),
(79372118, 16198496, 2, '', '2014-12-02 00:00:00', ''),
(81030515, 14120721, 2, '', '2015-01-02 00:00:00', ''),
(38968901, 14115980, 5, '359035', '2013-01-02 00:00:00', ''),
(40063166, 14113102, 2, '', '2013-01-22 00:00:00', ''),
(40191964, 14117114, 2, '', '2013-01-23 00:00:00', ''),
(40727494, 14116003, 2, '', '2013-02-01 00:00:00', ''),
(40852089, 14110532, 2, '', '2013-02-04 00:00:00', ''),
(42212502, 14115701, 2, '', '2013-02-27 00:00:00', ''),
(42488527, 14117114, 2, '', '2013-03-04 00:00:00', ''),
(42488529, 14117114, 5, '1402576', '2013-03-04 00:00:00', ''),
(43437768, 14752347, 2, '', '2013-03-18 00:00:00', ''),
(45479388, 14752347, 2, '', '2013-04-19 00:00:00', ''),
(47492884, 14116003, 2, '', '2013-05-23 00:00:00', ''),
(47494125, 14115701, 2, '', '2013-05-24 00:00:00', ''),
(47897937, 14109796, 2, '', '2013-05-30 00:00:00', ''),
(50187398, 14115701, 5, '711513', '2013-07-10 00:00:00', ''),
(50980683, 14117114, 2, '', '2013-07-24 00:00:00', ''),
(51664454, 14115701, 2, '', '2013-08-05 00:00:00', ''),
(51920899, 14110096, 2, '', '2013-08-09 00:00:00', ''),
(52051374, 14110532, 2, '', '2013-08-12 00:00:00', ''),
(52051377, 14110532, 5, '1243762', '2013-08-12 00:00:00', ''),
(52063676, 14110532, 2, '', '2013-08-12 00:00:00', ''),
(54099692, 14115701, 2, '', '2013-09-18 00:00:00', ''),
(54874171, 14116003, 2, '', '2013-10-02 00:00:00', ''),
(54874175, 14116003, 5, '1366368', '2013-10-02 00:00:00', ''),
(56865202, 14107354, 2, '', '2013-11-06 00:00:00', ''),
(56982661, 14116003, 2, '', '2013-11-08 00:00:00', ''),
(57262426, 14109796, 2, '', '2013-11-13 00:00:00', ''),
(57390428, 14115701, 2, '', '2013-11-15 00:00:00', ''),
(57511447, 14110096, 2, '', '2013-11-18 00:00:00', ''),
(58163645, 14116003, 5, '110772', '2013-11-29 00:00:00', ''),
(58697356, 15395445, 2, '', '2013-12-09 00:00:00', ''),
(59093625, 14116003, 5, '641235', '2013-12-16 00:00:00', ''),
(59617804, 14109024, 2, '', '2013-12-25 00:00:00', ''),
(59624821, 15395445, 2, '', '2013-12-25 00:00:00', ''),
(59628835, 14109024, 2, '', '2013-12-25 00:00:00', ''),
(61460563, 15395445, 2, '', '2014-01-27 00:00:00', ''),
(61588141, 14116003, 2, '', '2014-01-29 00:00:00', ''),
(61720837, 14115701, 2, '', '2014-01-31 00:00:00', ''),
(61844168, 15395445, 2, '', '2014-02-02 00:00:00', ''),
(61851090, 15395445, 2, '', '2014-02-02 00:00:00', ''),
(61973268, 14115701, 2, '', '2014-02-04 00:00:00', ''),
(62109413, 14115944, 2, '', '2014-02-06 00:00:00', ''),
(63443186, 15395445, 2, '', '2014-02-26 00:00:00', ''),
(63829875, 15395445, 2, '', '2014-03-04 00:00:00', ''),
(63837975, 15395445, 2, '', '2014-03-05 00:00:00', ''),
(64201813, 14115701, 2, '', '2014-03-10 00:00:00', ''),
(64201815, 14115701, 5, '718050', '2014-03-10 00:00:00', ''),
(64476028, 15395445, 3, '', '2014-03-14 00:00:00', ''),
(65265610, 14115701, 2, '', '2014-03-27 00:00:00', ''),
(65265612, 14115701, 5, '1841161', '2014-03-27 00:00:00', ''),
(65266090, 14117114, 2, '', '2014-03-27 00:00:00', ''),
(65387095, 14115701, 2, '', '2014-03-28 00:00:00', ''),
(65392550, 15395445, 2, '', '2014-03-28 00:00:00', ''),
(65919182, 15395445, 2, '', '2014-04-07 00:00:00', ''),
(65921511, 15395445, 2, '', '2014-04-07 00:00:00', ''),
(66182835, 15395445, 2, '', '2014-04-10 00:00:00', ''),
(66578527, 14115701, 2, '', '2014-04-17 00:00:00', ''),
(66704480, 14974123, 2, '', '2014-04-19 00:00:00', ''),
(66981626, 14109796, 2, '', '2014-04-24 00:00:00', ''),
(67373378, 15395445, 2, '', '2014-05-01 00:00:00', ''),
(67616415, 14117114, 2, '', '2014-05-05 00:00:00', ''),
(67622278, 14115701, 2, '', '2014-05-05 00:00:00', ''),
(68275467, 14974123, 2, '', '2014-05-16 00:00:00', ''),
(68929212, 14974123, 2, '', '2014-05-28 00:00:00', ''),
(69444556, 14115701, 2, '', '2014-06-05 00:00:00', ''),
(69444558, 14115701, 5, '777748', '2014-06-05 00:00:00', ''),
(69577411, 15395445, 2, '', '2014-06-08 00:00:00', ''),
(69580006, 14752347, 2, '', '2014-06-08 00:00:00', ''),
(69583855, 14115701, 2, '', '2014-06-08 00:00:00', ''),
(70077979, 14109024, 2, '', '2014-06-17 00:00:00', ''),
(70077980, 14109024, 5, '2541', '2014-06-17 00:00:00', ''),
(70736014, 14109796, 2, '', '2014-06-29 00:00:00', ''),
(70854680, 15395445, 2, '', '2014-07-01 00:00:00', ''),
(71114166, 14115701, 2, '', '2014-07-06 00:00:00', ''),
(71116990, 15395445, 2, '', '2014-07-06 00:00:00', ''),
(71383112, 15395445, 2, '', '2014-07-10 00:00:00', ''),
(71905446, 15395445, 2, '', '2014-07-20 00:00:00', ''),
(72927801, 14974123, 2, '', '2014-08-07 00:00:00', ''),
(73599481, 14107354, 2, '', '2014-08-19 00:00:00', ''),
(73599489, 14107354, 5, '1003545', '2014-08-19 00:00:00', ''),
(73739279, 14115701, 2, '', '2014-08-21 00:00:00', ''),
(73999834, 14115701, 2, '', '2014-08-26 00:00:00', ''),
(74672978, 14974123, 2, '', '2014-09-08 00:00:00', ''),
(75593185, 14117348, 2, '', '2014-09-24 00:00:00', ''),
(75593186, 14116882, 2, '', '2014-09-24 00:00:00', ''),
(75729885, 14109024, 2, '', '2014-09-26 00:00:00', ''),
(75980348, 14115701, 5, '148423', '2014-10-01 00:00:00', ''),
(76634251, 14109796, 2, '', '2014-10-14 00:00:00', ''),
(76878466, 15395445, 2, '', '2014-10-17 00:00:00', ''),
(78177607, 14110096, 2, '', '2014-11-10 00:00:00', ''),
(79217309, 15395445, 2, '', '2014-11-28 00:00:00', ''),
(79469497, 14115701, 2, '', '2014-12-03 00:00:00', ''),
(79469498, 14115701, 5, '969613', '2014-12-03 00:00:00', ''),
(80363808, 14109796, 2, '', '2014-12-18 00:00:00', ''),
(80622377, 14109024, 5, '1698763', '2014-12-23 00:00:00', ''),
(80762318, 14974123, 2, '', '2014-12-27 00:00:00', ''),
(80881229, 14116003, 2, '', '2014-12-30 00:00:00', ''),
(81399949, 14115701, 2, '', '2015-01-09 00:00:00', ''),
(82446848, 14115701, 2, '', '2015-01-27 00:00:00', ''),
(38936981, 14112929, 2, '', '2013-01-01 00:00:00', ''),
(38937118, 14112534, 2, '', '2013-01-01 00:00:00', ''),
(38937866, 14110532, 2, '', '2013-01-01 00:00:00', ''),
(38937919, 14110532, 5, '974789', '2013-01-01 00:00:00', ''),
(38938714, 14112534, 2, '', '2013-01-01 00:00:00', ''),
(38940149, 14112534, 2, '', '2013-01-01 00:00:00', ''),
(38943396, 14115944, 2, '', '2013-01-02 00:00:00', ''),
(38943404, 14115944, 1, '', '2013-01-02 00:00:00', ''),
(38943577, 14115980, 2, '', '2013-01-02 00:00:00', ''),
(38943840, 14115980, 2, '', '2013-01-02 00:00:00', ''),
(38944522, 14115980, 5, '1513384', '2013-01-02 00:00:00', ''),
(38944603, 14115980, 2, '', '2013-01-02 00:00:00', ''),
(38944607, 14115980, 2, '', '2013-01-02 00:00:00', ''),
(38944749, 14115980, 2, '', '2013-01-02 00:00:00', ''),
(38945181, 14115980, 2, '', '2013-01-02 00:00:00', ''),
(38945256, 14115701, 2, '', '2013-01-02 00:00:00', ''),
(38945503, 14115701, 2, '', '2013-01-02 00:00:00', ''),
(38945979, 14116003, 2, '', '2013-01-02 00:00:00', ''),
(38946296, 14115701, 2, '', '2013-01-02 00:00:00', ''),
(38946450, 14112534, 2, '', '2013-01-02 00:00:00', ''),
(38947118, 14112534, 2, '', '2013-01-02 00:00:00', ''),
(38948294, 14116003, 2, '', '2013-01-02 00:00:00', ''),
(38948409, 14116003, 2, '', '2013-01-02 00:00:00', ''),
(38948617, 14116003, 2, '', '2013-01-02 00:00:00', ''),
(38948626, 14115980, 5, '1941928', '2013-01-02 00:00:00', ''),
(38948909, 14116882, 2, '', '2013-01-02 00:00:00', ''),
(38949247, 14116003, 2, '', '2013-01-02 00:00:00', ''),
(38949403, 14115980, 2, '', '2013-01-02 00:00:00', ''),
(38950045, 14117348, 1, '', '2013-01-02 00:00:00', ''),
(38950048, 14117348, 2, '', '2013-01-02 00:00:00', ''),
(40019445, 14116003, 2, '', '2013-01-21 00:00:00', ''),
(40165684, 14116003, 2, '', '2013-01-23 00:00:00', ''),
(40430670, 14110096, 1, '', '2013-01-28 00:00:00', ''),
(41070499, 14752347, 2, '', '2013-02-07 00:00:00', ''),
(41070813, 14752347, 1, '', '2013-02-07 00:00:00', ''),
(41752015, 14974123, 16, '', '2013-02-20 00:00:00', ''),
(42691814, 14115701, 2, '', '2013-03-07 00:00:00', ''),
(43222194, 14110096, 2, '', '2013-03-15 00:00:00', ''),
(45647848, 14117348, 2, '', '2013-04-23 00:00:00', ''),
(46039315, 14115980, 2, '', '2013-04-29 00:00:00', ''),
(46039317, 14115980, 5, '560123', '2013-04-29 00:00:00', ''),
(46053942, 14115980, 2, '', '2013-04-30 00:00:00', ''),
(47261108, 14117114, 5, '181151', '2013-05-20 00:00:00', ''),
(47668487, 14109796, 2, '', '2013-05-27 00:00:00', ''),
(47799494, 16585648, 2, '', '2013-05-29 00:00:00', ''),
(48328595, 14115701, 16, '', '2013-06-07 00:00:00', ''),
(48335600, 14115701, 5, '1164011', '2013-06-07 00:00:00', ''),
(48606503, 14115701, 2, '', '2013-06-12 00:00:00', ''),
(50024337, 14115701, 2, '', '2013-07-07 00:00:00', ''),
(51191491, 14974123, 2, '', '2013-07-27 00:00:00', ''),
(51971872, 14110096, 2, '', '2013-08-10 00:00:00', ''),
(52242144, 14115701, 2, '', '2013-08-15 00:00:00', ''),
(52369427, 14115701, 2, '', '2013-08-17 00:00:00', ''),
(52771051, 14752347, 2, '', '2013-08-25 00:00:00', ''),
(53296345, 15395445, 2, '', '2013-09-03 00:00:00', ''),
(53419418, 14117348, 2, '', '2013-09-05 00:00:00', ''),
(53419421, 14116882, 2, '', '2013-09-05 00:00:00', ''),
(51111810, 14120711, 2, '', '2013-07-26 00:00:00', ''),
(52448817, 14107979, 2, '', '2013-08-19 00:00:00', ''),
(52828723, 14113427, 2, '', '2013-08-26 00:00:00', ''),
(52828730, 14113461, 2, '', '2013-08-26 00:00:00', ''),
(53350111, 14113057, 2, '', '2013-09-04 00:00:00', ''),
(53690233, 14109079, 2, '', '2013-09-11 00:00:00', ''),
(54101072, 14115314, 2, '', '2013-09-18 00:00:00', ''),
(54111653, 14113461, 2, '', '2013-09-18 00:00:00', ''),
(54111847, 15079773, 2, '', '2013-09-18 00:00:00', ''),
(54233532, 14113461, 2, '', '2013-09-20 00:00:00', ''),
(54374996, 14115314, 2, '', '2013-09-23 00:00:00', ''),
(54628144, 14113057, 2, '', '2013-09-27 00:00:00', ''),
(54768142, 14107826, 2, '', '2013-09-30 00:00:00', ''),
(54878711, 14113461, 2, '', '2013-10-02 00:00:00', ''),
(55276002, 14111021, 2, '', '2013-10-09 00:00:00', ''),
(55547267, 14113427, 2, '', '2013-10-14 00:00:00', ''),
(55547275, 14113461, 2, '', '2013-10-14 00:00:00', ''),
(56061764, 14113461, 2, '', '2013-10-23 00:00:00', ''),
(58038905, 14113461, 2, '', '2013-11-27 00:00:00', ''),
(58702626, 14113461, 2, '', '2013-12-09 00:00:00', ''),
(58702634, 14113427, 2, '', '2013-12-09 00:00:00', ''),
(59628967, 18439832, 3, '', '2013-12-25 00:00:00', ''),
(59630595, 18439832, 2, '', '2013-12-25 00:00:00', ''),
(60154362, 14113427, 2, '', '2014-01-06 00:00:00', ''),
(60283972, 14113461, 2, '', '2014-01-08 00:00:00', ''),
(60541413, 20159814, 2, '', '2014-01-12 00:00:00', ''),
(60542146, 17522369, 2, '', '2014-01-12 00:00:00', ''),
(61328838, 14113427, 2, '', '2014-01-24 00:00:00', ''),
(61450309, 17522369, 2, '', '2014-01-27 00:00:00', ''),
(62523911, 14113427, 5, '443722', '2014-02-13 00:00:00', ''),
(63172952, 14113057, 2, '', '2014-02-23 00:00:00', ''),
(64085613, 14154890, 2, '', '2014-03-08 00:00:00', ''),
(64340926, 14113461, 2, '', '2014-03-12 00:00:00', ''),
(64471993, 14111572, 2, '', '2014-03-14 00:00:00', ''),
(64475803, 14113427, 2, '', '2014-03-14 00:00:00', ''),
(64476023, 14113461, 2, '', '2014-03-14 00:00:00', ''),
(65265989, 14154890, 2, '', '2014-03-27 00:00:00', ''),
(65392552, 14113427, 2, '', '2014-03-28 00:00:00', ''),
(65399038, 14162208, 2, '', '2014-03-28 00:00:00', ''),
(65399057, 14113559, 2, '', '2014-03-28 00:00:00', ''),
(65652590, 14114729, 2, '', '2014-04-02 00:00:00', ''),
(65921555, 14113427, 2, '', '2014-04-07 00:00:00', ''),
(67616413, 14154890, 2, '', '2014-05-05 00:00:00', ''),
(68140209, 14115314, 2, '', '2014-05-14 00:00:00', ''),
(69577413, 14113461, 3, '', '2014-06-08 00:00:00', ''),
(69577415, 14113427, 2, '', '2014-06-08 00:00:00', ''),
(70077962, 18439832, 2, '', '2014-06-17 00:00:00', ''),
(70993557, 14162208, 2, '', '2014-07-03 00:00:00', ''),
(71905449, 14113427, 2, '', '2014-07-20 00:00:00', ''),
(71905451, 14113427, 5, '1768690', '2014-07-20 00:00:00', ''),
(71905455, 14113461, 2, '', '2014-07-20 00:00:00', ''),
(72035314, 14110132, 2, '', '2014-07-22 00:00:00', ''),
(72142519, 14115129, 2, '', '2014-07-24 00:00:00', ''),
(73195875, 20159814, 2, '', '2014-08-12 00:00:00', ''),
(73459615, 14113461, 2, '', '2014-08-16 00:00:00', ''),
(74009273, 14113461, 2, '', '2014-08-27 00:00:00', ''),
(75729888, 18439832, 2, '', '2014-09-26 00:00:00', ''),
(75730559, 14113461, 2, '', '2014-09-26 00:00:00', ''),
(77921025, 14113461, 2, '', '2014-11-05 00:00:00', ''),
(78173626, 14154890, 2, '', '2014-11-10 00:00:00', ''),
(78820248, 14113461, 2, '', '2014-11-21 00:00:00', ''),
(79217341, 14113461, 2, '', '2014-11-28 00:00:00', ''),
(79217450, 14113427, 2, '', '2014-11-28 00:00:00', ''),
(80762302, 14113461, 2, '', '2014-12-27 00:00:00', ''),
(82573256, 18439832, 2, '', '2015-01-29 00:00:00', ''),
(82574152, 14113461, 2, '', '2015-01-29 00:00:00', ''),
(82693128, 14113461, 2, '', '2015-01-31 00:00:00', ''),
(82693129, 14113427, 2, '', '2015-01-31 00:00:00', ''),
(82701843, 14113427, 5, '227536', '2015-01-31 00:00:00', ''),
(38936529, 14113691, 2, '', '2013-01-01 00:00:00', ''),
(38936725, 14113057, 2, '', '2013-01-01 00:00:00', ''),
(38937708, 14113691, 2, '', '2013-01-01 00:00:00', ''),
(38937765, 14113691, 2, '', '2013-01-01 00:00:00', ''),
(38937770, 14114480, 5, '588306', '2013-01-01 00:00:00', ''),
(38937818, 14114480, 2, '', '2013-01-01 00:00:00', ''),
(38937833, 14114480, 2, '', '2013-01-01 00:00:00', ''),
(38937865, 14114480, 2, '', '2013-01-01 00:00:00', ''),
(38937929, 14114480, 2, '', '2013-01-01 00:00:00', ''),
(38938021, 14114480, 2, '', '2013-01-01 00:00:00', ''),
(38938243, 14114480, 2, '', '2013-01-01 00:00:00', ''),
(38938736, 14114480, 2, '', '2013-01-01 00:00:00', ''),
(38938904, 14114480, 5, '1654265', '2013-01-01 00:00:00', ''),
(38939056, 14114729, 5, '1365289', '2013-01-01 00:00:00', ''),
(38939304, 14114480, 2, '', '2013-01-01 00:00:00', ''),
(38939697, 14114729, 2, '', '2013-01-01 00:00:00', ''),
(38939991, 14114729, 5, '1351600', '2013-01-01 00:00:00', ''),
(38941239, 14113691, 5, '1317221', '2013-01-02 00:00:00', ''),
(38941249, 14114480, 2, '', '2013-01-02 00:00:00', ''),
(38942618, 14114480, 2, '', '2013-01-02 00:00:00', ''),
(38942827, 14112555, 2, '', '2013-01-02 00:00:00', ''),
(38943627, 14116014, 2, '', '2013-01-02 00:00:00', ''),
(38944846, 14113076, 2, '', '2013-01-02 00:00:00', ''),
(38944937, 14115129, 2, '', '2013-01-02 00:00:00', ''),
(38945190, 14115314, 2, '', '2013-01-02 00:00:00', ''),
(38949291, 14116014, 2, '', '2013-01-02 00:00:00', ''),
(38950708, 14114480, 2, '', '2013-01-02 00:00:00', ''),
(38952443, 14116014, 2, '', '2013-01-02 00:00:00', ''),
(38952768, 14113691, 2, '', '2013-01-02 00:00:00', ''),
(39233830, 14107826, 2, '', '2013-01-07 00:00:00', ''),
(39382361, 14108430, 2, '', '2013-01-09 00:00:00', ''),
(41760261, 14154890, 2, '', '2013-02-20 00:00:00', ''),
(43349793, 14108694, 2, '', '2013-03-17 00:00:00', ''),
(43349794, 14107979, 2, '', '2013-03-17 00:00:00', ''),
(43349795, 14107979, 5, '894671', '2013-03-17 00:00:00', ''),
(43753600, 14107979, 3, '', '2013-03-23 00:00:00', ''),
(45771015, 14113461, 2, '', '2013-04-24 00:00:00', ''),
(46175160, 15079773, 2, '', '2013-05-01 00:00:00', ''),
(46588287, 14113427, 2, '', '2013-05-09 00:00:00', ''),
(46588376, 14113461, 2, '', '2013-05-09 00:00:00', ''),
(48982458, 14154890, 2, '', '2013-06-18 00:00:00', ''),
(49123717, 14113427, 2, '', '2013-06-20 00:00:00', ''),
(49123724, 14113461, 2, '', '2013-06-20 00:00:00', ''),
(49777416, 14113427, 5, '427499', '2013-07-02 00:00:00', ''),
(50149395, 14113461, 2, '', '2013-07-09 00:00:00', ''),
(50153340, 14107979, 5, '1603072', '2013-07-09 00:00:00', ''),
(51070146, 14107979, 2, '', '2013-07-25 00:00:00', ''),
(51305333, 14113427, 5, '286629', '2013-07-30 00:00:00', ''),
(51305334, 14113427, 2, '', '2013-07-30 00:00:00', ''),
(51314906, 14113461, 2, '', '2013-07-30 00:00:00', ''),
(51572888, 14113461, 2, '', '2013-08-02 00:00:00', ''),
(52109976, 14115314, 2, '', '2013-08-13 00:00:00', ''),
(52368857, 14113427, 2, '', '2013-08-17 00:00:00', ''),
(52368860, 14113427, 5, '63094', '2013-08-17 00:00:00', ''),
(52368861, 14113461, 2, '', '2013-08-17 00:00:00', ''),
(52503573, 14107979, 3, '', '2013-08-20 00:00:00', ''),
(53296344, 14113461, 2, '', '2013-09-03 00:00:00', ''),
(53296348, 14113427, 2, '', '2013-09-03 00:00:00', ''),
(53426702, 14113427, 5, '115182', '2013-09-05 00:00:00', ''),
(53807721, 14113427, 5, '744537', '2013-09-12 00:00:00', ''),
(54315429, 14113461, 2, '', '2013-09-22 00:00:00', ''),
(54327406, 14113461, 2, '', '2013-09-23 00:00:00', ''),
(54968372, 14109079, 2, '', '2013-10-03 00:00:00', ''),
(54968373, 14109079, 5, '625914', '2013-10-03 00:00:00', ''),
(55625614, 14113461, 2, '', '2013-10-16 00:00:00', ''),
(55751415, 14154890, 2, '', '2013-10-17 00:00:00', ''),
(55882408, 14109079, 2, '', '2013-10-20 00:00:00', ''),
(55882409, 14109079, 5, '1656733', '2013-10-20 00:00:00', ''),
(56275309, 18439832, 2, '', '2013-10-27 00:00:00', ''),
(56910145, 14113461, 2, '', '2013-11-07 00:00:00', ''),
(57041361, 14113427, 2, '', '2013-11-10 00:00:00', ''),
(57041363, 14113427, 5, '538222', '2013-11-10 00:00:00', ''),
(57826556, 14113461, 2, '', '2013-11-23 00:00:00', ''),
(57827483, 17522369, 2, '', '2013-11-23 00:00:00', ''),
(58228465, 14113461, 2, '', '2013-11-30 00:00:00', ''),
(58230072, 14113461, 2, '', '2013-11-30 00:00:00', ''),
(58678336, 14113057, 2, '', '2013-12-08 00:00:00', ''),
(58942458, 14113461, 2, '', '2013-12-12 00:00:00', ''),
(58947942, 14154890, 2, '', '2013-12-12 00:00:00', ''),
(59344125, 14113057, 5, '1547438', '2013-12-19 00:00:00', '');
INSERT INTO `Votes` (`Id`, `PostId`, `VoteTypeId`, `UserId`, `CreationDate`, `BountyAmount`) VALUES
(59452032, 18439832, 2, '', '2013-12-21 00:00:00', ''),
(59463128, 14113461, 2, '', '2013-12-21 00:00:00', ''),
(60247413, 15079773, 2, '', '2014-01-07 00:00:00', ''),
(60251854, 14113461, 2, '', '2014-01-07 00:00:00', ''),
(60642514, 14113461, 2, '', '2014-01-14 00:00:00', ''),
(61019198, 14162208, 2, '', '2014-01-20 00:00:00', ''),
(54956857, 15395445, 2, '', '2013-10-03 00:00:00', ''),
(55351936, 14115701, 2, '', '2013-10-10 00:00:00', ''),
(55890764, 14115944, 2, '', '2013-10-21 00:00:00', ''),
(56393260, 14116882, 2, '', '2013-10-29 00:00:00', ''),
(56524280, 14974123, 2, '', '2013-10-31 00:00:00', ''),
(57041360, 15395445, 2, '', '2013-11-10 00:00:00', ''),
(58230033, 14117114, 2, '', '2013-11-30 00:00:00', ''),
(58236696, 14109796, 2, '', '2013-12-01 00:00:00', ''),
(58503002, 14115701, 5, '1906892', '2013-12-05 00:00:00', ''),
(58807825, 14112929, 2, '', '2013-12-10 00:00:00', ''),
(58947902, 14117114, 2, '', '2013-12-12 00:00:00', ''),
(58947903, 14117114, 5, '2052164', '2013-12-12 00:00:00', ''),
(59452027, 14109024, 2, '', '2013-12-21 00:00:00', ''),
(59858623, 15395445, 2, '', '2013-12-31 00:00:00', ''),
(59863638, 14115944, 2, '', '2013-12-31 00:00:00', ''),
(60244387, 14119277, 2, '', '2014-01-07 00:00:00', ''),
(60251774, 15395445, 2, '', '2014-01-07 00:00:00', ''),
(62200379, 14115980, 2, '', '2014-02-07 00:00:00', ''),
(62585629, 14110096, 2, '', '2014-02-13 00:00:00', ''),
(62592352, 15395445, 3, '', '2014-02-13 00:00:00', ''),
(62595983, 15395445, 2, '', '2014-02-14 00:00:00', ''),
(62987532, 15395445, 2, '', '2014-02-20 00:00:00', ''),
(63384568, 14110096, 2, '', '2014-02-26 00:00:00', ''),
(64293914, 15395445, 2, '', '2014-03-12 00:00:00', ''),
(64430166, 14115944, 2, '', '2014-03-13 00:00:00', ''),
(64561517, 14115701, 2, '', '2014-03-16 00:00:00', ''),
(66363591, 14115701, 2, '', '2014-04-14 00:00:00', ''),
(66750161, 14110096, 2, '', '2014-04-21 00:00:00', ''),
(66871426, 14115701, 2, '', '2014-04-23 00:00:00', ''),
(66883047, 14117114, 2, '', '2014-04-23 00:00:00', ''),
(67001093, 15395445, 2, '', '2014-04-24 00:00:00', ''),
(67295010, 14115701, 2, '', '2014-04-29 00:00:00', ''),
(67413779, 14109796, 2, '', '2014-05-01 00:00:00', ''),
(68450768, 15395445, 2, '', '2014-05-19 00:00:00', ''),
(69111447, 14115701, 5, '2875073', '2014-05-30 00:00:00', ''),
(69641069, 14117114, 5, '1469979', '2014-06-09 00:00:00', ''),
(71201308, 15395445, 2, '', '2014-07-08 00:00:00', ''),
(71719158, 14115701, 2, '', '2014-07-16 00:00:00', ''),
(72763270, 15395445, 2, '', '2014-08-04 00:00:00', ''),
(73293443, 14109796, 2, '', '2014-08-13 00:00:00', ''),
(73418771, 14115701, 2, '', '2014-08-15 00:00:00', ''),
(74319682, 15395445, 2, '', '2014-09-02 00:00:00', ''),
(75750069, 15395445, 2, '', '2014-09-27 00:00:00', ''),
(75878720, 15395445, 2, '', '2014-09-30 00:00:00', ''),
(77290555, 14109796, 2, '', '2014-10-25 00:00:00', ''),
(77409609, 15395445, 2, '', '2014-10-27 00:00:00', ''),
(78449599, 14110532, 2, '', '2014-11-14 00:00:00', ''),
(78449605, 14110532, 5, '3384830', '2014-11-14 00:00:00', ''),
(78589083, 15395445, 3, '', '2014-11-17 00:00:00', ''),
(78970012, 14109796, 2, '', '2014-11-24 00:00:00', ''),
(79376789, 14115701, 2, '', '2014-12-02 00:00:00', ''),
(80269937, 15395445, 2, '', '2014-12-17 00:00:00', ''),
(80908783, 15395445, 2, '', '2014-12-30 00:00:00', ''),
(81678712, 14115701, 2, '', '2015-01-14 00:00:00', ''),
(81678997, 14115701, 2, '', '2015-01-14 00:00:00', ''),
(61020780, 14107826, 2, '', '2014-01-20 00:00:00', ''),
(61416642, 14162208, 2, '', '2014-01-26 00:00:00', ''),
(61543466, 14115129, 2, '', '2014-01-28 00:00:00', ''),
(62457615, 20725647, 2, '', '2014-02-12 00:00:00', ''),
(62590281, 14111572, 2, '', '2014-02-13 00:00:00', ''),
(62724735, 14113427, 2, '', '2014-02-16 00:00:00', ''),
(62847751, 14113427, 2, '', '2014-02-18 00:00:00', ''),
(62987568, 14113461, 2, '', '2014-02-20 00:00:00', ''),
(62987574, 14113427, 2, '', '2014-02-20 00:00:00', ''),
(63379107, 14113427, 5, '3289770', '2014-02-26 00:00:00', ''),
(63506209, 14108694, 2, '', '2014-02-27 00:00:00', ''),
(63900024, 14111572, 2, '', '2014-03-05 00:00:00', ''),
(64291611, 14114729, 2, '', '2014-03-11 00:00:00', ''),
(64430490, 14113461, 2, '', '2014-03-13 00:00:00', ''),
(64557450, 14113461, 2, '', '2014-03-15 00:00:00', ''),
(65204537, 14120711, 5, '1573014', '2014-03-26 00:00:00', ''),
(65850034, 14107979, 5, '1917782', '2014-04-05 00:00:00', ''),
(66871381, 14113461, 2, '', '2014-04-23 00:00:00', ''),
(67135614, 14114729, 2, '', '2014-04-27 00:00:00', ''),
(67426214, 14110132, 2, '', '2014-05-02 00:00:00', ''),
(68455342, 14113461, 2, '', '2014-05-19 00:00:00', ''),
(68722623, 14111572, 2, '', '2014-05-23 00:00:00', ''),
(70039794, 20159814, 2, '', '2014-06-16 00:00:00', ''),
(70301001, 14113559, 2, '', '2014-06-20 00:00:00', ''),
(70301003, 14113559, 5, '829970', '2014-06-20 00:00:00', ''),
(70301007, 14162208, 2, '', '2014-06-20 00:00:00', ''),
(70947591, 20159814, 2, '', '2014-07-02 00:00:00', ''),
(71065949, 20159814, 2, '', '2014-07-04 00:00:00', ''),
(71195838, 20159814, 2, '', '2014-07-07 00:00:00', ''),
(71201309, 14113427, 2, '', '2014-07-08 00:00:00', ''),
(71201321, 14113461, 2, '', '2014-07-08 00:00:00', ''),
(71858006, 14154890, 2, '', '2014-07-18 00:00:00', ''),
(71861663, 14113427, 2, '', '2014-07-18 00:00:00', ''),
(71861664, 14113427, 5, '805057', '2014-07-18 00:00:00', ''),
(72239720, 19648025, 2, '', '2014-07-25 00:00:00', ''),
(72763316, 14113461, 2, '', '2014-08-04 00:00:00', ''),
(74190515, 14114729, 2, '', '2014-08-29 00:00:00', ''),
(74970752, 14113559, 5, '1434408', '2014-09-13 00:00:00', ''),
(74975956, 14113427, 2, '', '2014-09-13 00:00:00', ''),
(74976032, 14113461, 2, '', '2014-09-13 00:00:00', ''),
(75619081, 14113559, 2, '', '2014-09-24 00:00:00', ''),
(75619141, 14162208, 2, '', '2014-09-24 00:00:00', ''),
(75760161, 14114729, 2, '', '2014-09-27 00:00:00', ''),
(75878723, 14113427, 2, '', '2014-09-30 00:00:00', ''),
(76015968, 14107826, 2, '', '2014-10-02 00:00:00', ''),
(76148450, 14114729, 5, '635998', '2014-10-04 00:00:00', ''),
(76148452, 14114729, 2, '', '2014-10-04 00:00:00', ''),
(76149834, 14154890, 2, '', '2014-10-04 00:00:00', ''),
(76787817, 14107928, 2, '', '2014-10-16 00:00:00', ''),
(77164460, 14113461, 2, '', '2014-10-23 00:00:00', ''),
(77409612, 14113427, 2, '', '2014-10-27 00:00:00', ''),
(77671946, 14114729, 2, '', '2014-10-31 00:00:00', ''),
(77930858, 14113461, 2, '', '2014-11-05 00:00:00', ''),
(78066642, 14113427, 5, '2279691', '2014-11-07 00:00:00', ''),
(78197889, 14107979, 5, '701745', '2014-11-11 00:00:00', ''),
(78452727, 14113427, 5, '436415', '2014-11-14 00:00:00', ''),
(78840670, 14162208, 2, '', '2014-11-21 00:00:00', ''),
(80262893, 20159814, 3, '', '2014-12-17 00:00:00', ''),
(80272624, 14113461, 2, '', '2014-12-17 00:00:00', ''),
(82591841, 20159814, 2, '', '2015-01-29 00:00:00', ''),
(38915351, 14107919, 2, '', '2013-01-01 00:00:00', ''),
(38917529, 14107919, 2, '', '2013-01-01 00:00:00', ''),
(39055193, 14114786, 2, '', '2013-01-03 00:00:00', ''),
(39145588, 14112532, 2, '', '2013-01-05 00:00:00', ''),
(39145598, 14112582, 2, '', '2013-01-05 00:00:00', ''),
(39145613, 14112549, 2, '', '2013-01-05 00:00:00', ''),
(39145616, 14120652, 2, '', '2013-01-05 00:00:00', ''),
(39284471, 14112532, 2, '', '2013-01-08 00:00:00', ''),
(39537370, 14117898, 2, '', '2013-01-12 00:00:00', ''),
(41037189, 14115440, 2, '', '2013-02-07 00:00:00', ''),
(42230277, 14114786, 2, '', '2013-02-27 00:00:00', ''),
(42916007, 14115440, 5, '2081502', '2013-03-11 00:00:00', ''),
(43586996, 14109906, 2, '', '2013-03-20 00:00:00', ''),
(43589249, 14113150, 2, '', '2013-03-20 00:00:00', ''),
(44517695, 14109906, 2, '', '2013-04-04 00:00:00', ''),
(46507934, 14112532, 2, '', '2013-05-07 00:00:00', ''),
(46508037, 14112532, 2, '', '2013-05-07 00:00:00', ''),
(48903439, 14109724, 2, '', '2013-06-17 00:00:00', ''),
(49300548, 14111677, 2, '', '2013-06-24 00:00:00', ''),
(49567196, 14245913, 2, '', '2013-06-28 00:00:00', ''),
(50730833, 14109187, 2, '', '2013-07-19 00:00:00', ''),
(51262905, 14107919, 2, '', '2013-07-29 00:00:00', ''),
(53585270, 14109474, 5, '1225434', '2013-09-09 00:00:00', ''),
(55775734, 14113150, 2, '', '2013-10-18 00:00:00', ''),
(56424481, 14109474, 2, '', '2013-10-30 00:00:00', ''),
(57466783, 19006108, 2, '', '2013-11-17 00:00:00', ''),
(57845940, 14109474, 2, '', '2013-11-23 00:00:00', ''),
(58919185, 14115440, 2, '', '2013-12-12 00:00:00', ''),
(59038937, 14109474, 2, '', '2013-12-14 00:00:00', ''),
(59446709, 14113150, 2, '', '2013-12-21 00:00:00', ''),
(63213691, 21977519, 2, '', '2014-02-24 00:00:00', ''),
(63340444, 14115440, 2, '', '2014-02-25 00:00:00', ''),
(64120839, 14113150, 2, '', '2014-03-09 00:00:00', ''),
(66339448, 14115440, 2, '', '2014-04-13 00:00:00', ''),
(66860967, 14115440, 2, '', '2014-04-22 00:00:00', ''),
(67643290, 14107919, 2, '', '2014-05-06 00:00:00', ''),
(69492886, 14107919, 2, '', '2014-06-06 00:00:00', ''),
(71701979, 14107919, 5, '1705804', '2014-07-16 00:00:00', ''),
(72096479, 14111828, 2, '', '2014-07-23 00:00:00', ''),
(72225989, 14112064, 3, '', '2014-07-25 00:00:00', ''),
(73001109, 14245913, 3, '', '2014-08-08 00:00:00', ''),
(75942849, 14107919, 2, '', '2014-10-01 00:00:00', ''),
(77891430, 26308288, 2, '', '2014-11-05 00:00:00', ''),
(79744181, 14109724, 2, '', '2014-12-08 00:00:00', ''),
(80131908, 14792896, 2, '', '2014-12-15 00:00:00', ''),
(81172374, 14113150, 2, '', '2015-01-05 00:00:00', ''),
(38919234, 14107919, 2, '', '2013-01-01 00:00:00', ''),
(38919277, 14109187, 5, '1191614', '2013-01-01 00:00:00', ''),
(38919282, 14109187, 2, '', '2013-01-01 00:00:00', ''),
(38921686, 14109906, 2, '', '2013-01-01 00:00:00', ''),
(38923889, 14109187, 5, '370305', '2013-01-01 00:00:00', ''),
(38924645, 14109724, 3, '', '2013-01-01 00:00:00', ''),
(38925341, 14109906, 2, '', '2013-01-01 00:00:00', ''),
(38926901, 14109724, 2, '', '2013-01-01 00:00:00', ''),
(38928185, 14111831, 3, '', '2013-01-01 00:00:00', ''),
(38928651, 14111831, 2, '', '2013-01-01 00:00:00', ''),
(38929495, 14111828, 2, '', '2013-01-01 00:00:00', ''),
(38930579, 14112532, 2, '', '2013-01-01 00:00:00', ''),
(38930599, 14112532, 2, '', '2013-01-01 00:00:00', ''),
(38930641, 14112532, 2, '', '2013-01-01 00:00:00', ''),
(38930653, 14112532, 2, '', '2013-01-01 00:00:00', ''),
(38930669, 14112532, 2, '', '2013-01-01 00:00:00', ''),
(38930692, 14112532, 2, '', '2013-01-01 00:00:00', ''),
(38930715, 14112582, 2, '', '2013-01-01 00:00:00', ''),
(38930801, 14112582, 2, '', '2013-01-01 00:00:00', ''),
(38930841, 14112532, 2, '', '2013-01-01 00:00:00', ''),
(38930855, 14112549, 2, '', '2013-01-01 00:00:00', ''),
(38931257, 14112532, 2, '', '2013-01-01 00:00:00', ''),
(38931516, 14112582, 2, '', '2013-01-01 00:00:00', ''),
(38931598, 14112582, 2, '', '2013-01-01 00:00:00', ''),
(38933150, 14112532, 1, '', '2013-01-01 00:00:00', ''),
(38934231, 14113150, 2, '', '2013-01-01 00:00:00', ''),
(38934993, 14113150, 2, '', '2013-01-01 00:00:00', ''),
(38936182, 14112582, 2, '', '2013-01-01 00:00:00', ''),
(39987326, 14112532, 2, '', '2013-01-20 00:00:00', ''),
(39987678, 14112532, 2, '', '2013-01-20 00:00:00', ''),
(40786723, 14109187, 2, '', '2013-02-03 00:00:00', ''),
(40792146, 14109187, 2, '', '2013-02-03 00:00:00', ''),
(41337583, 14792896, 2, '', '2013-02-13 00:00:00', ''),
(41473768, 14111677, 2, '', '2013-02-15 00:00:00', ''),
(41872931, 14245913, 2, '', '2013-02-21 00:00:00', ''),
(43204014, 14114786, 2, '', '2013-03-14 00:00:00', ''),
(44290008, 14109906, 2, '', '2013-04-01 00:00:00', ''),
(44290910, 14112532, 2, '', '2013-04-01 00:00:00', ''),
(44974217, 14109474, 2, '', '2013-04-11 00:00:00', ''),
(46569831, 14115440, 2, '', '2013-05-08 00:00:00', ''),
(48048068, 14109906, 2, '', '2013-06-03 00:00:00', ''),
(50120134, 14111677, 2, '', '2013-07-09 00:00:00', ''),
(52092781, 14111828, 2, '', '2013-08-13 00:00:00', ''),
(55472838, 14109474, 5, '576497', '2013-10-13 00:00:00', ''),
(55472839, 14109474, 2, '', '2013-10-13 00:00:00', ''),
(56130668, 14109906, 2, '', '2013-10-24 00:00:00', ''),
(56251670, 14109474, 2, '', '2013-10-26 00:00:00', ''),
(58612247, 14113150, 2, '', '2013-12-07 00:00:00', ''),
(58886799, 14109674, 2, '', '2013-12-11 00:00:00', ''),
(59143535, 14109724, 2, '', '2013-12-16 00:00:00', ''),
(61394229, 14114786, 2, '', '2014-01-26 00:00:00', ''),
(62050762, 14116626, 2, '', '2014-02-05 00:00:00', ''),
(63748685, 14114786, 2, '', '2014-03-03 00:00:00', ''),
(63886233, 14109724, 2, '', '2014-03-05 00:00:00', ''),
(64019757, 14109724, 2, '', '2014-03-07 00:00:00', ''),
(64409332, 14109187, 5, '399855', '2014-03-13 00:00:00', ''),
(64797686, 14109187, 5, '599926', '2014-03-19 00:00:00', ''),
(65437088, 14115440, 2, '', '2014-03-29 00:00:00', ''),
(66341826, 14109724, 5, '145406', '2014-04-13 00:00:00', ''),
(67032326, 14113150, 2, '', '2014-04-25 00:00:00', ''),
(68857597, 14111831, 2, '', '2014-05-26 00:00:00', ''),
(68857708, 14112064, 2, '', '2014-05-26 00:00:00', ''),
(69080190, 14115440, 2, '', '2014-05-30 00:00:00', ''),
(69084796, 14112532, 2, '', '2014-05-30 00:00:00', ''),
(71929411, 14107919, 5, '735022', '2014-07-20 00:00:00', ''),
(74671501, 14109474, 5, '1937050', '2014-09-08 00:00:00', ''),
(74671502, 14109474, 2, '', '2014-09-08 00:00:00', ''),
(77617828, 26308288, 2, '', '2014-10-31 00:00:00', ''),
(79428527, 14109474, 2, '', '2014-12-02 00:00:00', ''),
(82140664, 14109724, 2, '', '2015-01-22 00:00:00', ''),
(82140666, 14109724, 5, '414415', '2015-01-22 00:00:00', ''),
(38974413, 14112532, 2, '', '2013-01-02 00:00:00', ''),
(38978302, 14114786, 2, '', '2013-01-02 00:00:00', ''),
(38980727, 14111828, 2, '', '2013-01-02 00:00:00', ''),
(39121952, 14115440, 3, '', '2013-01-04 00:00:00', ''),
(39250058, 14112532, 2, '', '2013-01-07 00:00:00', ''),
(39250391, 14116626, 1, '', '2013-01-07 00:00:00', ''),
(39384121, 14245913, 2, '', '2013-01-09 00:00:00', ''),
(39389240, 14112532, 2, '', '2013-01-09 00:00:00', ''),
(39528381, 14112532, 2, '', '2013-01-12 00:00:00', ''),
(41166498, 14792896, 1, '', '2013-02-09 00:00:00', ''),
(42684472, 14109906, 2, '', '2013-03-06 00:00:00', ''),
(44047147, 14109187, 2, '', '2013-03-28 00:00:00', ''),
(46474606, 14109906, 2, '', '2013-05-07 00:00:00', ''),
(46603216, 14109906, 2, '', '2013-05-09 00:00:00', ''),
(46740294, 14115440, 2, '', '2013-05-11 00:00:00', ''),
(47404361, 14109906, 2, '', '2013-05-22 00:00:00', ''),
(48885881, 14114786, 2, '', '2013-06-17 00:00:00', ''),
(53618669, 14245913, 2, '', '2013-09-10 00:00:00', ''),
(54926836, 14109187, 2, '', '2013-10-03 00:00:00', ''),
(54926837, 14109187, 5, '1450401', '2013-10-03 00:00:00', ''),
(55321875, 14109137, 2, '', '2013-10-10 00:00:00', ''),
(57578775, 14109724, 2, '', '2013-11-19 00:00:00', ''),
(57590996, 14109724, 2, '', '2013-11-19 00:00:00', ''),
(58646069, 14113150, 2, '', '2013-12-08 00:00:00', ''),
(61533615, 14109474, 2, '', '2014-01-28 00:00:00', ''),
(61533618, 14109474, 5, '843443', '2014-01-28 00:00:00', ''),
(61537294, 14111831, 2, '', '2014-01-28 00:00:00', ''),
(61538870, 14113150, 2, '', '2014-01-28 00:00:00', ''),
(63981265, 14109724, 2, '', '2014-03-06 00:00:00', ''),
(67047601, 14117898, 2, '', '2014-04-25 00:00:00', ''),
(71429150, 14114786, 2, '', '2014-07-11 00:00:00', ''),
(71433795, 14107919, 2, '', '2014-07-11 00:00:00', ''),
(73006825, 14111831, 2, '', '2014-08-08 00:00:00', ''),
(73536059, 14113150, 2, '', '2014-08-18 00:00:00', ''),
(73941067, 14111677, 2, '', '2014-08-26 00:00:00', ''),
(74950998, 14109724, 2, '', '2014-09-12 00:00:00', ''),
(75212425, 14245913, 2, '', '2014-09-17 00:00:00', ''),
(76804551, 14112582, 2, '', '2014-10-16 00:00:00', ''),
(78082115, 14114786, 2, '', '2014-11-08 00:00:00', ''),
(79274828, 14112532, 2, '', '2014-11-30 00:00:00', ''),
(79274846, 14112582, 2, '', '2014-11-30 00:00:00', ''),
(79667766, 14112532, 2, '', '2014-12-06 00:00:00', ''),
(81359237, 14109724, 2, '', '2015-01-08 00:00:00', ''),
(81988812, 14111831, 2, '', '2015-01-19 00:00:00', ''),
(81989200, 14111831, 5, '2157640', '2015-01-19 00:00:00', ''),
(82508342, 14792896, 2, '', '2015-01-28 00:00:00', ''),
(82508509, 14117898, 2, '', '2015-01-28 00:00:00', ''),
(39031364, 14112532, 2, '', '2013-01-03 00:00:00', ''),
(39033651, 14111677, 2, '', '2013-01-03 00:00:00', ''),
(39866594, 14245913, 1, '', '2013-01-18 00:00:00', ''),
(42879865, 14114786, 2, '', '2013-03-10 00:00:00', ''),
(44229627, 14114786, 2, '', '2013-03-31 00:00:00', ''),
(46381762, 14115440, 2, '', '2013-05-06 00:00:00', ''),
(47059803, 14111677, 2, '', '2013-05-16 00:00:00', ''),
(47598362, 14109906, 2, '', '2013-05-26 00:00:00', ''),
(47867276, 14109137, 2, '', '2013-05-30 00:00:00', ''),
(48514325, 14111677, 2, '', '2013-06-10 00:00:00', ''),
(48792779, 14111677, 2, '', '2013-06-14 00:00:00', ''),
(51407683, 14113150, 2, '', '2013-07-31 00:00:00', ''),
(51816933, 14111677, 2, '', '2013-08-07 00:00:00', ''),
(52077594, 14112549, 2, '', '2013-08-12 00:00:00', ''),
(52594539, 14107919, 5, '176646', '2013-08-21 00:00:00', ''),
(52594563, 14107919, 2, '', '2013-08-21 00:00:00', ''),
(53001512, 14792896, 2, '', '2013-08-29 00:00:00', ''),
(54450625, 14792896, 2, '', '2013-09-24 00:00:00', ''),
(54588375, 14114786, 2, '', '2013-09-27 00:00:00', ''),
(57238412, 14117898, 2, '', '2013-11-13 00:00:00', ''),
(60530630, 14111677, 2, '', '2014-01-12 00:00:00', ''),
(60656570, 14113150, 2, '', '2014-01-14 00:00:00', ''),
(61705672, 14245913, 2, '', '2014-01-30 00:00:00', ''),
(64963247, 14114786, 2, '', '2014-03-21 00:00:00', ''),
(66021660, 14114786, 2, '', '2014-04-08 00:00:00', ''),
(68495264, 14245913, 2, '', '2014-05-20 00:00:00', ''),
(69813951, 14115440, 2, '', '2014-06-12 00:00:00', ''),
(69937599, 14109906, 2, '', '2014-06-14 00:00:00', ''),
(70839510, 17695402, 2, '', '2014-07-01 00:00:00', ''),
(72654438, 14115440, 2, '', '2014-08-01 00:00:00', ''),
(73955164, 14113150, 2, '', '2014-08-26 00:00:00', ''),
(76288275, 14107919, 2, '', '2014-10-07 00:00:00', ''),
(78463136, 14109724, 2, '', '2014-11-14 00:00:00', ''),
(79392942, 14114786, 2, '', '2014-12-02 00:00:00', ''),
(79781246, 14113150, 2, '', '2014-12-09 00:00:00', ''),
(81324997, 14109474, 2, '', '2015-01-08 00:00:00', ''),
(81446422, 14112532, 2, '', '2015-01-09 00:00:00', ''),
(81450187, 14117898, 2, '', '2015-01-09 00:00:00', ''),
(82606708, 14109724, 2, '', '2015-01-29 00:00:00', ''),
(39176688, 14109674, 1, '', '2013-01-06 00:00:00', ''),
(39187251, 14112582, 2, '', '2013-01-06 00:00:00', ''),
(41421346, 14792896, 2, '', '2013-02-14 00:00:00', ''),
(42445845, 14109187, 5, '689723', '2013-03-03 00:00:00', ''),
(44205462, 14109906, 2, '', '2013-03-30 00:00:00', ''),
(45807890, 14114786, 2, '', '2013-04-25 00:00:00', ''),
(47574168, 14109906, 2, '', '2013-05-25 00:00:00', ''),
(48864415, 14111677, 5, '1109326', '2013-06-16 00:00:00', ''),
(53496753, 17695402, 2, '', '2013-09-07 00:00:00', ''),
(53628814, 14792896, 2, '', '2013-09-10 00:00:00', ''),
(55164734, 14109187, 5, '2767447', '2013-10-08 00:00:00', ''),
(56950208, 14112532, 2, '', '2013-11-08 00:00:00', ''),
(57630424, 14109187, 5, '2195990', '2013-11-20 00:00:00', ''),
(59257391, 14245913, 2, '', '2013-12-18 00:00:00', ''),
(59919967, 14117898, 2, '', '2014-01-01 00:00:00', ''),
(62407140, 14109724, 2, '', '2014-02-11 00:00:00', ''),
(62407141, 14109724, 5, '1840231', '2014-02-11 00:00:00', ''),
(63739510, 14109187, 2, '', '2014-03-03 00:00:00', ''),
(66569187, 14107919, 2, '', '2014-04-17 00:00:00', ''),
(66694095, 14113150, 2, '', '2014-04-19 00:00:00', ''),
(68930816, 14114786, 2, '', '2014-05-28 00:00:00', ''),
(72440356, 14107919, 2, '', '2014-07-29 00:00:00', ''),
(73110704, 14111831, 2, '', '2014-08-10 00:00:00', ''),
(74472096, 14109474, 2, '', '2014-09-04 00:00:00', ''),
(75659293, 14115440, 5, '2268846', '2014-09-25 00:00:00', ''),
(76089505, 14109724, 2, '', '2014-10-03 00:00:00', ''),
(77980224, 17695402, 2, '', '2014-11-06 00:00:00', ''),
(78370190, 14109137, 3, '', '2014-11-13 00:00:00', ''),
(78788839, 14109474, 2, '', '2014-11-20 00:00:00', ''),
(79049018, 14109474, 2, '', '2014-11-25 00:00:00', ''),
(39001329, 14112532, 2, '', '2013-01-03 00:00:00', ''),
(39141091, 14111831, 2, '', '2013-01-05 00:00:00', ''),
(39266888, 14112532, 2, '', '2013-01-08 00:00:00', ''),
(39271209, 14112532, 2, '', '2013-01-08 00:00:00', ''),
(42618754, 14245913, 2, '', '2013-03-06 00:00:00', ''),
(45059892, 14114786, 2, '', '2013-04-13 00:00:00', ''),
(48005137, 14111677, 2, '', '2013-06-02 00:00:00', ''),
(48006423, 14245913, 2, '', '2013-06-02 00:00:00', ''),
(48263189, 14107919, 2, '', '2013-06-06 00:00:00', ''),
(49204460, 14245913, 2, '', '2013-06-21 00:00:00', ''),
(50677674, 17695402, 1, '', '2013-07-18 00:00:00', ''),
(50677683, 17695402, 2, '', '2013-07-18 00:00:00', ''),
(52658057, 14111831, 2, '', '2013-08-22 00:00:00', ''),
(53056617, 14792896, 2, '', '2013-08-29 00:00:00', ''),
(53600736, 14109137, 2, '', '2013-09-09 00:00:00', ''),
(55314078, 14112532, 2, '', '2013-10-10 00:00:00', ''),
(55442175, 14245913, 2, '', '2013-10-12 00:00:00', ''),
(56483886, 14117898, 2, '', '2013-10-30 00:00:00', ''),
(57662675, 14112532, 2, '', '2013-11-20 00:00:00', ''),
(57926082, 14115440, 2, '', '2013-11-25 00:00:00', ''),
(58858824, 14109474, 5, '1365008', '2013-12-11 00:00:00', ''),
(58858830, 14109474, 2, '', '2013-12-11 00:00:00', ''),
(58869273, 14111677, 2, '', '2013-12-11 00:00:00', ''),
(60164267, 14792896, 2, '', '2014-01-06 00:00:00', ''),
(60830947, 14111677, 2, '', '2014-01-16 00:00:00', ''),
(61465364, 14792896, 2, '', '2014-01-27 00:00:00', ''),
(61599521, 14111831, 2, '', '2014-01-29 00:00:00', ''),
(64591636, 14109474, 2, '', '2014-03-16 00:00:00', ''),
(65771805, 14113150, 2, '', '2014-04-03 00:00:00', ''),
(69299289, 14109474, 2, '', '2014-06-03 00:00:00', ''),
(69829628, 14109724, 2, '', '2014-06-12 00:00:00', ''),
(73713132, 14113150, 2, '', '2014-08-21 00:00:00', ''),
(74896370, 14113150, 2, '', '2014-09-11 00:00:00', ''),
(75019860, 14111831, 2, '', '2014-09-14 00:00:00', ''),
(75545443, 14117898, 2, '', '2014-09-23 00:00:00', ''),
(77244125, 14792896, 2, '', '2014-10-24 00:00:00', ''),
(79317965, 14109187, 5, '3128784', '2014-12-01 00:00:00', ''),
(79317970, 14109187, 2, '', '2014-12-01 00:00:00', ''),
(79445488, 14792896, 2, '', '2014-12-03 00:00:00', ''),
(79825541, 14113150, 2, '', '2014-12-09 00:00:00', ''),
(82036580, 14111828, 2, '', '2015-01-20 00:00:00', ''),
(38954290, 14112532, 2, '', '2013-01-02 00:00:00', ''),
(38955061, 14112532, 2, '', '2013-01-02 00:00:00', ''),
(38957302, 14112532, 2, '', '2013-01-02 00:00:00', ''),
(38957363, 14112582, 2, '', '2013-01-02 00:00:00', ''),
(38958047, 14112532, 2, '', '2013-01-02 00:00:00', ''),
(38958181, 14112532, 2, '', '2013-01-02 00:00:00', ''),
(38959156, 14112532, 2, '', '2013-01-02 00:00:00', ''),
(38959730, 14112582, 2, '', '2013-01-02 00:00:00', ''),
(38961876, 14112532, 2, '', '2013-01-02 00:00:00', ''),
(38962513, 14112532, 2, '', '2013-01-02 00:00:00', ''),
(38962600, 14120652, 2, '', '2013-01-02 00:00:00', ''),
(38965369, 14112064, 3, '', '2013-01-02 00:00:00', ''),
(38966068, 14112532, 2, '', '2013-01-02 00:00:00', ''),
(38966092, 14112532, 2, '', '2013-01-02 00:00:00', ''),
(39224034, 14112532, 2, '', '2013-01-07 00:00:00', ''),
(39356295, 14109187, 2, '', '2013-01-09 00:00:00', ''),
(39356297, 14109187, 5, '1152066', '2013-01-09 00:00:00', ''),
(39781636, 14112532, 2, '', '2013-01-16 00:00:00', ''),
(40193503, 14112532, 2, '', '2013-01-23 00:00:00', ''),
(40193537, 14120652, 3, '', '2013-01-23 00:00:00', ''),
(40195012, 14112532, 2, '', '2013-01-23 00:00:00', ''),
(40306222, 14112549, 2, '', '2013-01-25 00:00:00', ''),
(40852088, 14111828, 2, '', '2013-02-04 00:00:00', ''),
(40990449, 14111677, 2, '', '2013-02-06 00:00:00', ''),
(43295509, 14109187, 2, '', '2013-03-16 00:00:00', ''),
(43303304, 14114786, 2, '', '2013-03-16 00:00:00', ''),
(43437758, 14115440, 2, '', '2013-03-18 00:00:00', ''),
(43713261, 14245913, 2, '', '2013-03-22 00:00:00', ''),
(44410366, 14109906, 2, '', '2013-04-03 00:00:00', ''),
(44415411, 14245913, 2, '', '2013-04-03 00:00:00', ''),
(45337971, 14117898, 2, '', '2013-04-17 00:00:00', ''),
(45746554, 14114786, 2, '', '2013-04-24 00:00:00', ''),
(46414253, 14111677, 2, '', '2013-05-06 00:00:00', ''),
(47494128, 14117898, 2, '', '2013-05-24 00:00:00', ''),
(49350715, 14114786, 2, '', '2013-06-24 00:00:00', ''),
(50588064, 14114786, 2, '', '2013-07-17 00:00:00', ''),
(50846245, 14109187, 5, '383414', '2013-07-22 00:00:00', ''),
(53093218, 14792896, 2, '', '2013-08-30 00:00:00', ''),
(53820731, 14112532, 2, '', '2013-09-13 00:00:00', ''),
(54628148, 14113150, 2, '', '2013-09-27 00:00:00', ''),
(55408161, 14113150, 2, '', '2013-10-11 00:00:00', ''),
(56862318, 14109187, 5, '962845', '2013-11-06 00:00:00', ''),
(57249162, 14109474, 2, '', '2013-11-13 00:00:00', ''),
(57513134, 14117898, 2, '', '2013-11-18 00:00:00', ''),
(57513484, 14112532, 2, '', '2013-11-18 00:00:00', ''),
(62389567, 14113150, 2, '', '2014-02-11 00:00:00', ''),
(66445090, 14109187, 2, '', '2014-04-15 00:00:00', ''),
(66445092, 14109187, 5, '1393623', '2014-04-15 00:00:00', ''),
(69580009, 14115440, 5, '119215', '2014-06-08 00:00:00', ''),
(69580010, 14115440, 2, '', '2014-06-08 00:00:00', ''),
(70736002, 14109724, 2, '', '2014-06-29 00:00:00', ''),
(72142521, 14111831, 2, '', '2014-07-24 00:00:00', ''),
(73193298, 14245913, 2, '', '2014-08-12 00:00:00', ''),
(73455747, 14114786, 2, '', '2014-08-16 00:00:00', ''),
(73599351, 14109674, 2, '', '2014-08-19 00:00:00', ''),
(73883738, 14109474, 2, '', '2014-08-25 00:00:00', ''),
(75068245, 14107919, 5, '1623354', '2014-09-15 00:00:00', ''),
(76503470, 26308288, 2, '', '2014-10-10 00:00:00', ''),
(76504723, 26308288, 16, '', '2014-10-10 00:00:00', ''),
(77663942, 26308288, 2, '', '2014-10-31 00:00:00', ''),
(78184245, 14114786, 2, '', '2014-11-10 00:00:00', ''),
(78567733, 14792896, 2, '', '2014-11-17 00:00:00', ''),
(79979362, 14109474, 5, '4329304', '2014-12-12 00:00:00', ''),
(38936479, 14112532, 2, '', '2013-01-01 00:00:00', ''),
(38937066, 14112532, 2, '', '2013-01-01 00:00:00', ''),
(38938058, 14111828, 2, '', '2013-01-01 00:00:00', ''),
(38938078, 14112582, 2, '', '2013-01-01 00:00:00', ''),
(38938501, 14112532, 2, '', '2013-01-01 00:00:00', ''),
(38938891, 14114786, 2, '', '2013-01-01 00:00:00', ''),
(38939031, 14114786, 1, '', '2013-01-01 00:00:00', ''),
(38939033, 14112582, 2, '', '2013-01-01 00:00:00', ''),
(38939732, 14112532, 2, '', '2013-01-01 00:00:00', ''),
(38940140, 14111831, 5, '1187415', '2013-01-01 00:00:00', ''),
(38940147, 14112532, 2, '', '2013-01-01 00:00:00', ''),
(38942104, 14112532, 2, '', '2013-01-02 00:00:00', ''),
(38942824, 14112582, 2, '', '2013-01-02 00:00:00', ''),
(38943035, 14112549, 2, '', '2013-01-02 00:00:00', ''),
(38943059, 14114786, 2, '', '2013-01-02 00:00:00', ''),
(38945064, 14112064, 3, '', '2013-01-02 00:00:00', ''),
(38945113, 14111831, 2, '', '2013-01-02 00:00:00', ''),
(38945116, 14111831, 5, '359307', '2013-01-02 00:00:00', ''),
(38946385, 14112532, 2, '', '2013-01-02 00:00:00', ''),
(38946833, 14116626, 2, '', '2013-01-02 00:00:00', ''),
(38947045, 14116626, 2, '', '2013-01-02 00:00:00', ''),
(38947116, 14112532, 2, '', '2013-01-02 00:00:00', ''),
(38947609, 14112532, 2, '', '2013-01-02 00:00:00', ''),
(38948005, 14113150, 2, '', '2013-01-02 00:00:00', ''),
(38948851, 14109906, 2, '', '2013-01-02 00:00:00', ''),
(38949876, 14112532, 2, '', '2013-01-02 00:00:00', ''),
(38949900, 14112582, 2, '', '2013-01-02 00:00:00', ''),
(38952190, 14112532, 2, '', '2013-01-02 00:00:00', ''),
(38953031, 14114786, 2, '', '2013-01-02 00:00:00', ''),
(39241546, 14112532, 2, '', '2013-01-07 00:00:00', ''),
(39512581, 14245913, 2, '', '2013-01-11 00:00:00', ''),
(39774518, 14112532, 2, '', '2013-01-16 00:00:00', ''),
(40019869, 14113150, 1, '', '2013-01-21 00:00:00', ''),
(43753355, 14109906, 2, '', '2013-03-23 00:00:00', ''),
(43769104, 14111677, 2, '', '2013-03-23 00:00:00', ''),
(44034540, 14109906, 2, '', '2013-03-27 00:00:00', ''),
(44855506, 14109906, 2, '', '2013-04-10 00:00:00', ''),
(46445306, 14109474, 2, '', '2013-05-07 00:00:00', ''),
(46445309, 14109474, 5, '194319', '2013-05-07 00:00:00', ''),
(52771048, 14115440, 2, '', '2013-08-25 00:00:00', ''),
(53545441, 14792896, 2, '', '2013-09-08 00:00:00', ''),
(54439519, 14113150, 2, '', '2013-09-24 00:00:00', ''),
(55891502, 14109187, 2, '', '2013-10-21 00:00:00', ''),
(56655660, 14114786, 2, '', '2013-11-03 00:00:00', ''),
(59214736, 14792896, 2, '', '2013-12-17 00:00:00', ''),
(59452985, 14115440, 2, '', '2013-12-21 00:00:00', ''),
(61543467, 14112064, 3, '', '2014-01-28 00:00:00', ''),
(61543477, 14111831, 2, '', '2014-01-28 00:00:00', ''),
(61930537, 14792896, 2, '', '2014-02-04 00:00:00', ''),
(62849246, 14245913, 2, '', '2014-02-18 00:00:00', ''),
(63503826, 20709912, 2, '', '2014-02-27 00:00:00', ''),
(64951812, 14117898, 2, '', '2014-03-21 00:00:00', ''),
(66363634, 14117898, 2, '', '2014-04-14 00:00:00', ''),
(67002140, 14113150, 2, '', '2014-04-24 00:00:00', ''),
(67288220, 14117898, 2, '', '2014-04-29 00:00:00', ''),
(67413744, 14109724, 2, '', '2014-05-01 00:00:00', ''),
(67426989, 20709912, 2, '', '2014-05-02 00:00:00', ''),
(68451762, 14117898, 2, '', '2014-05-19 00:00:00', ''),
(75759070, 14111831, 2, '', '2014-09-27 00:00:00', ''),
(77939550, 14109187, 5, '4172820', '2014-11-06 00:00:00', ''),
(79368410, 14113150, 2, '', '2014-12-02 00:00:00', ''),
(80647574, 14115440, 2, '', '2014-12-23 00:00:00', ''),
(81030513, 26308288, 2, '', '2015-01-02 00:00:00', '');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `Users`
--
ALTER TABLE `Users`
 ADD PRIMARY KEY (`Id`);

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
